#__AW_Repository_Version '14.2.12.0000';
#__AW_Product_Version '14.2.12.2235';
#__AW_ATL_Locale 'eng_us.utf-8';

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '823' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '3' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Accounting Document Header' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:42 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:31 2021' )
CREATE TABLE SOURCE_SAP_LI."".BKPF(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
BUKRS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Company Code'), 
BELNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Accounting Document Number'), 
GJAHR NUMERIC(4, 0)  KEY  NOT NULL  SET("Description" = 'Fiscal Year'), 
BLART CHAR(2)  NULL  SET("Description" = 'Document Type'), 
BLDAT DATE  NULL  SET("Description" = 'Document Date in Document'), 
BUDAT DATE  NULL  SET("Description" = 'Posting Date in the Document'), 
MONAT NUMERIC(2, 0)  NULL  SET("Description" = 'Fiscal Period'), 
CPUDT DATE  NULL  SET("Description" = 'Day On Which Accounting Document Was Entered'), 
CPUTM TIME  NULL  SET("Description" = 'Time of Entry'), 
AEDAT DATE  NULL  SET("Description" = 'Date of the Last Document Change by Transaction'), 
UPDDT DATE  NULL  SET("Description" = 'Date of the Last Document Update'), 
WWERT DATE  NULL  SET("Description" = 'Translation Date'), 
USNAM CHAR(12)  NULL  SET("Description" = 'User name'), 
TCODE CHAR(20)  NULL  SET("Description" = 'Transaction Code'), 
BVORG CHAR(16)  NULL  SET("Description" = 'Number of Cross-Company Code Posting Transaction'), 
XBLNR CHAR(16)  NULL  SET("Description" = 'Reference Document Number'), 
DBBLG CHAR(10)  NULL  SET("Description" = 'Recurring Entry Document Number'), 
STBLG CHAR(10)  NULL  SET("Description" = 'Reverse Document Number'), 
STJAH NUMERIC(4, 0)  NULL  SET("Description" = 'Reverse document fiscal year'), 
BKTXT CHAR(25)  NULL  SET("Description" = 'Document Header Text'), 
WAERS CHAR(5)  NULL  SET("Description" = 'Currency Key'), 
KURSF DECIMAL(9, 5)  NULL  SET("Description" = 'Exchange rate'), 
KZWRS CHAR(5)  NULL  SET("Description" = 'Currency Key for the Group Currency'), 
KZKRS DECIMAL(9, 5)  NULL  SET("Description" = 'Group Currency Exchange Rate'), 
BSTAT CHAR(1)  NULL  SET("Description" = 'Document Status'), 
XNETB CHAR(1)  NULL  SET("Description" = 'Indicator: Document posted net ?'), 
FRATH DECIMAL(13, 2)  NULL  SET("Description" = 'Unplanned delivery costs'), 
XRUEB CHAR(1)  NULL  SET("Description" = 'Indicator: Document is posted to a previous period'), 
GLVOR CHAR(4)  NULL  SET("Description" = 'Business Transaction'), 
GRPID CHAR(12)  NULL  SET("Description" = 'Batch Input Session Name'), 
DOKID CHAR(40)  NULL  SET("Description" = 'Document Name in the Archive System'), 
ARCID CHAR(10)  NULL  SET("Description" = 'Extract ID Document Header'), 
IBLAR CHAR(2)  NULL  SET("Description" = 'Internal Document Type for Document Control'), 
AWTYP CHAR(5)  NULL  SET("Description" = 'Reference Transaction'), 
AWKEY CHAR(20)  NULL  SET("Description" = 'Reference Key'), 
FIKRS CHAR(4)  NULL  SET("Description" = 'Financial Management Area'), 
HWAER CHAR(5)  NULL  SET("Description" = 'Local Currency'), 
HWAE2 CHAR(5)  NULL  SET("Description" = 'Currency Key of Second Local Currency'), 
HWAE3 CHAR(5)  NULL  SET("Description" = 'Currency Key of Third Local Currency'), 
KURS2 DECIMAL(9, 5)  NULL  SET("Description" = 'Exchange Rate for the Second Local Currency'), 
KURS3 DECIMAL(9, 5)  NULL  SET("Description" = 'Exchange Rate for the Third Local Currency'), 
BASW2 CHAR(1)  NULL  SET("Description" = 'Source Currency for Currency Translation'), 
BASW3 CHAR(1)  NULL  SET("Description" = 'Source Currency for Currency Translation'), 
UMRD2 CHAR(1)  NULL  SET("Description" = 'Translation Date Type for Second Local Currency'), 
UMRD3 CHAR(1)  NULL  SET("Description" = 'Translation Date Type for Third Local Currency'), 
XSTOV CHAR(1)  NULL  SET("Description" = 'Indicator: Document is flagged for reversal'), 
STODT DATE  NULL  SET("Description" = 'Planned Date for the Reverse Posting'), 
XMWST CHAR(1)  NULL  SET("Description" = 'Calculate tax automatically'), 
CURT2 CHAR(2)  NULL  SET("Description" = 'Currency Type of Second Local Currency'), 
CURT3 CHAR(2)  NULL  SET("Description" = 'Currency Type of Third Local Currency'), 
KUTY2 CHAR(4)  NULL  SET("Description" = 'Exchange Rate Type'), 
KUTY3 CHAR(4)  NULL  SET("Description" = 'Exchange Rate Type'), 
XSNET CHAR(1)  NULL  SET("Description" = 'G/L account amounts entered exclude tax'), 
AUSBK CHAR(4)  NULL  SET("Description" = 'Source Company Code'), 
XUSVR CHAR(1)  NULL  SET("Description" = 'Indicator: US taxes changed at detail level ?'), 
DUEFL CHAR(1)  NULL  SET("Description" = 'Status of Data Transfer into Subsequent Release'), 
AWSYS CHAR(10)  NULL  SET("Description" = 'Logical System'), 
TXKRS DECIMAL(9, 5)  NULL  SET("Description" = 'Exchange Rate for Taxes'), 
LOTKZ CHAR(10)  NULL  SET("Description" = 'Lot Number for Requests'), 
XWVOF CHAR(1)  NULL  SET("Description" = 'Indicator: Customer bill of exchange payment before due date'), 
STGRD CHAR(2)  NULL  SET("Description" = 'Reason for Reversal'), 
PPNAM CHAR(12)  NULL  SET("Description" = 'Name of User Who Parked this Document'), 
BRNCH CHAR(4)  NULL  SET("Description" = 'Branch Number'), 
NUMPG NUMERIC(3, 0)  NULL  SET("Description" = 'Number of pages of invoice'), 
ADISC CHAR(1)  NULL  SET("Description" = 'Indicator: entry represents a discount document'), 
XREF1_HD CHAR(20)  NULL  SET("Description" = 'Reference Key 1 Internal for Document Header'), 
XREF2_HD CHAR(20)  NULL  SET("Description" = 'Reference Key 2 Internal for Document Header'), 
XREVERSAL CHAR(1)  NULL  SET("Description" = 'Specifies whether doc. is reversal doc. or reversed doc.'), 
REINDAT DATE  NULL  SET("Description" = 'Invoice Receipt Date'), 
RLDNR CHAR(2)  NULL  SET("Description" = 'Ledger in General Ledger Accounting'), 
LDGRP CHAR(4)  NULL  SET("Description" = 'Ledger Group'), 
PROPMANO CHAR(13)  NULL  SET("Description" = 'Real Estate Management Mandate'), 
XBLNR_ALT CHAR(26)  NULL  SET("Description" = 'Alternative Reference Number'), 
VATDATE DATE  NULL  SET("Description" = 'Tax Reporting Date'), 
DOCCAT CHAR(6)  NULL  SET("Description" = 'Classification of an FI Document'), 
XSPLIT CHAR(1)  NULL  SET("Description" = 'FI Document Originates from Split Posting (Indicator)'), 
CASH_ALLOC CHAR(1)  NULL  SET("Description" = 'Cash-Relevant Document'), 
FOLLOW_ON CHAR(1)  NULL  SET("Description" = 'Follow-on document indicator'), 
XREORG CHAR(1)  NULL  SET("Description" = 'Doc. Contains Open Item that Was Transferred During Reorg.'), 
SUBSET CHAR(4)  NULL  SET("Description" = 'Defines subset of components for the FI/CO interface'), 
KURST CHAR(4)  NULL  SET("Description" = 'Exchange Rate Type'), 
KURSX DECIMAL(28, 14)  NULL  SET("Description" = 'Market Data Exchange Rate'), 
KUR2X DECIMAL(28, 14)  NULL  SET("Description" = 'Market Data Exchange Rate 2'), 
KUR3X DECIMAL(28, 14)  NULL  SET("Description" = 'Market Data Exchange Rate 3'), 
XMCA CHAR(1)  NULL  SET("Description" = 'Document Originates from Multi Currency Accounting'), 
"/SAPF15/STATUS" CHAR(1)  NULL  SET("Description" = 'Document Status'), 
PSOTY CHAR(2)  NULL  SET("Description" = 'Document category payment requests'), 
PSOAK CHAR(10)  NULL  SET("Description" = 'Reason'), 
PSOKS CHAR(10)  NULL  SET("Description" = 'Region'), 
PSOSG CHAR(1)  NULL  SET("Description" = 'Reason for reversal - IS-PS requests'), 
PSOFN CHAR(30)  NULL  SET("Description" = 'IS-PS: File number'), 
INTFORM CHAR(4)  NULL  SET("Description" = 'Interest Formula'), 
INTDATE DATE  NULL  SET("Description" = 'Interest Calc. Date'), 
PSOBT DATE  NULL  SET("Description" = 'Posting Day'), 
PSOZL CHAR(1)  NULL  SET("Description" = 'Actual posting'), 
PSODT DATE  NULL  SET("Description" = 'Changed On'), 
PSOTM TIME  NULL  SET("Description" = 'Last changed at'), 
FM_UMART CHAR(1)  NULL  SET("Description" = 'Type of Payment Transfer'), 
CCINS CHAR(4)  NULL  SET("Description" = 'Payment cards: Card type'), 
CCNUM CHAR(25)  NULL  SET("Description" = 'Payment cards: Card number'), 
SSBLK CHAR(1)  NULL  SET("Description" = 'Payment Statistical Sampling Block'), 
BATCH CHAR(10)  NULL  SET("Description" = 'Lot Number for Documents'), 
SNAME CHAR(12)  NULL  SET("Description" = 'User Name'), 
SAMPLED CHAR(1)  NULL  SET("Description" = 'Sampled Invoice by Payment Certification'), 
EXCLUDE_FLAG CHAR(1)  NULL  SET("Description" = 'PPA Exclude Indicator'), 
BLIND CHAR(1)  NULL  SET("Description" = 'Budgetary Ledger Indicator'), 
OFFSET_STATUS CHAR(2)  NULL  SET("Description" = 'Treasury Offset Status'), 
OFFSET_REFER_DAT DATE  NULL  SET("Description" = 'Date Record Referred to Treasury'), 
PENRC CHAR(2)  NULL  SET("Description" = 'Reason for Late Payment'), 
KNUMV CHAR(10)  NULL  SET("Description" = 'Number of the document condition')) 
PRIMARY KEY (BUKRS, BELNR, GJAHR) 
CREATE_INDEX "1" ON (BUKRS, BSTAT, XBLNR) 
CREATE_INDEX "2" ON (BUKRS, BSTAT, BUDAT) 
CREATE_INDEX "3" ON (BUKRS, BSTAT, BLART) 
CREATE_INDEX "4" ON (AWTYP, AWKEY, AWSYS) 
CREATE_INDEX "5" ON (BUKRS, CPUDT, BSTAT) 
CREATE_INDEX "6" ON (BUKRS, BLDAT, BSTAT) 
CREATE_INDEX BUT ON (PSOBT, PSOZL, BUKRS) 
CREATE_INDEX "PRIMARY" ON (BUKRS, BELNR, GJAHR) PRIMARY 
FOREIGN KEY  (LDGRP) REFERENCES FAGL_TLDGRP (LDGRP)
FOREIGN KEY  (BUKRS, BRNCH) REFERENCES J_1BBRANCH (BUKRS, BRANCH)
FOREIGN KEY  (PSOAK) REFERENCES PSO12 (PSOAK)
FOREIGN KEY  (PSOTY) REFERENCES PSOTP (PSOTYP)
FOREIGN KEY  (AUSBK) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BLART) REFERENCES T003 (BLART)
FOREIGN KEY  (STGRD) REFERENCES T041C (STGRD)
FOREIGN KEY  (BUKRS, RLDNR) REFERENCES T882G (RBUKRS, RLDNR)
FOREIGN KEY  (CCINS) REFERENCES TCRIN (CCINS)
FOREIGN KEY  (KZWRS) REFERENCES TCURC (WAERS)
FOREIGN KEY  (WAERS) REFERENCES TCURC (WAERS)
FOREIGN KEY  (KURST) REFERENCES TCURV (KURST)
FOREIGN KEY  (KUTY2) REFERENCES TCURV (KURST)
FOREIGN KEY  (KUTY3) REFERENCES TCURV (KURST);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '1459' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '2' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Accounting: Secondary Index for Vendors (Cleared Items)' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_modified',ActaValue_11 = 'Thu Mar  4 02:38:32 2021' , 
ActaName_12 = 'RDate_created',ActaValue_12 = 'Tue Jul 28 19:47:43 2020' , 
ActaName_13 = 'RDate_last_loaded',ActaValue_13 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".BSAK(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
BUKRS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Company Code'), 
LIFNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
UMSKS CHAR(1)  KEY  NOT NULL  SET("Description" = 'Special G/L Transaction Type'), 
UMSKZ CHAR(1)  KEY  NOT NULL  SET("Description" = 'Special G/L Indicator'), 
AUGDT DATE  KEY  NOT NULL  SET("Description" = 'Clearing Date'), 
AUGBL CHAR(10)  KEY  NOT NULL  SET("Description" = 'Document Number of the Clearing Document'), 
ZUONR CHAR(18)  KEY  NOT NULL  SET("Description" = 'Assignment Number'), 
GJAHR NUMERIC(4, 0)  KEY  NOT NULL  SET("Description" = 'Fiscal Year'), 
BELNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Accounting Document Number'), 
BUZEI NUMERIC(3, 0)  KEY  NOT NULL  SET("Description" = 'Number of Line Item Within Accounting Document'), 
BUDAT DATE  NULL  SET("Description" = 'Posting Date in the Document'), 
BLDAT DATE  NULL  SET("Description" = 'Document Date in Document'), 
CPUDT DATE  NULL  SET("Description" = 'Day On Which Accounting Document Was Entered'), 
WAERS CHAR(5)  NULL  SET("Description" = 'Currency Key'), 
XBLNR CHAR(16)  NULL  SET("Description" = 'Reference Document Number'), 
BLART CHAR(2)  NULL  SET("Description" = 'Document Type'), 
MONAT NUMERIC(2, 0)  NULL  SET("Description" = 'Fiscal Period'), 
BSCHL CHAR(2)  NULL  SET("Description" = 'Posting Key'), 
ZUMSK CHAR(1)  NULL  SET("Description" = 'Target Special G/L Indicator'), 
SHKZG CHAR(1)  NULL  SET("Description" = 'Debit/Credit Indicator'), 
GSBER CHAR(4)  NULL  SET("Description" = 'Business Area'), 
MWSKZ CHAR(2)  NULL  SET("Description" = 'Tax on sales/purchases code'), 
DMBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency'), 
WRBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Document Currency'), 
MWSTS DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Local Currency'), 
WMWST DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Document Currency'), 
BDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference'), 
BDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Second Local Currency'), 
SGTXT CHAR(50)  NULL  SET("Description" = 'Item Text'), 
PROJN CHAR(16)  NULL  SET("Description" = 'Old: Project number : No longer used --> PS_POSNR'), 
AUFNR CHAR(12)  NULL  SET("Description" = 'Order Number'), 
ANLN1 CHAR(12)  NULL  SET("Description" = 'Main Asset Number'), 
ANLN2 CHAR(4)  NULL  SET("Description" = 'Asset Subnumber'), 
EBELN CHAR(10)  NULL  SET("Description" = 'Purchasing Document Number'), 
EBELP NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Purchasing Document'), 
SAKNR CHAR(10)  NULL  SET("Description" = 'G/L Account Number'), 
HKONT CHAR(10)  NULL  SET("Description" = 'General Ledger Account'), 
FKONT NUMERIC(3, 0)  NULL  SET("Description" = 'Financial Budget Item'), 
FILKD CHAR(10)  NULL  SET("Description" = 'Account Number of the Branch'), 
ZFBDT DATE  NULL  SET("Description" = 'Baseline Date for Due Date Calculation'), 
ZTERM CHAR(4)  NULL  SET("Description" = 'Terms of Payment Key'), 
ZBD1T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 1'), 
ZBD2T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 2'), 
ZBD3T DECIMAL(3, 0)  NULL  SET("Description" = 'Net Payment Terms Period'), 
ZBD1P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 1'), 
ZBD2P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 2'), 
SKFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount Eligible for Cash Discount in Document Currency'), 
SKNTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Local Currency'), 
WSKTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Document Currency'), 
ZLSCH CHAR(1)  NULL  SET("Description" = 'Payment Method'), 
ZLSPR CHAR(1)  NULL  SET("Description" = 'Payment Block Key'), 
ZBFIX CHAR(1)  NULL  SET("Description" = 'Fixed Payment Terms'), 
HBKID CHAR(5)  NULL  SET("Description" = 'Short Key for a House Bank'), 
BVTYP CHAR(4)  NULL  SET("Description" = 'Partner Bank Type'), 
REBZG CHAR(10)  NULL  SET("Description" = 'Number of the Invoice the Transaction Belongs to'), 
REBZJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Relevant Invoice (for Credit Memo)'), 
REBZZ NUMERIC(3, 0)  NULL  SET("Description" = 'Line Item in the Relevant Invoice'), 
SAMNR NUMERIC(8, 0)  NULL  SET("Description" = 'Invoice List Number'), 
ZOLLT CHAR(8)  NULL  SET("Description" = 'Customs Tariff Number'), 
ZOLLD DATE  NULL  SET("Description" = 'Customs Date'), 
LZBKZ CHAR(3)  NULL  SET("Description" = 'State Central Bank Indicator'), 
LANDL CHAR(3)  NULL  SET("Description" = 'Supplying Country'), 
DIEKZ CHAR(1)  NULL  SET("Description" = 'Service Indicator (Foreign Payment)'), 
MANSP CHAR(1)  NULL  SET("Description" = 'Dunning Block'), 
MSCHL CHAR(1)  NULL  SET("Description" = 'Dunning Key'), 
MADAT DATE  NULL  SET("Description" = 'Date of Last Dunning Notice'), 
MANST NUMERIC(1, 0)  NULL  SET("Description" = 'Dunning Level'), 
MABER CHAR(2)  NULL  SET("Description" = 'Dunning Area'), 
XNETB CHAR(1)  NULL  SET("Description" = 'Indicator: Document posted net ?'), 
XANET CHAR(1)  NULL  SET("Description" = 'Indicator: Down Payment in Net Procedure?'), 
XCPDD CHAR(1)  NULL  SET("Description" = 'Indicator: Address and Bank Data Set Individually'), 
XESRD CHAR(1)  NULL  SET("Description" = 'Indicator: Is any ISR data set in the document ?'), 
XZAHL CHAR(1)  NULL  SET("Description" = 'Indicator: Is Posting Key Used in a Payment Transaction?'), 
MWSK1 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK2 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK3 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
QSSKZ CHAR(2)  NULL  SET("Description" = 'Withholding Tax Code'), 
QSSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Base Amount'), 
QBSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Amount (in Document Currency)'), 
BSTAT CHAR(1)  NULL  SET("Description" = 'Document Status'), 
ANFBN CHAR(10)  NULL  SET("Description" = 'Document Number of the Bill of Exchange Payment Request'), 
ANFBJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Bill of Exchange Payment Request Document'), 
ANFBU CHAR(4)  NULL  SET("Description" = 'Company Code in Which Bill of Exch.Payment Request Is Posted'), 
VBUND CHAR(6)  NULL  SET("Description" = 'Company ID of Trading Partner'), 
REBZT CHAR(1)  NULL  SET("Description" = 'Follow-On Document Type'), 
STCEG CHAR(20)  NULL  SET("Description" = 'VAT Registration Number'), 
EGBLD CHAR(3)  NULL  SET("Description" = 'Country of Destination for Delivery of Goods'), 
EGLLD CHAR(3)  NULL  SET("Description" = 'Supplying Country for Delivery of Goods'), 
QSZNR CHAR(10)  NULL  SET("Description" = 'Certificate Number of the Withholding Tax Exemption'), 
QSFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax-Exempt Amount (in Document Currency)'), 
XINVE CHAR(1)  NULL  SET("Description" = 'Indicator: Capital Goods Affected?'), 
PROJK NUMERIC(8, 0)  NULL  SET("Description" = 'Work Breakdown Structure Element (WBS Element)'), 
FIPOS CHAR(14)  NULL  SET("Description" = 'Commitment Item'), 
NPLNR CHAR(12)  NULL  SET("Description" = 'Network Number for Account Assignment'), 
AUFPL NUMERIC(10, 0)  NULL  SET("Description" = 'Routing number of operations in the order'), 
APLZL NUMERIC(8, 0)  NULL  SET("Description" = 'Internal counter'), 
XEGDR CHAR(1)  NULL  SET("Description" = 'Indicator: Triangular deal within the EU ?'), 
DMBE2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency'), 
DMBE3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency'), 
DMB21 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB22 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB23 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB31 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB32 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB33 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
MWST2 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Second Local Currency'), 
MWST3 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Third Local Currency'), 
SKNT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Second Local Currency'), 
SKNT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Third Local Currency'), 
BDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Third Local Currency'), 
XRAGL CHAR(1)  NULL  SET("Description" = 'Indicator: Clearing was Reversed'), 
RSTGR CHAR(3)  NULL  SET("Description" = 'Reason Code for Payments'), 
UZAWE CHAR(2)  NULL  SET("Description" = 'Payment Method Supplement'), 
KOSTL CHAR(10)  NULL  SET("Description" = 'Cost Center'), 
LNRAN NUMERIC(5, 0)  NULL  SET("Description" = 'Sequence Number of Asset Line Items in Fiscal Year'), 
XSTOV CHAR(1)  NULL  SET("Description" = 'Indicator: Document is flagged for reversal'), 
KZBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Original Reduction Amount in Local Currency'), 
XREF1 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
XREF2 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
XARCH CHAR(1)  NULL  SET("Description" = 'Indicator: Document already archived ?'), 
PSWSL CHAR(5)  NULL  SET("Description" = 'Update Currency for General Ledger Transaction Figures'), 
PSWBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount for Updating in General Ledger'), 
IMKEY CHAR(8)  NULL  SET("Description" = 'Internal Key for Real Estate Object'), 
ZEKKN NUMERIC(2, 0)  NULL  SET("Description" = 'Sequential Number of Account Assignment'), 
FISTL CHAR(16)  NULL  SET("Description" = 'Funds Center'), 
GEBER CHAR(10)  NULL  SET("Description" = 'Fund'), 
DABRZ DATE  NULL  SET("Description" = 'Reference Date for Settlement'), 
XNEGP CHAR(1)  NULL  SET("Description" = 'Indicator: Negative posting'), 
EMPFB CHAR(10)  NULL  SET("Description" = 'Payee/Payer'), 
PRCTR CHAR(10)  NULL  SET("Description" = 'Profit Center'), 
XREF3 CHAR(20)  NULL  SET("Description" = 'Reference Key for Line Item'), 
DTWS1 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 1'), 
DTWS2 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 2'), 
DTWS3 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 3'), 
DTWS4 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 4'), 
XPYPR CHAR(1)  NULL  SET("Description" = 'Indicator: Items from Payment Program Blocked'), 
KIDNO CHAR(30)  NULL  SET("Description" = 'Payment Reference'), 
PYCUR CHAR(5)  NULL  SET("Description" = 'Currency for Automatic Payment'), 
PYAMT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Payment Currency'), 
BUPLA CHAR(4)  NULL  SET("Description" = 'Business Place'), 
SECCO CHAR(4)  NULL  SET("Description" = 'Section Code'), 
PPDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 1.Loc.Curr.(Part Payments)'), 
PPDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 2.Loc. Curr.(Part Payments)'), 
PPDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 3.Loc.Curr.(Part Payments)'), 
PENLC1 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in First Local Currency'), 
PENLC2 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Second Local Currency'), 
PENLC3 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Third Local Currency'), 
PENFC DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Document Currency'), 
PENDAYS INT  NULL  SET("Description" = 'Number of Days for Penalty Charge Calculation'), 
PENRC CHAR(2)  NULL  SET("Description" = 'Reason for Late Payment'), 
VERTT CHAR(1)  NULL  SET("Description" = 'Contract Type'), 
VERTN CHAR(13)  NULL  SET("Description" = 'Contract Number'), 
VBEWA CHAR(4)  NULL  SET("Description" = 'Flow Type'), 
KBLNR CHAR(10)  NULL  SET("Description" = 'Document Number for Earmarked Funds'), 
KBLPOS NUMERIC(3, 0)  NULL  SET("Description" = 'Earmarked Funds: Document Item'), 
GRANT_NBR CHAR(20)  NULL  SET("Description" = 'Grant'), 
GMVKZ CHAR(1)  NULL  SET("Description" = 'Item is in Execution'), 
SRTYPE CHAR(2)  NULL  SET("Description" = 'Type of Additional Receivable'), 
LOTKZ CHAR(10)  NULL  SET("Description" = 'Lot Number for Requests'), 
ZINKZ CHAR(2)  NULL  SET("Description" = 'Exempted from Interest Calculation'), 
FKBER CHAR(16)  NULL  SET("Description" = 'Functional Area'), 
INTRENO CHAR(13)  NULL  SET("Description" = 'Internal Real Estate Master Data Code'), 
PPRCT CHAR(10)  NULL  SET("Description" = 'Partner Profit Center'), 
BUZID CHAR(1)  NULL  SET("Description" = 'Identification of the Line Item'), 
AUGGJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of Clearing Document'), 
HKTID CHAR(5)  NULL  SET("Description" = 'ID for Account Details'), 
BUDGET_PD CHAR(10)  NULL  SET("Description" = 'FM: Budget Period'), 
KONTT CHAR(2)  NULL  SET("Description" = 'Account Assignment Category for Industry Solution'), 
KONTL CHAR(50)  NULL  SET("Description" = 'Acct Assignment String for Industry-Specific Acct Assignmnts'), 
UEBGDAT DATE  NULL  SET("Description" = 'Transfer date of an item to legal dunning proceeding'), 
VNAME CHAR(6)  NULL  SET("Description" = 'Joint Venture'), 
EGRUP CHAR(3)  NULL  SET("Description" = 'Equity Group'), 
BTYPE CHAR(2)  NULL  SET("Description" = 'Payroll Type'), 
PROPMANO CHAR(13)  NULL  SET("Description" = 'Mandate, Mandate-Opening Contract')) 
PRIMARY KEY (BUKRS, LIFNR, UMSKS, UMSKZ, AUGDT, AUGBL, ZUONR, GJAHR, BELNR, BUZEI) 
CREATE_INDEX "1" ON (LIFNR, BUKRS, AUGDT, AUGBL, GJAHR, BELNR, BUZEI) 
CREATE_INDEX "4" ON (BUKRS, REBZG, REBZJ, REBZZ, LIFNR, UMSKS, REBZT) 
CREATE_INDEX "5" ON (BUKRS, BELNR, GJAHR, BUZEI) 
CREATE_INDEX "6" ON (BUKRS, CPUDT) 
CREATE_INDEX "PRIMARY" ON (BUKRS, LIFNR, UMSKS, UMSKZ, AUGDT, AUGBL, ZUONR, GJAHR, BELNR, BUZEI) PRIMARY 
FOREIGN KEY  (ANFBU, ANLN1, ANLN2, ANFBJ, LNRAN) REFERENCES ANEK (BUKRS, ANLN1, ANLN2, GJAHR, LNRAN)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LIFNR, BUKRS) REFERENCES LFB1 (LIFNR, BUKRS)
FOREIGN KEY  (UZAWE) REFERENCES T042F (UZAWE)
FOREIGN KEY  (BTYPE) REFERENCES T8JA (BILIND)
FOREIGN KEY  (BUKRS, VNAME, EGRUP) REFERENCES T8JF (BUKRS, VNAME, EGRUP)
FOREIGN KEY  (BUKRS, VNAME) REFERENCES T8JV (BUKRS, VNAME)
FOREIGN KEY  (PSWSL) REFERENCES TCURC (WAERS);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '2536' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '4' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Cluster Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Accounting Document Segment' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '3' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'cluster' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:43 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:34 2021' )
CREATE TABLE SOURCE_SAP_LI."".BSEG(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
BUKRS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Company Code'), 
BELNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Accounting Document Number'), 
GJAHR NUMERIC(4, 0)  KEY  NOT NULL  SET("Description" = 'Fiscal Year'), 
BUZEI NUMERIC(3, 0)  KEY  NOT NULL  SET("Description" = 'Number of Line Item Within Accounting Document'), 
BUZID CHAR(1)  NULL  SET("Description" = 'Identification of the Line Item'), 
AUGDT DATE  NULL  SET("Description" = 'Clearing Date'), 
AUGCP DATE  NULL  SET("Description" = 'Clearing Entry Date'), 
AUGBL CHAR(10)  NULL  SET("Description" = 'Document Number of the Clearing Document'), 
BSCHL CHAR(2)  NULL  SET("Description" = 'Posting Key'), 
KOART CHAR(1)  NULL  SET("Description" = 'Account Type'), 
UMSKZ CHAR(1)  NULL  SET("Description" = 'Special G/L Indicator'), 
UMSKS CHAR(1)  NULL  SET("Description" = 'Special G/L Transaction Type'), 
ZUMSK CHAR(1)  NULL  SET("Description" = 'Target Special G/L Indicator'), 
SHKZG CHAR(1)  NULL  SET("Description" = 'Debit/Credit Indicator'), 
GSBER CHAR(4)  NULL  SET("Description" = 'Business Area'), 
PARGB CHAR(4)  NULL  SET("Description" = 'Trading Partner\'s Business Area'), 
MWSKZ CHAR(2)  NULL  SET("Description" = 'Tax on sales/purchases code'), 
QSSKZ CHAR(2)  NULL  SET("Description" = 'Withholding Tax Code'), 
DMBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency'), 
WRBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Document Currency'), 
KZBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Original Reduction Amount in Local Currency'), 
PSWBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount for Updating in General Ledger'), 
PSWSL CHAR(5)  NULL  SET("Description" = 'Update Currency for General Ledger Transaction Figures'), 
TXBHW DECIMAL(13, 2)  NULL  SET("Description" = 'Original Tax Base Amount in Local Currency'), 
TXBFW DECIMAL(13, 2)  NULL  SET("Description" = 'Original Tax Base Amount in Document Currency'), 
MWSTS DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Local Currency'), 
WMWST DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Document Currency'), 
HWBAS DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Base Amount in Local Currency'), 
FWBAS DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Base Amount in Document Currency'), 
HWZUZ DECIMAL(13, 2)  NULL  SET("Description" = 'Provision Amount in Local Currency'), 
FWZUZ DECIMAL(13, 2)  NULL  SET("Description" = 'Additional Tax in Document Currency'), 
SHZUZ CHAR(1)  NULL  SET("Description" = 'Debit/Credit Addition for Cash Discount'), 
STEKZ CHAR(2)  NULL  SET("Description" = 'Version Number Component'), 
MWART CHAR(1)  NULL  SET("Description" = 'Tax Type'), 
TXGRP NUMERIC(3, 0)  NULL  SET("Description" = 'Group Indicator for Tax Line Items'), 
KTOSL CHAR(3)  NULL  SET("Description" = 'Transaction Key'), 
QSSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Base Amount'), 
KURSR DECIMAL(9, 5)  NULL  SET("Description" = 'Hedged Exchange Rate'), 
GBETR DECIMAL(13, 2)  NULL  SET("Description" = 'Hedged Amount in Foreign Currency'), 
BDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference'), 
BDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Second Local Currency'), 
VALUT DATE  NULL  SET("Description" = 'Value Date'), 
ZUONR CHAR(18)  NULL  SET("Description" = 'Assignment Number'), 
SGTXT CHAR(50)  NULL  SET("Description" = 'Item Text'), 
ZINKZ CHAR(2)  NULL  SET("Description" = 'Exempted from Interest Calculation'), 
VBUND CHAR(6)  NULL  SET("Description" = 'Company ID of Trading Partner'), 
BEWAR CHAR(3)  NULL  SET("Description" = 'Transaction Type'), 
ALTKT CHAR(10)  NULL  SET("Description" = 'Group Account Number'), 
VORGN CHAR(4)  NULL  SET("Description" = 'Transaction Type for General Ledger'), 
FDLEV CHAR(2)  NULL  SET("Description" = 'Planning Level'), 
FDGRP CHAR(10)  NULL  SET("Description" = 'Planning Group'), 
FDWBT DECIMAL(13, 2)  NULL  SET("Description" = 'Planned Amount in Document or G/L Account Currency'), 
FDTAG DATE  NULL  SET("Description" = 'Planning Date'), 
FKONT NUMERIC(3, 0)  NULL  SET("Description" = 'Financial Budget Item'), 
KOKRS CHAR(4)  NULL  SET("Description" = 'Controlling Area'), 
KOSTL CHAR(10)  NULL  SET("Description" = 'Cost Center'), 
PROJN CHAR(16)  NULL  SET("Description" = 'Old: Project number : No longer used --> PS_POSNR'), 
AUFNR CHAR(12)  NULL  SET("Description" = 'Order Number'), 
VBELN CHAR(10)  NULL  SET("Description" = 'Billing Document'), 
VBEL2 CHAR(10)  NULL  SET("Description" = 'Sales Document'), 
POSN2 NUMERIC(6, 0)  NULL  SET("Description" = 'Sales Document Item'), 
ETEN2 NUMERIC(4, 0)  NULL  SET("Description" = 'Delivery Schedule Line Number'), 
ANLN1 CHAR(12)  NULL  SET("Description" = 'Main Asset Number'), 
ANLN2 CHAR(4)  NULL  SET("Description" = 'Asset Subnumber'), 
ANBWA CHAR(3)  NULL  SET("Description" = 'Asset Transaction Type'), 
BZDAT DATE  NULL  SET("Description" = 'Asset Value Date'), 
PERNR NUMERIC(8, 0)  NULL  SET("Description" = 'Personnel Number'), 
XUMSW CHAR(1)  NULL  SET("Description" = 'Indicator: Sales-Related Item ?'), 
XHRES CHAR(1)  NULL  SET("Description" = 'Indicator: Resident G/L Account?'), 
XKRES CHAR(1)  NULL  SET("Description" = 'Indicator: Can Line Items Be Displayed by Account?'), 
XOPVW CHAR(1)  NULL  SET("Description" = 'Indicator: Open Item Management?'), 
XCPDD CHAR(1)  NULL  SET("Description" = 'Indicator: Address and Bank Data Set Individually'), 
XSKST CHAR(1)  NULL  SET("Description" = 'Indicator: Statistical Posting to Cost Center'), 
XSAUF CHAR(1)  NULL  SET("Description" = 'Indicator: Posting to Order Is Statistical'), 
XSPRO CHAR(1)  NULL  SET("Description" = 'Indicator: Posting to Project Is Statistical'), 
XSERG CHAR(1)  NULL  SET("Description" = 'Indicator: Posting to Profitability Analysis Is Statistical'), 
XFAKT CHAR(1)  NULL  SET("Description" = 'Indicator: Billing Document Update Successful?'), 
XUMAN CHAR(1)  NULL  SET("Description" = 'Indicator: Transfer Posting from Down Payment?'), 
XANET CHAR(1)  NULL  SET("Description" = 'Indicator: Down Payment in Net Procedure?'), 
XSKRL CHAR(1)  NULL  SET("Description" = 'Indicator: Line Item Not Liable to Cash Discount?'), 
XINVE CHAR(1)  NULL  SET("Description" = 'Indicator: Capital Goods Affected?'), 
XPANZ CHAR(1)  NULL  SET("Description" = 'Display Item'), 
XAUTO CHAR(1)  NULL  SET("Description" = 'Indicator: Line Item Automatically Created'), 
XNCOP CHAR(1)  NULL  SET("Description" = 'Indicator: Items Cannot Be Copied?'), 
XZAHL CHAR(1)  NULL  SET("Description" = 'Indicator: Is Posting Key Used in a Payment Transaction?'), 
SAKNR CHAR(10)  NULL  SET("Description" = 'G/L Account Number'), 
HKONT CHAR(10)  NULL  SET("Description" = 'General Ledger Account'), 
KUNNR CHAR(10)  NULL  SET("Description" = 'Customer Number'), 
LIFNR CHAR(10)  NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
FILKD CHAR(10)  NULL  SET("Description" = 'Account Number of the Branch'), 
XBILK CHAR(1)  NULL  SET("Description" = 'Indicator: Account Is a Balance Sheet Account?'), 
GVTYP CHAR(2)  NULL  SET("Description" = 'P&L Statement Account Type'), 
HZUON CHAR(18)  NULL  SET("Description" = 'Assignment Number for Special G/L Accounts'), 
ZFBDT DATE  NULL  SET("Description" = 'Baseline Date for Due Date Calculation'), 
ZTERM CHAR(4)  NULL  SET("Description" = 'Terms of Payment Key'), 
ZBD1T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 1'), 
ZBD2T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 2'), 
ZBD3T DECIMAL(3, 0)  NULL  SET("Description" = 'Net Payment Terms Period'), 
ZBD1P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 1'), 
ZBD2P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 2'), 
SKFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount Eligible for Cash Discount in Document Currency'), 
SKNTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Local Currency'), 
WSKTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Document Currency'), 
ZLSCH CHAR(1)  NULL  SET("Description" = 'Payment Method'), 
ZLSPR CHAR(1)  NULL  SET("Description" = 'Payment Block Key'), 
ZBFIX CHAR(1)  NULL  SET("Description" = 'Fixed Payment Terms'), 
HBKID CHAR(5)  NULL  SET("Description" = 'Short Key for a House Bank'), 
BVTYP CHAR(4)  NULL  SET("Description" = 'Partner Bank Type'), 
NEBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Net Payment Amount'), 
MWSK1 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK2 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK3 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
REBZG CHAR(10)  NULL  SET("Description" = 'Number of the Invoice the Transaction Belongs to'), 
REBZJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Relevant Invoice (for Credit Memo)'), 
REBZZ NUMERIC(3, 0)  NULL  SET("Description" = 'Line Item in the Relevant Invoice'), 
REBZT CHAR(1)  NULL  SET("Description" = 'Follow-On Document Type'), 
ZOLLT CHAR(8)  NULL  SET("Description" = 'Customs Tariff Number'), 
ZOLLD DATE  NULL  SET("Description" = 'Customs Date'), 
LZBKZ CHAR(3)  NULL  SET("Description" = 'State Central Bank Indicator'), 
LANDL CHAR(3)  NULL  SET("Description" = 'Supplying Country'), 
DIEKZ CHAR(1)  NULL  SET("Description" = 'Service Indicator (Foreign Payment)'), 
SAMNR NUMERIC(8, 0)  NULL  SET("Description" = 'Invoice List Number'), 
ABPER NUMERIC(6, 0)  NULL  SET("Description" = 'Settlement Period'), 
VRSKZ CHAR(1)  NULL  SET("Description" = 'Insurance Indicator'), 
VRSDT DATE  NULL  SET("Description" = 'Insurance Date'), 
DISBN CHAR(10)  NULL  SET("Description" = 'Number of Bill of Exchange Usage Document (Discount Doc.)'), 
DISBJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of Bill of Exchange Usage Document'), 
DISBZ NUMERIC(3, 0)  NULL  SET("Description" = 'Line Item within the Bill of Exchange Usage Document'), 
WVERW CHAR(1)  NULL  SET("Description" = 'Bill of Exchange Usage Type'), 
ANFBN CHAR(10)  NULL  SET("Description" = 'Document Number of the Bill of Exchange Payment Request'), 
ANFBJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Bill of Exchange Payment Request Document'), 
ANFBU CHAR(4)  NULL  SET("Description" = 'Company Code in Which Bill of Exch.Payment Request Is Posted'), 
ANFAE DATE  NULL  SET("Description" = 'Bill of Exchange Payment Request Due Date'), 
BLNBT DECIMAL(13, 2)  NULL  SET("Description" = 'Base Amount for Determining the Preference Amount'), 
BLNKZ CHAR(2)  NULL  SET("Description" = 'Subsidy Indicator for Determining the Reduction Rates'), 
BLNPZ DECIMAL(7, 2)  NULL  SET("Description" = 'Preference Percentage Rate'), 
MSCHL CHAR(1)  NULL  SET("Description" = 'Dunning Key'), 
MANSP CHAR(1)  NULL  SET("Description" = 'Dunning Block'), 
MADAT DATE  NULL  SET("Description" = 'Date of Last Dunning Notice'), 
MANST NUMERIC(1, 0)  NULL  SET("Description" = 'Dunning Level'), 
MABER CHAR(2)  NULL  SET("Description" = 'Dunning Area'), 
ESRNR CHAR(11)  NULL  SET("Description" = 'ISR Subscriber Number'), 
ESRRE CHAR(27)  NULL  SET("Description" = 'ISR Reference Number'), 
ESRPZ CHAR(2)  NULL  SET("Description" = 'ISR Check Digit'), 
KLIBT DECIMAL(13, 2)  NULL  SET("Description" = 'Credit Control Amount'), 
QSZNR CHAR(10)  NULL  SET("Description" = 'Certificate Number of the Withholding Tax Exemption'), 
QBSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Amount (in Document Currency)'), 
QSFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax-Exempt Amount (in Document Currency)'), 
NAVHW DECIMAL(13, 2)  NULL  SET("Description" = 'Non-Deductible Input Tax (in Local Currency)'), 
NAVFW DECIMAL(13, 2)  NULL  SET("Description" = 'Non-Deductible Input Tax (in Document Currency)'), 
MATNR CHAR(18)  NULL  SET("Description" = 'Material Number'), 
WERKS CHAR(4)  NULL  SET("Description" = 'Plant'), 
MENGE DECIMAL(13, 3)  NULL  SET("Description" = 'Quantity'), 
MEINS CHAR(3)  NULL  SET("Description" = 'Base Unit of Measure'), 
ERFMG DECIMAL(13, 3)  NULL  SET("Description" = 'Quantity in Unit of Entry'), 
ERFME CHAR(3)  NULL  SET("Description" = 'Unit of Entry'), 
BPMNG DECIMAL(13, 3)  NULL  SET("Description" = 'Quantity in Purchase Order Price Unit'), 
BPRME CHAR(3)  NULL  SET("Description" = 'Order Price Unit (Purchasing)'), 
EBELN CHAR(10)  NULL  SET("Description" = 'Purchasing Document Number'), 
EBELP NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Purchasing Document'), 
ZEKKN NUMERIC(2, 0)  NULL  SET("Description" = 'Sequential Number of Account Assignment'), 
ELIKZ CHAR(1)  NULL  SET("Description" = '"Delivery Completed" Indicator'), 
VPRSV CHAR(1)  NULL  SET("Description" = 'Price Control Indicator'), 
PEINH DECIMAL(5, 0)  NULL  SET("Description" = 'Price Unit'), 
BWKEY CHAR(4)  NULL  SET("Description" = 'Valuation Area'), 
BWTAR CHAR(10)  NULL  SET("Description" = 'Valuation Type'), 
BUSTW CHAR(4)  NULL  SET("Description" = 'Posting String for Values'), 
REWRT DECIMAL(13, 2)  NULL  SET("Description" = 'Invoice Value Entered (in Local Currency)'), 
REWWR DECIMAL(13, 2)  NULL  SET("Description" = 'Invoice Value in Foreign Currency'), 
BONFB DECIMAL(13, 2)  NULL  SET("Description" = 'Amount Qualifying for Bonus in Local Currency'), 
BUALT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount Posted in Alternative Price Control'), 
PSALT CHAR(1)  NULL  SET("Description" = 'Alternative Price Control'), 
NPREI DECIMAL(11, 2)  NULL  SET("Description" = 'New Price'), 
TBTKZ CHAR(1)  NULL  SET("Description" = 'Indicator: Subsequent Debit/Credit'), 
SPGRP CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Price'), 
SPGRM CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Quantity'), 
SPGRT CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Date'), 
SPGRG CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Order Price Quantity'), 
SPGRV CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Project Budget'), 
SPGRQ CHAR(1)  NULL  SET("Description" = 'Manual Blocking Reason'), 
STCEG CHAR(20)  NULL  SET("Description" = 'VAT Registration Number'), 
EGBLD CHAR(3)  NULL  SET("Description" = 'Country of Destination for Delivery of Goods'), 
EGLLD CHAR(3)  NULL  SET("Description" = 'Supplying Country for Delivery of Goods'), 
RSTGR CHAR(3)  NULL  SET("Description" = 'Reason Code for Payments'), 
RYACQ CHAR(4)  NULL  SET("Description" = 'Year of acquisition'), 
RPACQ NUMERIC(3, 0)  NULL  SET("Description" = 'Period of Acquisition'), 
RDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Exchange Rate Gain/Loss Realized'), 
RDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Exchange Rate Difference Realized for Second Local Currency'), 
PRCTR CHAR(10)  NULL  SET("Description" = 'Profit Center'), 
XHKOM CHAR(1)  NULL  SET("Description" = 'Indicator: G/L Account Assigned Manually?'), 
VNAME CHAR(6)  NULL  SET("Description" = 'Joint Venture'), 
RECID CHAR(2)  NULL  SET("Description" = 'Recovery Indicator'), 
EGRUP CHAR(3)  NULL  SET("Description" = 'Equity Group'), 
VPTNR CHAR(10)  NULL  SET("Description" = 'Partner Account Number'), 
VERTT CHAR(1)  NULL  SET("Description" = 'Contract Type'), 
VERTN CHAR(13)  NULL  SET("Description" = 'Contract Number'), 
VBEWA CHAR(4)  NULL  SET("Description" = 'Flow Type'), 
DEPOT CHAR(10)  NULL  SET("Description" = 'Securities Account'), 
TXJCD CHAR(15)  NULL  SET("Description" = 'Tax Jurisdiction'), 
IMKEY CHAR(8)  NULL  SET("Description" = 'Internal Key for Real Estate Object'), 
DABRZ DATE  NULL  SET("Description" = 'Reference Date for Settlement'), 
POPTS DECIMAL(9, 6)  NULL  SET("Description" = 'Real Estate Option Rate'), 
FIPOS CHAR(14)  NULL  SET("Description" = 'Commitment Item'), 
KSTRG CHAR(12)  NULL  SET("Description" = 'Cost Object'), 
NPLNR CHAR(12)  NULL  SET("Description" = 'Network Number for Account Assignment'), 
AUFPL NUMERIC(10, 0)  NULL  SET("Description" = 'Task List Number for Operations in Order'), 
APLZL NUMERIC(8, 0)  NULL  SET("Description" = 'General Counter for Order'), 
PROJK NUMERIC(8, 0)  NULL  SET("Description" = 'Work Breakdown Structure Element (WBS Element)'), 
PAOBJNR NUMERIC(10, 0)  NULL  SET("Description" = 'Profitability Segment Number (CO-PA)'), 
PASUBNR NUMERIC(4, 0)  NULL  SET("Description" = 'Profitability Segment Changes (CO-PA)'), 
SPGRS CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Item Amount'), 
SPGRC CHAR(1)  NULL  SET("Description" = 'Blocking Reason: Quality'), 
BTYPE CHAR(2)  NULL  SET("Description" = 'Payroll Type'), 
ETYPE CHAR(3)  NULL  SET("Description" = 'Equity Type'), 
XEGDR CHAR(1)  NULL  SET("Description" = 'Indicator: Triangular deal within the EU ?'), 
LNRAN NUMERIC(5, 0)  NULL  SET("Description" = 'Sequence Number of Asset Line Items in Fiscal Year'), 
HRKFT CHAR(4)  NULL  SET("Description" = 'Origin Group as Subdivision of Cost Element'), 
DMBE2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency'), 
DMBE3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency'), 
DMB21 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB22 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB23 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB31 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB32 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB33 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
MWST2 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Second Local Currency'), 
MWST3 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Third Local Currency'), 
NAVH2 DECIMAL(13, 2)  NULL  SET("Description" = 'Non-Deductible Input Tax in Second Local Currency'), 
NAVH3 DECIMAL(13, 2)  NULL  SET("Description" = 'Non-Deductible Input Tax in Third Local Currency'), 
SKNT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Second Local Currency'), 
SKNT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Third Local Currency'), 
BDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Third Local Currency'), 
RDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Exchange Rate Difference Realized for Third Local Currency'), 
HWMET CHAR(1)  NULL  SET("Description" = 'Method with Which the Local Currency Amount Was Determined'), 
GLUPM CHAR(1)  NULL  SET("Description" = 'Update Method for FM - FI-CA Integration'), 
XRAGL CHAR(1)  NULL  SET("Description" = 'Indicator: Clearing was Reversed'), 
UZAWE CHAR(2)  NULL  SET("Description" = 'Payment Method Supplement'), 
LOKKT CHAR(10)  NULL  SET("Description" = 'Alternative Account Number in Company Code'), 
FISTL CHAR(16)  NULL  SET("Description" = 'Funds Center'), 
GEBER CHAR(10)  NULL  SET("Description" = 'Fund'), 
STBUK CHAR(4)  NULL  SET("Description" = 'Tax Company Code'), 
TXBH2 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Base/Original Tax Base in Second Local Currency'), 
TXBH3 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Base/Original Tax Base in Third Local Currency'), 
PPRCT CHAR(10)  NULL  SET("Description" = 'Partner Profit Center'), 
XREF1 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
XREF2 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
KBLNR CHAR(10)  NULL  SET("Description" = 'Document Number for Earmarked Funds'), 
KBLPOS NUMERIC(3, 0)  NULL  SET("Description" = 'Earmarked Funds: Document Item'), 
STTAX DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount as Statistical Information in Document Currency'), 
FKBER CHAR(4)  NULL  SET("Description" = 'Functional Area'), 
OBZEI NUMERIC(3, 0)  NULL  SET("Description" = 'Number of Line Item in Original Document'), 
XNEGP CHAR(1)  NULL  SET("Description" = 'Indicator: Negative posting'), 
RFZEI NUMERIC(3, 0)  NULL  SET("Description" = 'Payment Card Item'), 
CCBTC CHAR(10)  NULL  SET("Description" = 'Payment cards: Settlement run'), 
KKBER CHAR(4)  NULL  SET("Description" = 'Credit Control Area'), 
EMPFB CHAR(10)  NULL  SET("Description" = 'Payee/Payer'), 
XREF3 CHAR(20)  NULL  SET("Description" = 'Reference Key for Line Item'), 
DTWS1 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 1'), 
DTWS2 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 2'), 
DTWS3 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 3'), 
DTWS4 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 4'), 
GRICD CHAR(2)  NULL  SET("Description" = 'Activity Code for Gross Income Tax'), 
GRIRG CHAR(3)  NULL  SET("Description" = 'Region (State, Province, County)'), 
GITYP CHAR(2)  NULL  SET("Description" = 'Distribution Type for Employment Tax'), 
XPYPR CHAR(1)  NULL  SET("Description" = 'Indicator: Items from Payment Program Blocked'), 
KIDNO CHAR(30)  NULL  SET("Description" = 'Payment Reference'), 
ABSBT DECIMAL(13, 2)  NULL  SET("Description" = 'Credit Management: Hedged Amount'), 
IDXSP CHAR(5)  NULL  SET("Description" = 'Inflation Index'), 
LINFV DATE  NULL  SET("Description" = 'Last Adjustment Date'), 
KONTT CHAR(2)  NULL  SET("Description" = 'Account Assignment Category for Industry Solution'), 
KONTL CHAR(50)  NULL  SET("Description" = 'Acct Assignment String for Industry-Specific Acct Assignmnts'), 
TXDAT DATE  NULL  SET("Description" = 'Date for Defining Tax Rates'), 
AGZEI DECIMAL(5, 0)  NULL  SET("Description" = 'Clearing Item'), 
PYCUR CHAR(5)  NULL  SET("Description" = 'Currency for Automatic Payment'), 
PYAMT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Payment Currency'), 
BUPLA CHAR(4)  NULL  SET("Description" = 'Business Place'), 
SECCO CHAR(4)  NULL  SET("Description" = 'Section Code'), 
LSTAR CHAR(6)  NULL  SET("Description" = 'Activity Type'), 
CESSION_KZ CHAR(2)  NULL  SET("Description" = 'Accounts Receivable Pledging Indicator'), 
PRZNR CHAR(12)  NULL  SET("Description" = 'Business Process'), 
PPDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 1.Loc.Curr.(Part Payments)'), 
PPDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 2.Loc. Curr.(Part Payments)'), 
PPDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 3.Loc.Curr.(Part Payments)'), 
PENLC1 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in First Local Currency'), 
PENLC2 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Second Local Currency'), 
PENLC3 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Third Local Currency'), 
PENFC DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Document Currency'), 
PENDAYS INT  NULL  SET("Description" = 'Number of Days for Penalty Charge Calculation'), 
PENRC CHAR(2)  NULL  SET("Description" = 'Reason for Late Payment'), 
GRANT_NBR CHAR(20)  NULL  SET("Description" = 'Grant'), 
SCTAX DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Portion FI-CA Local Currency'), 
FKBER_LONG CHAR(16)  NULL  SET("Description" = 'Functional Area'), 
GMVKZ CHAR(1)  NULL  SET("Description" = 'Item is in Execution'), 
SRTYPE CHAR(2)  NULL  SET("Description" = 'Type of Additional Receivable'), 
INTRENO CHAR(13)  NULL  SET("Description" = 'Internal Real Estate Master Data Code'), 
MEASURE CHAR(24)  NULL  SET("Description" = 'Funded Program'), 
AUGGJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of Clearing Document'), 
PPA_EX_IND CHAR(1)  NULL  SET("Description" = 'PPA Exclude Indicator'), 
DOCLN CHAR(6)  NULL  SET("Description" = 'Six-Character Posting Item for Ledger'), 
SEGMENT CHAR(10)  NULL  SET("Description" = 'Segment for Segmental Reporting'), 
PSEGMENT CHAR(10)  NULL  SET("Description" = 'Partner Segment for Segmental Reporting'), 
PFKBER CHAR(16)  NULL  SET("Description" = 'Partner Functional Area'), 
HKTID CHAR(5)  NULL  SET("Description" = 'ID for Account Details'), 
KSTAR CHAR(10)  NULL  SET("Description" = 'Cost Element'), 
XLGCLR CHAR(1)  NULL  SET("Description" = 'Clearing Specific to Ledger Groups'), 
TAXPS NUMERIC(6, 0)  NULL  SET("Description" = 'Tax document item number'), 
PAYS_PROV CHAR(4)  NULL  SET("Description" = 'Payment Service Provider'), 
PAYS_TRAN CHAR(35)  NULL  SET("Description" = 'Payment Reference of Payment Service Provider'), 
MNDID CHAR(35)  NULL  SET("Description" = 'Unique Reference to Mandate for each Payee'), 
XFRGE_BSEG CHAR(1)  NULL  SET("Description" = 'Payment Is Released'), 
PGEBER CHAR(10)  NULL  SET("Description" = 'Partner Fund'), 
PGRANT_NBR CHAR(20)  NULL  SET("Description" = 'Partner Grant'), 
BUDGET_PD CHAR(10)  NULL  SET("Description" = 'FM: Budget Period'), 
PBUDGET_PD CHAR(10)  NULL  SET("Description" = 'FM: Partner Budget Period'), 
PEROP_BEG DATE  NULL  SET("Description" = 'Billing Period of Performance Start Date'), 
PEROP_END DATE  NULL  SET("Description" = 'Billing Period of Performance End Date'), 
FASTPAY CHAR(1)  NULL  SET("Description" = 'PPA Fast Pay Indicator'), 
IGNR_IVREF CHAR(1)  NULL  SET("Description" = 'FMFG: Ignore the invoice reference during FI doc splitting'), 
FMXDOCNR CHAR(10)  NULL  SET("Description" = 'FM Reference Document Number'), 
FMXYEAR NUMERIC(4, 0)  NULL  SET("Description" = 'FM Reference Year'), 
FMXDOCLN NUMERIC(6, 0)  NULL  SET("Description" = 'FM Reference Line Item'), 
FMXZEKKN NUMERIC(5, 0)  NULL  SET("Description" = 'FM Reference Sequence Account Assignment'), 
PRODPER DATE  NULL  SET("Description" = 'Production Month (Date to find period and year)')) 
PRIMARY KEY (BUKRS, BELNR, GJAHR, BUZEI) 
CREATE_INDEX "PRIMARY" ON (BUKRS, BELNR, GJAHR, BUZEI) PRIMARY 
FOREIGN KEY  (BUKRS, ANLN1, ANLN2) REFERENCES ANLA (BUKRS, ANLN1, ANLN2)
FOREIGN KEY  (BUKRS, ANLN1) REFERENCES ANLH (BUKRS, ANLN1)
FOREIGN KEY  (AUFNR) REFERENCES AUFK (AUFNR)
FOREIGN KEY  (PPRCT) REFERENCES CEPC (PRCTR)
FOREIGN KEY  (EBELN) REFERENCES EKKO (EBELN)
FOREIGN KEY  (EBELN, EBELP) REFERENCES EKPO (EBELN, EBELP)
FOREIGN KEY  (BUKRS, GITYP) REFERENCES J_1ADTYP (BUKRS, J_1ADTYP)
FOREIGN KEY  (GRICD) REFERENCES J_1AGICD (J_1AGICD)
FOREIGN KEY  (IDXSP) REFERENCES J_1AINFT20 (J_1AINDX)
FOREIGN KEY  (BUKRS, BUPLA) REFERENCES J_1BBRANCH (BUKRS, BRANCH)
FOREIGN KEY  (KBLNR) REFERENCES KBLK (BELNR)
FOREIGN KEY  (KBLNR, KBLPOS) REFERENCES KBLP (BELNR, BLPOS)
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (VPTNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (MATNR) REFERENCES MARA (MATNR)
FOREIGN KEY  (BUKRS, SECCO) REFERENCES SECCODE (BUKRS, SECCODE)
FOREIGN KEY  (BUKRS) REFERENCES SKB1 (BUKRS)
FOREIGN KEY  (BUKRS) REFERENCES SKB1 (BUKRS)
FOREIGN KEY  (SAKNR, HKONT) REFERENCES SKB1 (SAKNR, SAKNR)
FOREIGN KEY  (ANFBU) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BWKEY) REFERENCES T001K (BWKEY)
FOREIGN KEY  (WERKS) REFERENCES T001W (WERKS)
FOREIGN KEY  (EGBLD) REFERENCES T005 (LAND1)
FOREIGN KEY  (EGLLD) REFERENCES T005 (LAND1)
FOREIGN KEY  (LANDL) REFERENCES T005 (LAND1)
FOREIGN KEY  (GRIRG) REFERENCES T005S (BLAND)
FOREIGN KEY  (BPRME) REFERENCES T006 (MSEHI)
FOREIGN KEY  (ERFME) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MEINS) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MWSK1) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (MWSK2) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (MWSK3) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (MWSKZ) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (ZLSPR) REFERENCES T008 (ZAHLS)
FOREIGN KEY  (HBKID) REFERENCES T012 (HBKID)
FOREIGN KEY  (HBKID, HKTID) REFERENCES T012K (HBKID, HKTID)
FOREIGN KEY  (KKBER) REFERENCES T014 (KKBER)
FOREIGN KEY  (LZBKZ) REFERENCES T015L (LZBKZ)
FOREIGN KEY  (FDGRP) REFERENCES T035 (GRUPP)
FOREIGN KEY  (FDLEV) REFERENCES T036 (EBENE)
FOREIGN KEY  (MSCHL) REFERENCES T040 (MSCHL)
FOREIGN KEY  (MANSP) REFERENCES T040S (MANSP)
FOREIGN KEY  (UZAWE) REFERENCES T042F (UZAWE)
FOREIGN KEY  (ZLSCH) REFERENCES T042Z (ZLSCH)
FOREIGN KEY  (BUKRS, MABER) REFERENCES T047M (BUKRS, MABER)
FOREIGN KEY  (BUKRS, RSTGR) REFERENCES T053R (BUKRS, RSTGR)
FOREIGN KEY  (QSSKZ) REFERENCES T059Q (QSSKZ)
FOREIGN KEY  (KOART) REFERENCES T074U (KOART)
FOREIGN KEY  (KOART) REFERENCES T074U (KOART)
FOREIGN KEY  (ZUMSK, UMSKZ) REFERENCES T074U (UMSKZ, UMSKZ)
FOREIGN KEY  (BWTAR) REFERENCES T149D (BWTAR)
FOREIGN KEY  (BEWAR) REFERENCES T856 (TRTYP)
FOREIGN KEY  (VBUND) REFERENCES T880 (RCOMP)
FOREIGN KEY  (BTYPE) REFERENCES T8JA (BILIND)
FOREIGN KEY  (BUKRS, ETYPE) REFERENCES T8JE (BUKRS, ETYPE)
FOREIGN KEY  (BUKRS, VNAME, EGRUP) REFERENCES T8JF (BUKRS, VNAME, EGRUP)
FOREIGN KEY  (BUKRS, RECID) REFERENCES T8JJ (BUKRS, RECID)
FOREIGN KEY  (BUKRS, VNAME) REFERENCES T8JV (BUKRS, VNAME)
FOREIGN KEY  (ANBWA) REFERENCES TABW (BWASL)
FOREIGN KEY  (BSCHL) REFERENCES TBSL (BSCHL)
FOREIGN KEY  (BUKRS, CESSION_KZ) REFERENCES TCESSION (COMPANY, CESSION_KZ)
FOREIGN KEY  (PSWSL) REFERENCES TCURC (WAERS)
FOREIGN KEY  (PYCUR) REFERENCES TCURC (WAERS)
FOREIGN KEY  (GSBER) REFERENCES TGSB (GSBER)
FOREIGN KEY  (PARGB) REFERENCES TGSB (GSBER)
FOREIGN KEY  (KOKRS) REFERENCES TKA01 (KOKRS)
FOREIGN KEY  (TXJCD) REFERENCES TTXJ (TXJCD)
FOREIGN KEY  (VBEL2, POSN2, ETEN2) REFERENCES VBEP (VBELN, POSNR, ETENR)
FOREIGN KEY  (VBEL2) REFERENCES VBUK (VBELN)
FOREIGN KEY  (VBELN) REFERENCES VBUK (VBELN)
FOREIGN KEY  (VBEL2, POSN2) REFERENCES VBUP (VBELN, POSNR);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '1459' , 
ActaName_3 = 'Rsap_table_type',ActaValue_3 = 'Transparent Table' , 
ActaName_4 = 'RDescription',ActaValue_4 = 'Accounting: Secondary Index for Vendors' , 
ActaName_5 = 'RSAP_Table_Class',ActaValue_5 = '1' , 
ActaName_6 = 'RSAP_Table_Class_Name',ActaValue_6 = 'transparent' , 
ActaName_7 = 'REstimated_Row_Count',ActaValue_7 = '50000' , 
ActaName_8 = 'RSavedAfterCheckOut',ActaValue_8 = 'YES' , 
ActaName_9 = 'RLoader_Is_Template_Table',ActaValue_9 = 'no' , 
ActaName_10 = 'RDate_modified',ActaValue_10 = 'Thu Mar  4 02:38:35 2021' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:43 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".BSIK(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
BUKRS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Company Code'), 
LIFNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
UMSKS CHAR(1)  KEY  NOT NULL  SET("Description" = 'Special G/L Transaction Type'), 
UMSKZ CHAR(1)  KEY  NOT NULL  SET("Description" = 'Special G/L Indicator'), 
AUGDT DATE  KEY  NOT NULL  SET("Description" = 'Clearing Date'), 
AUGBL CHAR(10)  KEY  NOT NULL  SET("Description" = 'Document Number of the Clearing Document'), 
ZUONR CHAR(18)  KEY  NOT NULL  SET("Description" = 'Assignment Number'), 
GJAHR NUMERIC(4, 0)  KEY  NOT NULL  SET("Description" = 'Fiscal Year'), 
BELNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Accounting Document Number'), 
BUZEI NUMERIC(3, 0)  KEY  NOT NULL  SET("Description" = 'Number of Line Item Within Accounting Document'), 
BUDAT DATE  NULL  SET("Description" = 'Posting Date in the Document'), 
BLDAT DATE  NULL  SET("Description" = 'Document Date in Document'), 
CPUDT DATE  NULL  SET("Description" = 'Day On Which Accounting Document Was Entered'), 
WAERS CHAR(5)  NULL  SET("Description" = 'Currency Key'), 
XBLNR CHAR(16)  NULL  SET("Description" = 'Reference Document Number'), 
BLART CHAR(2)  NULL  SET("Description" = 'Document Type'), 
MONAT NUMERIC(2, 0)  NULL  SET("Description" = 'Fiscal Period'), 
BSCHL CHAR(2)  NULL  SET("Description" = 'Posting Key'), 
ZUMSK CHAR(1)  NULL  SET("Description" = 'Target Special G/L Indicator'), 
SHKZG CHAR(1)  NULL  SET("Description" = 'Debit/Credit Indicator'), 
GSBER CHAR(4)  NULL  SET("Description" = 'Business Area'), 
MWSKZ CHAR(2)  NULL  SET("Description" = 'Tax on sales/purchases code'), 
DMBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency'), 
WRBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Document Currency'), 
MWSTS DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Local Currency'), 
WMWST DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Document Currency'), 
BDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference'), 
BDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Second Local Currency'), 
SGTXT CHAR(50)  NULL  SET("Description" = 'Item Text'), 
PROJN CHAR(16)  NULL  SET("Description" = 'Old: Project number : No longer used --> PS_POSNR'), 
AUFNR CHAR(12)  NULL  SET("Description" = 'Order Number'), 
ANLN1 CHAR(12)  NULL  SET("Description" = 'Main Asset Number'), 
ANLN2 CHAR(4)  NULL  SET("Description" = 'Asset Subnumber'), 
EBELN CHAR(10)  NULL  SET("Description" = 'Purchasing Document Number'), 
EBELP NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Purchasing Document'), 
SAKNR CHAR(10)  NULL  SET("Description" = 'G/L Account Number'), 
HKONT CHAR(10)  NULL  SET("Description" = 'General Ledger Account'), 
FKONT NUMERIC(3, 0)  NULL  SET("Description" = 'Financial Budget Item'), 
FILKD CHAR(10)  NULL  SET("Description" = 'Account Number of the Branch'), 
ZFBDT DATE  NULL  SET("Description" = 'Baseline Date for Due Date Calculation'), 
ZTERM CHAR(4)  NULL  SET("Description" = 'Terms of Payment Key'), 
ZBD1T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 1'), 
ZBD2T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash Discount Days 2'), 
ZBD3T DECIMAL(3, 0)  NULL  SET("Description" = 'Net Payment Terms Period'), 
ZBD1P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 1'), 
ZBD2P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 2'), 
SKFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount Eligible for Cash Discount in Document Currency'), 
SKNTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Local Currency'), 
WSKTO DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Document Currency'), 
ZLSCH CHAR(1)  NULL  SET("Description" = 'Payment Method'), 
ZLSPR CHAR(1)  NULL  SET("Description" = 'Payment Block Key'), 
ZBFIX CHAR(1)  NULL  SET("Description" = 'Fixed Payment Terms'), 
HBKID CHAR(5)  NULL  SET("Description" = 'Short Key for a House Bank'), 
BVTYP CHAR(4)  NULL  SET("Description" = 'Partner Bank Type'), 
REBZG CHAR(10)  NULL  SET("Description" = 'Number of the Invoice the Transaction Belongs to'), 
REBZJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Relevant Invoice (for Credit Memo)'), 
REBZZ NUMERIC(3, 0)  NULL  SET("Description" = 'Line Item in the Relevant Invoice'), 
SAMNR NUMERIC(8, 0)  NULL  SET("Description" = 'Invoice List Number'), 
ZOLLT CHAR(8)  NULL  SET("Description" = 'Customs Tariff Number'), 
ZOLLD DATE  NULL  SET("Description" = 'Customs Date'), 
LZBKZ CHAR(3)  NULL  SET("Description" = 'State Central Bank Indicator'), 
LANDL CHAR(3)  NULL  SET("Description" = 'Supplying Country'), 
DIEKZ CHAR(1)  NULL  SET("Description" = 'Service Indicator (Foreign Payment)'), 
MANSP CHAR(1)  NULL  SET("Description" = 'Dunning Block'), 
MSCHL CHAR(1)  NULL  SET("Description" = 'Dunning Key'), 
MADAT DATE  NULL  SET("Description" = 'Date of Last Dunning Notice'), 
MANST NUMERIC(1, 0)  NULL  SET("Description" = 'Dunning Level'), 
MABER CHAR(2)  NULL  SET("Description" = 'Dunning Area'), 
XNETB CHAR(1)  NULL  SET("Description" = 'Indicator: Document posted net ?'), 
XANET CHAR(1)  NULL  SET("Description" = 'Indicator: Down Payment in Net Procedure?'), 
XCPDD CHAR(1)  NULL  SET("Description" = 'Indicator: Address and Bank Data Set Individually'), 
XESRD CHAR(1)  NULL  SET("Description" = 'Indicator: Is any ISR data set in the document ?'), 
XZAHL CHAR(1)  NULL  SET("Description" = 'Indicator: Is Posting Key Used in a Payment Transaction?'), 
MWSK1 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT1 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK2 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
MWSK3 CHAR(2)  NULL  SET("Description" = 'Tax Code for Distribution'), 
DMBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Local Currency for Tax Distribution'), 
WRBT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in foreign currency for tax breakdown'), 
QSSKZ CHAR(2)  NULL  SET("Description" = 'Withholding Tax Code'), 
QSSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Base Amount'), 
QBSHB DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax Amount (in Document Currency)'), 
BSTAT CHAR(1)  NULL  SET("Description" = 'Document Status'), 
ANFBN CHAR(10)  NULL  SET("Description" = 'Document Number of the Bill of Exchange Payment Request'), 
ANFBJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of the Bill of Exchange Payment Request Document'), 
ANFBU CHAR(4)  NULL  SET("Description" = 'Company Code in Which Bill of Exch.Payment Request Is Posted'), 
VBUND CHAR(6)  NULL  SET("Description" = 'Company ID of Trading Partner'), 
REBZT CHAR(1)  NULL  SET("Description" = 'Follow-On Document Type'), 
STCEG CHAR(20)  NULL  SET("Description" = 'VAT Registration Number'), 
EGBLD CHAR(3)  NULL  SET("Description" = 'Country of Destination for Delivery of Goods'), 
EGLLD CHAR(3)  NULL  SET("Description" = 'Supplying Country for Delivery of Goods'), 
QSZNR CHAR(10)  NULL  SET("Description" = 'Certificate Number of the Withholding Tax Exemption'), 
QSFBT DECIMAL(13, 2)  NULL  SET("Description" = 'Withholding Tax-Exempt Amount (in Document Currency)'), 
XINVE CHAR(1)  NULL  SET("Description" = 'Indicator: Capital Goods Affected?'), 
PROJK NUMERIC(8, 0)  NULL  SET("Description" = 'Work Breakdown Structure Element (WBS Element)'), 
FIPOS CHAR(14)  NULL  SET("Description" = 'Commitment Item'), 
NPLNR CHAR(12)  NULL  SET("Description" = 'Network Number for Account Assignment'), 
AUFPL NUMERIC(10, 0)  NULL  SET("Description" = 'Routing number of operations in the order'), 
APLZL NUMERIC(8, 0)  NULL  SET("Description" = 'Internal counter'), 
XEGDR CHAR(1)  NULL  SET("Description" = 'Indicator: Triangular deal within the EU ?'), 
DMBE2 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency'), 
DMBE3 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency'), 
DMB21 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB22 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB23 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Second Local Currency for Tax Breakdown'), 
DMB31 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB32 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
DMB33 DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Third Local Currency for Tax Breakdown'), 
MWST2 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Second Local Currency'), 
MWST3 DECIMAL(13, 2)  NULL  SET("Description" = 'Tax Amount in Third Local Currency'), 
SKNT2 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Second Local Currency'), 
SKNT3 DECIMAL(13, 2)  NULL  SET("Description" = 'Cash Discount Amount in Third Local Currency'), 
BDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Valuation Difference for the Third Local Currency'), 
XRAGL CHAR(1)  NULL  SET("Description" = 'Indicator: Clearing was Reversed'), 
RSTGR CHAR(3)  NULL  SET("Description" = 'Reason Code for Payments'), 
UZAWE CHAR(2)  NULL  SET("Description" = 'Payment Method Supplement'), 
KOSTL CHAR(10)  NULL  SET("Description" = 'Cost Center'), 
LNRAN NUMERIC(5, 0)  NULL  SET("Description" = 'Sequence Number of Asset Line Items in Fiscal Year'), 
XSTOV CHAR(1)  NULL  SET("Description" = 'Indicator: Document is flagged for reversal'), 
KZBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Original Reduction Amount in Local Currency'), 
XREF1 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
XREF2 CHAR(12)  NULL  SET("Description" = 'Business Partner Reference Key'), 
XARCH CHAR(1)  NULL  SET("Description" = 'Indicator: Document already archived ?'), 
PSWSL CHAR(5)  NULL  SET("Description" = 'Update Currency for General Ledger Transaction Figures'), 
PSWBT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount for Updating in General Ledger'), 
IMKEY CHAR(8)  NULL  SET("Description" = 'Internal Key for Real Estate Object'), 
ZEKKN NUMERIC(2, 0)  NULL  SET("Description" = 'Sequential Number of Account Assignment'), 
FISTL CHAR(16)  NULL  SET("Description" = 'Funds Center'), 
GEBER CHAR(10)  NULL  SET("Description" = 'Fund'), 
DABRZ DATE  NULL  SET("Description" = 'Reference Date for Settlement'), 
XNEGP CHAR(1)  NULL  SET("Description" = 'Indicator: Negative posting'), 
EMPFB CHAR(10)  NULL  SET("Description" = 'Payee/Payer'), 
PRCTR CHAR(10)  NULL  SET("Description" = 'Profit Center'), 
XREF3 CHAR(20)  NULL  SET("Description" = 'Reference Key for Line Item'), 
DTWS1 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 1'), 
DTWS2 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 2'), 
DTWS3 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 3'), 
DTWS4 NUMERIC(2, 0)  NULL  SET("Description" = 'Instruction Key 4'), 
XPYPR CHAR(1)  NULL  SET("Description" = 'Indicator: Items from Payment Program Blocked'), 
KIDNO CHAR(30)  NULL  SET("Description" = 'Payment Reference'), 
PYCUR CHAR(5)  NULL  SET("Description" = 'Currency for Automatic Payment'), 
PYAMT DECIMAL(13, 2)  NULL  SET("Description" = 'Amount in Payment Currency'), 
BUPLA CHAR(4)  NULL  SET("Description" = 'Business Place'), 
SECCO CHAR(4)  NULL  SET("Description" = 'Section Code'), 
PPDIFF DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 1.Loc.Curr.(Part Payments)'), 
PPDIF2 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 2.Loc. Curr.(Part Payments)'), 
PPDIF3 DECIMAL(13, 2)  NULL  SET("Description" = 'Realized Exchange Rate Gain/Loss 3.Loc.Curr.(Part Payments)'), 
PENLC1 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in First Local Currency'), 
PENLC2 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Second Local Currency'), 
PENLC3 DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Third Local Currency'), 
PENFC DECIMAL(13, 2)  NULL  SET("Description" = 'Penalty Charge Amount in Document Currency'), 
PENDAYS INT  NULL  SET("Description" = 'Number of Days for Penalty Charge Calculation'), 
PENRC CHAR(2)  NULL  SET("Description" = 'Reason for Late Payment'), 
VERTT CHAR(1)  NULL  SET("Description" = 'Contract Type'), 
VERTN CHAR(13)  NULL  SET("Description" = 'Contract Number'), 
VBEWA CHAR(4)  NULL  SET("Description" = 'Flow Type'), 
KBLNR CHAR(10)  NULL  SET("Description" = 'Document Number for Earmarked Funds'), 
KBLPOS NUMERIC(3, 0)  NULL  SET("Description" = 'Earmarked Funds: Document Item'), 
GRANT_NBR CHAR(20)  NULL  SET("Description" = 'Grant'), 
GMVKZ CHAR(1)  NULL  SET("Description" = 'Item is in Execution'), 
SRTYPE CHAR(2)  NULL  SET("Description" = 'Type of Additional Receivable'), 
LOTKZ CHAR(10)  NULL  SET("Description" = 'Lot Number for Requests'), 
ZINKZ CHAR(2)  NULL  SET("Description" = 'Exempted from Interest Calculation'), 
FKBER CHAR(16)  NULL  SET("Description" = 'Functional Area'), 
INTRENO CHAR(13)  NULL  SET("Description" = 'Internal Real Estate Master Data Code'), 
PPRCT CHAR(10)  NULL  SET("Description" = 'Partner Profit Center'), 
BUZID CHAR(1)  NULL  SET("Description" = 'Identification of the Line Item'), 
AUGGJ NUMERIC(4, 0)  NULL  SET("Description" = 'Fiscal Year of Clearing Document'), 
HKTID CHAR(5)  NULL  SET("Description" = 'ID for Account Details'), 
BUDGET_PD CHAR(10)  NULL  SET("Description" = 'FM: Budget Period'), 
KONTT CHAR(2)  NULL  SET("Description" = 'Account Assignment Category for Industry Solution'), 
KONTL CHAR(50)  NULL  SET("Description" = 'Acct Assignment String for Industry-Specific Acct Assignmnts'), 
UEBGDAT DATE  NULL  SET("Description" = 'Transfer date of an item to legal dunning proceeding'), 
VNAME CHAR(6)  NULL  SET("Description" = 'Joint Venture'), 
EGRUP CHAR(3)  NULL  SET("Description" = 'Equity Group'), 
BTYPE CHAR(2)  NULL  SET("Description" = 'Payroll Type'), 
PROPMANO CHAR(13)  NULL  SET("Description" = 'Mandate, Mandate-Opening Contract')) 
PRIMARY KEY (BUKRS, LIFNR, UMSKS, UMSKZ, AUGDT, AUGBL, ZUONR, GJAHR, BELNR, BUZEI) 
CREATE_INDEX "1" ON (LIFNR, BUKRS, GJAHR, BELNR, BUZEI) 
CREATE_INDEX "4" ON (BUKRS, REBZG, REBZJ, REBZZ, LIFNR, UMSKS, REBZT) 
CREATE_INDEX "5" ON (BUKRS, BELNR, GJAHR, BUZEI) 
CREATE_INDEX "6" ON (BUKRS, CPUDT) 
CREATE_INDEX "PRIMARY" ON (BUKRS, LIFNR, UMSKS, UMSKZ, AUGDT, AUGBL, ZUONR, GJAHR, BELNR, BUZEI) PRIMARY 
FOREIGN KEY  (BUKRS, ANLN1, ANLN2, ANFBJ, LNRAN) REFERENCES ANEK (BUKRS, ANLN1, ANLN2, GJAHR, LNRAN)
FOREIGN KEY  (AUFNR) REFERENCES AUFK (AUFNR)
FOREIGN KEY  (BUPLA) REFERENCES J_1BBRANCH (BRANCH)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LIFNR, BUKRS) REFERENCES LFB1 (LIFNR, BUKRS)
FOREIGN KEY  (SECCO) REFERENCES SECCODE (SECCODE)
FOREIGN KEY  (ANFBU) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BLART) REFERENCES T003 (BLART)
FOREIGN KEY  (LANDL) REFERENCES T005 (LAND1)
FOREIGN KEY  (EGBLD) REFERENCES T005 (LAND1)
FOREIGN KEY  (EGLLD) REFERENCES T005 (LAND1)
FOREIGN KEY  (MWSKZ) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (ZLSPR) REFERENCES T008 (ZAHLS)
FOREIGN KEY  (HBKID) REFERENCES T012 (HBKID)
FOREIGN KEY  (LZBKZ) REFERENCES T015L (LZBKZ)
FOREIGN KEY  (MSCHL) REFERENCES T040 (MSCHL)
FOREIGN KEY  (MANSP) REFERENCES T040S (MANSP)
FOREIGN KEY  (UZAWE) REFERENCES T042F (UZAWE)
FOREIGN KEY  (ZLSCH) REFERENCES T042Z (ZLSCH)
FOREIGN KEY  (RSTGR) REFERENCES T053R (RSTGR)
FOREIGN KEY  (QSSKZ) REFERENCES T059Q (QSSKZ)
FOREIGN KEY  (UMSKZ) REFERENCES T074U (UMSKZ)
FOREIGN KEY  (VBUND) REFERENCES T880 (RCOMP)
FOREIGN KEY  (BTYPE) REFERENCES T8JA (BILIND)
FOREIGN KEY  (BUKRS, VNAME, EGRUP) REFERENCES T8JF (BUKRS, VNAME, EGRUP)
FOREIGN KEY  (BUKRS, VNAME) REFERENCES T8JV (BUKRS, VNAME)
FOREIGN KEY  (BSCHL) REFERENCES TBSL (BSCHL)
FOREIGN KEY  (PSWSL) REFERENCES TCURC (WAERS)
FOREIGN KEY  (PYCUR) REFERENCES TCURC (WAERS)
FOREIGN KEY  (WAERS) REFERENCES TCURC (WAERS)
FOREIGN KEY  (GSBER) REFERENCES TGSB (GSBER);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '823' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '3' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Purchasing Document Header' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Thu Oct 24 00:10:26 2019' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:37 2021' )
CREATE TABLE SOURCE_SAP_LI."".EKKO(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
EBELN CHAR(10)  KEY  NOT NULL  SET("Description" = 'Purchasing Document Number'), 
BUKRS CHAR(4)  NULL  SET("Description" = 'Company Code'), 
BSTYP CHAR(1)  NULL  SET("Description" = 'Purchasing Document Category'), 
BSART CHAR(4)  NULL  SET("Description" = 'Purchasing Document Type'), 
BSAKZ CHAR(1)  NULL  SET("Description" = 'Control indicator for purchasing document type'), 
LOEKZ CHAR(1)  NULL  SET("Description" = 'Deletion Indicator in Purchasing Document'), 
STATU CHAR(1)  NULL  SET("Description" = 'Status of Purchasing Document'), 
AEDAT DATE  NULL  SET("Description" = 'Date on Which Record Was Created'), 
ERNAM CHAR(12)  NULL  SET("Description" = 'Name of Person who Created the Object'), 
PINCR NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number Interval'), 
LPONR NUMERIC(5, 0)  NULL  SET("Description" = 'Last Item Number'), 
LIFNR CHAR(10)  NULL  SET("Description" = 'Vendor Account Number'), 
SPRAS CHAR(1)  NULL  SET("Description" = 'Language Key'), 
ZTERM CHAR(4)  NULL  SET("Description" = 'Terms of Payment Key'), 
ZBD1T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash (Prompt Payment) Discount Days'), 
ZBD2T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash (Prompt Payment) Discount Days'), 
ZBD3T DECIMAL(3, 0)  NULL  SET("Description" = 'Cash (Prompt Payment) Discount Days'), 
ZBD1P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 1'), 
ZBD2P DECIMAL(5, 3)  NULL  SET("Description" = 'Cash Discount Percentage 2'), 
EKORG CHAR(4)  NULL  SET("Description" = 'Purchasing Organization'), 
EKGRP CHAR(3)  NULL  SET("Description" = 'Purchasing Group'), 
WAERS CHAR(5)  NULL  SET("Description" = 'Currency Key'), 
WKURS DECIMAL(9, 5)  NULL  SET("Description" = 'Exchange Rate'), 
KUFIX CHAR(1)  NULL  SET("Description" = 'Indicator: Fixing of Exchange Rate'), 
BEDAT DATE  NULL  SET("Description" = 'Purchasing Document Date'), 
KDATB DATE  NULL  SET("Description" = 'Start of Validity Period'), 
KDATE DATE  NULL  SET("Description" = 'End of Validity Period'), 
BWBDT DATE  NULL  SET("Description" = 'Closing Date for Applications'), 
ANGDT DATE  NULL  SET("Description" = 'Deadline for Submission of Bid/Quotation'), 
BNDDT DATE  NULL  SET("Description" = 'Binding Period for Quotation'), 
GWLDT DATE  NULL  SET("Description" = 'Warranty Date'), 
AUSNR CHAR(10)  NULL  SET("Description" = 'Bid invitation number'), 
ANGNR CHAR(10)  NULL  SET("Description" = 'Quotation Number'), 
IHRAN DATE  NULL  SET("Description" = 'Quotation Submission Date'), 
IHREZ CHAR(12)  NULL  SET("Description" = 'Your Reference'), 
VERKF CHAR(30)  NULL  SET("Description" = 'Responsible Salesperson at Vendor\'s Office'), 
TELF1 CHAR(16)  NULL  SET("Description" = 'Vendor\'s Telephone Number'), 
LLIEF CHAR(10)  NULL  SET("Description" = 'Supplying Vendor'), 
KUNNR CHAR(10)  NULL  SET("Description" = 'Customer Number'), 
KONNR CHAR(10)  NULL  SET("Description" = 'Number of Principal Purchase Agreement'), 
ABGRU CHAR(2)  NULL  SET("Description" = 'Field Not Used'), 
AUTLF CHAR(1)  NULL  SET("Description" = 'Complete Delivery Stipulated for Each Purchase Order'), 
WEAKT CHAR(1)  NULL  SET("Description" = 'Indicator: Goods Receipt Message'), 
RESWK CHAR(4)  NULL  SET("Description" = 'Supplying (Issuing) Plant in Stock Transport Order'), 
LBLIF CHAR(10)  NULL  SET("Description" = 'Field not used'), 
INCO1 CHAR(3)  NULL  SET("Description" = 'Incoterms (Part 1)'), 
INCO2 CHAR(28)  NULL  SET("Description" = 'Incoterms (Part 2)'), 
KTWRT DECIMAL(15, 2)  NULL  SET("Description" = 'Target Value for Header Area per Distribution'), 
SUBMI CHAR(10)  NULL  SET("Description" = 'Collective Number'), 
KNUMV CHAR(10)  NULL  SET("Description" = 'Number of the document condition'), 
KALSM CHAR(6)  NULL  SET("Description" = 'Procedure (Pricing, Output Control, Acct. Det., Costing,...)'), 
STAFO CHAR(6)  NULL  SET("Description" = 'Update group for statistics update'), 
LIFRE CHAR(10)  NULL  SET("Description" = 'Different Invoicing Party'), 
EXNUM CHAR(10)  NULL  SET("Description" = 'Number of foreign trade data in MM and SD documents'), 
UNSEZ CHAR(12)  NULL  SET("Description" = 'Our Reference'), 
LOGSY CHAR(10)  NULL  SET("Description" = 'Logical System'), 
UPINC NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number Interval for Subitems'), 
STAKO CHAR(1)  NULL  SET("Description" = 'Document with time-dependent conditions'), 
FRGGR CHAR(2)  NULL  SET("Description" = 'Release group'), 
FRGSX CHAR(2)  NULL  SET("Description" = 'Release Strategy'), 
FRGKE CHAR(1)  NULL  SET("Description" = 'Release Indicator: Purchasing Document'), 
FRGZU CHAR(8)  NULL  SET("Description" = 'Release status'), 
FRGRL CHAR(1)  NULL  SET("Description" = 'Release Not Yet Completely Effected'), 
LANDS CHAR(3)  NULL  SET("Description" = 'Country for Tax Return'), 
LPHIS CHAR(1)  NULL  SET("Description" = 'Indicator for scheduling agreement release documentation'), 
ADRNR CHAR(10)  NULL  SET("Description" = 'Address number'), 
STCEG_L CHAR(3)  NULL  SET("Description" = 'Country of Sales Tax ID Number'), 
STCEG CHAR(20)  NULL  SET("Description" = 'VAT Registration Number'), 
ABSGR NUMERIC(2, 0)  NULL  SET("Description" = 'Reason for Cancellation'), 
ADDNR CHAR(10)  NULL  SET("Description" = 'Document number for additional'), 
KORNR CHAR(1)  NULL  SET("Description" = 'Correction of miscellaneous provisions'), 
MEMORY CHAR(1)  NULL  SET("Description" = 'Purchase order not yet complete'), 
PROCSTAT CHAR(2)  NULL  SET("Description" = 'Purchasing document processing state'), 
RLWRT DECIMAL(15, 2)  NULL  SET("Description" = 'Total value at time of release'), 
REVNO CHAR(8)  NULL  SET("Description" = 'Version number in Purchasing'), 
SCMPROC CHAR(1)  NULL  SET("Description" = 'SCM Process That Created the Purchase Order'), 
REASON_CODE CHAR(4)  NULL  SET("Description" = 'Goods Receipt Reason Code'), 
MEMORYTYPE CHAR(1)  NULL  SET("Description" = 'Category of Incompleteness'), 
RETTP CHAR(1)  NULL  SET("Description" = 'Retention Indicator'), 
RETPC DECIMAL(5, 2)  NULL  SET("Description" = 'Retention in Percent'), 
DPTYP CHAR(4)  NULL  SET("Description" = 'Down Payment Indicator'), 
DPPCT DECIMAL(5, 2)  NULL  SET("Description" = 'Down Payment Percentage'), 
DPAMT DECIMAL(11, 2)  NULL  SET("Description" = 'Down Payment Amount in Document Currency'), 
DPDAT DATE  NULL  SET("Description" = 'Due Date for Down Payment'), 
MSR_ID CHAR(10)  NULL  SET("Description" = 'Process Identification Number'), 
HIERARCHY_EXISTS CHAR(1)  NULL  SET("Description" = 'Part of a Contract Hierarchy'), 
THRESHOLD_EXISTS CHAR(1)  NULL  SET("Description" = 'Threshold Value for Exchange Rates Exists'), 
LEGAL_CONTRACT CHAR(40)  NULL  SET("Description" = 'Legal Contract Number'), 
DESCRIPTION CHAR(40)  NULL  SET("Description" = 'Contract Name'), 
RELEASE_DATE DATE  NULL  SET("Description" = 'Release Date of Contract'), 
FORCE_ID CHAR(32)  NULL  SET("Description" = 'Internal Key for Force Element'), 
FORCE_CNT NUMERIC(6, 0)  NULL  SET("Description" = 'Internal (Version) Counter'), 
RELOC_ID CHAR(10)  NULL  SET("Description" = 'Relocation ID'), 
RELOC_SEQ_ID CHAR(4)  NULL  SET("Description" = 'Relocation Step ID'), 
POHF_TYPE CHAR(1)  NULL  SET("Description" = 'Document for Seasonal Purchase Order Processing'), 
EQ_EINDT DATE  NULL  SET("Description" = 'Delivery Date Header: All Items Have Same Delivery Date'), 
EQ_WERKS CHAR(4)  NULL  SET("Description" = 'Plant Header: All Items Have Same Receiving Plant'), 
FIXPO CHAR(1)  NULL  SET("Description" = 'Firm Deal Indicator'), 
EKGRP_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Purch. Group'), 
WERKS_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Plants'), 
CONTRACT_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Contracts'), 
PSTYP_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Item Categories'), 
FIXPO_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Fixed-Date Purchases Indicator'), 
KEY_ID_ALLOW CHAR(1)  NULL  SET("Description" = 'Consider Budget'), 
AUREL_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Alloc. Table Relevance'), 
DELPER_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Dlvy Period'), 
EINDT_ALLOW CHAR(1)  NULL  SET("Description" = 'Take Account of Delivery Date'), 
OTB_LEVEL CHAR(1)  NULL  SET("Description" = 'OTB Check Level'), 
OTB_COND_TYPE CHAR(4)  NULL  SET("Description" = 'OTB Condition Type'), 
KEY_ID NUMERIC(16, 0)  NULL  SET("Description" = 'Unique Number of Budget'), 
OTB_VALUE DECIMAL(17, 2)  NULL  SET("Description" = 'Required Budget'), 
OTB_CURR CHAR(5)  NULL  SET("Description" = 'OTB Currency'), 
OTB_RES_VALUE DECIMAL(17, 2)  NULL  SET("Description" = 'Reserved Budget for OTB-Relevant Purchasing Document'), 
OTB_SPEC_VALUE DECIMAL(17, 2)  NULL  SET("Description" = 'Special Release Budget'), 
SPR_RSN_PROFILE CHAR(4)  NULL  SET("Description" = 'Reason Profile for OTB Special Release'), 
BUDG_TYPE CHAR(2)  NULL  SET("Description" = 'Budget Type'), 
OTB_STATUS CHAR(1)  NULL  SET("Description" = 'OTB Check Status'), 
OTB_REASON CHAR(3)  NULL  SET("Description" = 'Reason Indicator for OTB Check Status'), 
CHECK_TYPE CHAR(1)  NULL  SET("Description" = 'Type of OTB Check'), 
CON_OTB_REQ CHAR(1)  NULL  SET("Description" = 'OTB-Relevant Contract'), 
CON_PREBOOK_LEV CHAR(1)  NULL  SET("Description" = 'OTB Indicator Level for Contracts'), 
CON_DISTR_LEV CHAR(1)  NULL  SET("Description" = 'Distribution Using Target Value or Item Data')) 
PRIMARY KEY (EBELN) 
CREATE_INDEX "1" ON (LIFNR, EKORG, EKGRP, BEDAT) 
CREATE_INDEX "2" ON (FRGRL, FRGGR, FRGSX) 
CREATE_INDEX D ON (BSTYP, BEDAT) 
CREATE_INDEX E ON (ERNAM, BSTYP) 
CREATE_INDEX "PRIMARY" ON (EBELN) PRIMARY 
CREATE_INDEX S ON (SUBMI) 
CREATE_INDEX W ON (RESWK, EKORG, BSTYP) 
FOREIGN KEY  (RELOC_ID) REFERENCES "/ISDFPS/REL" (RELOC_ID)
FOREIGN KEY  (RELOC_SEQ_ID) REFERENCES "/ISDFPS/RELSEQ" (RELOC_SEQ_ID)
FOREIGN KEY  (EXNUM) REFERENCES EIKP (EXNUM)
FOREIGN KEY  (AUSNR) REFERENCES EKKO (EBELN)
FOREIGN KEY  (KONNR) REFERENCES EKKO (EBELN)
FOREIGN KEY  (EBELN, LPONR) REFERENCES EKPO (EBELN, EBELP)
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (LLIEF) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LBLIF) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LIFRE) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (RESWK) REFERENCES T001W (WERKS)
FOREIGN KEY  (SPRAS) REFERENCES T002 (SPRAS)
FOREIGN KEY  (LANDS) REFERENCES T005 (LAND1)
FOREIGN KEY  (EKGRP) REFERENCES T024 (EKGRP)
FOREIGN KEY  (EKORG) REFERENCES T024E (EKORG)
FOREIGN KEY  (BSTYP, BSART) REFERENCES T161 (BSTYP, BSART)
FOREIGN KEY  (ABSGR) REFERENCES T165R (ABSGR)
FOREIGN KEY  (FRGKE) REFERENCES T16FB (FRGKE)
FOREIGN KEY  (FRGGR) REFERENCES T16FG (FRGGR)
FOREIGN KEY  (FRGGR, FRGSX) REFERENCES T16FS (FRGGR, FRGSX)
FOREIGN KEY  (KALSM) REFERENCES T683 (KALSM)
FOREIGN KEY  (WAERS) REFERENCES TCURC (WAERS)
FOREIGN KEY  (INCO1) REFERENCES TINC (INCO1);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '1902' , 
ActaName_3 = 'Rsap_table_type',ActaValue_3 = 'Transparent Table' , 
ActaName_4 = 'RDescription',ActaValue_4 = 'Purchasing Document Item' , 
ActaName_5 = 'RSAP_Table_Class',ActaValue_5 = '1' , 
ActaName_6 = 'RSAP_Table_Class_Name',ActaValue_6 = 'transparent' , 
ActaName_7 = 'REstimated_Row_Count',ActaValue_7 = '50000' , 
ActaName_8 = 'RSavedAfterCheckOut',ActaValue_8 = 'YES' , 
ActaName_9 = 'RLoader_Is_Template_Table',ActaValue_9 = 'no' , 
ActaName_10 = 'RDate_modified',ActaValue_10 = 'Thu Mar  4 02:38:39 2021' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Thu Oct 24 00:11:05 2019' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".EKPO(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
EBELN CHAR(10)  KEY  NOT NULL  SET("Description" = 'Purchasing Document Number'), 
EBELP NUMERIC(5, 0)  KEY  NOT NULL  SET("Description" = 'Item Number of Purchasing Document'), 
LOEKZ CHAR(1)  NULL  SET("Description" = 'Deletion Indicator in Purchasing Document'), 
STATU CHAR(1)  NULL  SET("Description" = 'RFQ status'), 
AEDAT DATE  NULL  SET("Description" = 'Purchasing Document Item Change Date'), 
TXZ01 CHAR(40)  NULL  SET("Description" = 'Short Text'), 
MATNR CHAR(18)  NULL  SET("Description" = 'Material Number'), 
EMATN CHAR(18)  NULL  SET("Description" = 'Material Number'), 
BUKRS CHAR(4)  NULL  SET("Description" = 'Company Code'), 
WERKS CHAR(4)  NULL  SET("Description" = 'Plant'), 
LGORT CHAR(4)  NULL  SET("Description" = 'Storage Location'), 
BEDNR CHAR(10)  NULL  SET("Description" = 'Requirement Tracking Number'), 
MATKL CHAR(9)  NULL  SET("Description" = 'Material Group'), 
INFNR CHAR(10)  NULL  SET("Description" = 'Number of Purchasing Info Record'), 
IDNLF CHAR(35)  NULL  SET("Description" = 'Material Number Used by Vendor'), 
KTMNG DECIMAL(13, 3)  NULL  SET("Description" = 'Target Quantity'), 
MENGE DECIMAL(13, 3)  NULL  SET("Description" = 'Purchase Order Quantity'), 
MEINS CHAR(3)  NULL  SET("Description" = 'Purchase Order Unit of Measure'), 
BPRME CHAR(3)  NULL  SET("Description" = 'Order Price Unit (Purchasing)'), 
BPUMZ DECIMAL(5, 0)  NULL  SET("Description" = 'Numerator for Conversion of Order Price Unit into Order Unit'), 
BPUMN DECIMAL(5, 0)  NULL  SET("Description" = 'Denominator for Conv. of Order Price Unit into Order Unit'), 
UMREZ DECIMAL(5, 0)  NULL  SET("Description" = 'Numerator for Conversion of Order Unit to Base Unit'), 
UMREN DECIMAL(5, 0)  NULL  SET("Description" = 'Denominator for Conversion of Order Unit to Base Unit'), 
NETPR DECIMAL(11, 2)  NULL  SET("Description" = 'Net Price in Purchasing Document (in Document Currency)'), 
PEINH DECIMAL(5, 0)  NULL  SET("Description" = 'Price Unit'), 
NETWR DECIMAL(13, 2)  NULL  SET("Description" = 'Net Order Value in PO Currency'), 
BRTWR DECIMAL(13, 2)  NULL  SET("Description" = 'Gross order value in PO currency'), 
AGDAT DATE  NULL  SET("Description" = 'Deadline for Submission of Bid/Quotation'), 
WEBAZ DECIMAL(3, 0)  NULL  SET("Description" = 'Goods Receipt Processing Time in Days'), 
MWSKZ CHAR(2)  NULL  SET("Description" = 'Tax on sales/purchases code'), 
BONUS CHAR(2)  NULL  SET("Description" = 'Settlement Group 1 (Purchasing)'), 
INSMK CHAR(1)  NULL  SET("Description" = 'Stock Type'), 
SPINF CHAR(1)  NULL  SET("Description" = 'Indicator: Update Info Record'), 
PRSDR CHAR(1)  NULL  SET("Description" = 'Price Printout'), 
SCHPR CHAR(1)  NULL  SET("Description" = 'Indicator: Estimated Price'), 
MAHNZ DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Reminders/Expediters'), 
MAHN1 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for First Reminder/Expediter'), 
MAHN2 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for Second Reminder/Expediter'), 
MAHN3 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for Third Reminder/Expediter'), 
UEBTO DECIMAL(3, 1)  NULL  SET("Description" = 'Overdelivery Tolerance Limit'), 
UEBTK CHAR(1)  NULL  SET("Description" = 'Indicator: Unlimited Overdelivery Allowed'), 
UNTTO DECIMAL(3, 1)  NULL  SET("Description" = 'Underdelivery Tolerance Limit'), 
BWTAR CHAR(10)  NULL  SET("Description" = 'Valuation Type'), 
BWTTY CHAR(1)  NULL  SET("Description" = 'Valuation Category'), 
ABSKZ CHAR(1)  NULL  SET("Description" = 'Rejection Indicator'), 
AGMEM CHAR(3)  NULL  SET("Description" = 'Internal Comment on Quotation'), 
ELIKZ CHAR(1)  NULL  SET("Description" = '"Delivery Completed" Indicator'), 
EREKZ CHAR(1)  NULL  SET("Description" = 'Final Invoice Indicator'), 
PSTYP CHAR(1)  NULL  SET("Description" = 'Item Category in Purchasing Document'), 
KNTTP CHAR(1)  NULL  SET("Description" = 'Account Assignment Category'), 
KZVBR CHAR(1)  NULL  SET("Description" = 'Consumption Posting'), 
VRTKZ CHAR(1)  NULL  SET("Description" = 'Distribution indicator for multiple account assignment'), 
TWRKZ CHAR(1)  NULL  SET("Description" = 'Partial Invoice Indicator'), 
WEPOS CHAR(1)  NULL  SET("Description" = 'Goods Receipt Indicator'), 
WEUNB CHAR(1)  NULL  SET("Description" = 'Goods Receipt, Non-Valuated'), 
REPOS CHAR(1)  NULL  SET("Description" = 'Invoice Receipt Indicator'), 
WEBRE CHAR(1)  NULL  SET("Description" = 'Indicator: GR-Based Invoice Verification'), 
KZABS CHAR(1)  NULL  SET("Description" = 'Order Acknowledgment Requirement'), 
LABNR CHAR(20)  NULL  SET("Description" = 'Order Acknowledgment Number'), 
KONNR CHAR(10)  NULL  SET("Description" = 'Number of Principal Purchase Agreement'), 
KTPNR NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Principal Purchase Agreement'), 
ABDAT DATE  NULL  SET("Description" = 'Reconciliation Date for Agreed Cumulative Quantity'), 
ABFTZ DECIMAL(13, 3)  NULL  SET("Description" = 'Agreed Cumulative Quantity'), 
ETFZ1 DECIMAL(3, 0)  NULL  SET("Description" = 'Firm Zone (Go-Ahead for Production)'), 
ETFZ2 DECIMAL(3, 0)  NULL  SET("Description" = 'Trade-Off Zone (Go-Ahead for Materials Procurement)'), 
KZSTU CHAR(1)  NULL  SET("Description" = 'Firm/Trade-Off Zones Binding with Regard to Mat. Planning'), 
NOTKZ CHAR(1)  NULL  SET("Description" = 'Exclusion in Outline Agreement Item with Material Class'), 
LMEIN CHAR(3)  NULL  SET("Description" = 'Base Unit of Measure'), 
EVERS CHAR(2)  NULL  SET("Description" = 'Shipping Instructions'), 
ZWERT DECIMAL(13, 2)  NULL  SET("Description" = 'Target Value for Outline Agreement in Document Currency'), 
NAVNW DECIMAL(13, 2)  NULL  SET("Description" = 'Non-deductible input tax'), 
ABMNG DECIMAL(13, 3)  NULL  SET("Description" = 'Standard release order quantity'), 
PRDAT DATE  NULL  SET("Description" = 'Date of Price Determination'), 
BSTYP CHAR(1)  NULL  SET("Description" = 'Purchasing Document Category'), 
EFFWR DECIMAL(13, 2)  NULL  SET("Description" = 'Effective value of item'), 
XOBLR CHAR(1)  NULL  SET("Description" = 'Item affects commitments'), 
KUNNR CHAR(10)  NULL  SET("Description" = 'Customer'), 
ADRNR CHAR(10)  NULL  SET("Description" = 'Manual address number in purchasing document item'), 
EKKOL CHAR(4)  NULL  SET("Description" = 'Condition Group with Vendor'), 
SKTOF CHAR(1)  NULL  SET("Description" = 'Item Does Not Qualify for Cash Discount'), 
STAFO CHAR(6)  NULL  SET("Description" = 'Update group for statistics update'), 
PLIFZ DECIMAL(3, 0)  NULL  SET("Description" = 'Planned Delivery Time in Days'), 
NTGEW DECIMAL(13, 3)  NULL  SET("Description" = 'Net Weight'), 
GEWEI CHAR(3)  NULL  SET("Description" = 'Unit of Weight'), 
TXJCD CHAR(15)  NULL  SET("Description" = 'Tax Jurisdiction'), 
ETDRK CHAR(1)  NULL  SET("Description" = 'Indicator: Print-relevant schedule lines exist'), 
SOBKZ CHAR(1)  NULL  SET("Description" = 'Special Stock Indicator'), 
ARSNR NUMERIC(10, 0)  NULL  SET("Description" = 'Settlement reservation number'), 
ARSPS NUMERIC(4, 0)  NULL  SET("Description" = 'Item number of the settlement reservation'), 
INSNC CHAR(1)  NULL  SET("Description" = 'Quality inspection indicator cannot be changed'), 
SSQSS CHAR(8)  NULL  SET("Description" = 'Control Key for Quality Management in Procurement'), 
ZGTYP CHAR(4)  NULL  SET("Description" = 'Certificate Type'), 
EAN11 CHAR(18)  NULL  SET("Description" = 'International Article Number (EAN/UPC)'), 
BSTAE CHAR(4)  NULL  SET("Description" = 'Confirmation Control Key'), 
REVLV CHAR(2)  NULL  SET("Description" = 'Revision Level'), 
GEBER CHAR(10)  NULL  SET("Description" = 'Fund'), 
FISTL CHAR(16)  NULL  SET("Description" = 'Funds Center'), 
FIPOS CHAR(14)  NULL  SET("Description" = 'Commitment Item'), 
KO_GSBER CHAR(4)  NULL  SET("Description" = 'Business area reported to the partner'), 
KO_PARGB CHAR(4)  NULL  SET("Description" = 'assumed business area of the business partner'), 
KO_PRCTR CHAR(10)  NULL  SET("Description" = 'Profit Center'), 
KO_PPRCTR CHAR(10)  NULL  SET("Description" = 'Partner Profit Center'), 
MEPRF CHAR(1)  NULL  SET("Description" = 'Price Determination (Pricing) Date Control'), 
BRGEW DECIMAL(13, 3)  NULL  SET("Description" = 'Gross Weight'), 
VOLUM DECIMAL(13, 3)  NULL  SET("Description" = 'Volume'), 
VOLEH CHAR(3)  NULL  SET("Description" = 'Volume unit'), 
INCO1 CHAR(3)  NULL  SET("Description" = 'Incoterms (Part 1)'), 
INCO2 CHAR(28)  NULL  SET("Description" = 'Incoterms (Part 2)'), 
VORAB CHAR(1)  NULL  SET("Description" = 'Advance procurement: project stock'), 
KOLIF CHAR(10)  NULL  SET("Description" = 'Prior Vendor'), 
LTSNR CHAR(6)  NULL  SET("Description" = 'Vendor Subrange'), 
PACKNO NUMERIC(10, 0)  NULL  SET("Description" = 'Package number'), 
FPLNR CHAR(10)  NULL  SET("Description" = 'Invoicing plan number'), 
GNETWR DECIMAL(13, 2)  NULL  SET("Description" = 'Currently not used'), 
STAPO CHAR(1)  NULL  SET("Description" = 'Item is statistical'), 
UEBPO NUMERIC(5, 0)  NULL  SET("Description" = 'Higher-Level Item in Purchasing Documents'), 
LEWED DATE  NULL  SET("Description" = 'Latest Possible Goods Receipt'), 
EMLIF CHAR(10)  NULL  SET("Description" = 'Vendor to be supplied/who is to receive delivery'), 
LBLKZ CHAR(1)  NULL  SET("Description" = 'Subcontracting vendor'), 
SATNR CHAR(18)  NULL  SET("Description" = 'Cross-Plant Configurable Material'), 
ATTYP CHAR(2)  NULL  SET("Description" = 'Material Category'), 
KANBA CHAR(1)  NULL  SET("Description" = 'Kanban Indicator'), 
ADRN2 CHAR(10)  NULL  SET("Description" = 'Number of delivery address'), 
CUOBJ NUMERIC(18, 0)  NULL  SET("Description" = 'Configuration (internal object number)'), 
XERSY CHAR(1)  NULL  SET("Description" = 'Evaluated Receipt Settlement (ERS)'), 
EILDT DATE  NULL  SET("Description" = 'Start Date for GR-Based Settlement'), 
DRDAT DATE  NULL  SET("Description" = 'Last Transmission'), 
DRUHR TIME  NULL  SET("Description" = 'Time'), 
DRUNR NUMERIC(4, 0)  NULL  SET("Description" = 'Sequential Number'), 
AKTNR CHAR(10)  NULL  SET("Description" = 'Promotion'), 
ABELN CHAR(10)  NULL  SET("Description" = 'Allocation Table Number'), 
ABELP NUMERIC(5, 0)  NULL  SET("Description" = 'Item number of allocation table'), 
ANZPU DECIMAL(13, 3)  NULL  SET("Description" = 'Number of Points'), 
PUNEI CHAR(3)  NULL  SET("Description" = 'Points unit'), 
SAISO CHAR(4)  NULL  SET("Description" = 'Season Category'), 
SAISJ CHAR(4)  NULL  SET("Description" = 'Season Year'), 
EBON2 CHAR(2)  NULL  SET("Description" = 'Settlement Group 2 (Rebate Settlement, Purchasing)'), 
EBON3 CHAR(2)  NULL  SET("Description" = 'Settlement Group 3 (Rebate Settlement, Purchasing)'), 
EBONF CHAR(1)  NULL  SET("Description" = 'Item Relevant to Subsequent (Period-End Rebate) Settlement'), 
MLMAA CHAR(1)  NULL  SET("Description" = 'Material ledger activated at material level'), 
MHDRZ DECIMAL(4, 0)  NULL  SET("Description" = 'Minimum Remaining Shelf Life'), 
ANFNR CHAR(10)  NULL  SET("Description" = 'RFQ Number'), 
ANFPS NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of RFQ'), 
KZKFG CHAR(1)  NULL  SET("Description" = 'Origin of Configuration'), 
USEQU CHAR(1)  NULL  SET("Description" = 'Quota arrangement usage'), 
UMSOK CHAR(1)  NULL  SET("Description" = 'Special Stock Indicator for Physical Stock Transfer'), 
BANFN CHAR(10)  NULL  SET("Description" = 'Purchase Requisition Number'), 
BNFPO NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Purchase Requisition'), 
MTART CHAR(4)  NULL  SET("Description" = 'Material Type'), 
UPTYP CHAR(1)  NULL  SET("Description" = 'Subitem Category, Purchasing Document'), 
UPVOR CHAR(1)  NULL  SET("Description" = 'Subitems Exist'), 
KZWI1 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 1 from pricing procedure for condition'), 
KZWI2 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 2 from pricing procedure for condition'), 
KZWI3 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 3 from pricing procedure for condition'), 
KZWI4 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 4 from pricing procedure for condition'), 
KZWI5 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 5 from pricing procedure for condition'), 
KZWI6 DECIMAL(13, 2)  NULL  SET("Description" = 'Subtotal 6 from pricing procedure for condition'), 
SIKGR CHAR(3)  NULL  SET("Description" = 'Processing key for sub-items'), 
MFZHI DECIMAL(15, 3)  NULL  SET("Description" = 'Maximum Cumulative Material Go-Ahead Quantity'), 
FFZHI DECIMAL(15, 3)  NULL  SET("Description" = 'Maximum Cumulative Production Go-Ahead Quantity'), 
RETPO CHAR(1)  NULL  SET("Description" = 'Returns Item'), 
AUREL CHAR(1)  NULL  SET("Description" = 'Relevant to Allocation Table'), 
BSGRU CHAR(3)  NULL  SET("Description" = 'Reason for Ordering'), 
LFRET CHAR(4)  NULL  SET("Description" = 'Delivery Type for Returns to Vendors'), 
MFRGR CHAR(8)  NULL  SET("Description" = 'Material freight group'), 
NRFHG CHAR(1)  NULL  SET("Description" = 'Material qualifies for discount in kind'), 
J_1BNBM CHAR(16)  NULL  SET("Description" = 'Brazilian NCM Code'), 
J_1BMATUSE CHAR(1)  NULL  SET("Description" = 'Usage of the material'), 
J_1BMATORG CHAR(1)  NULL  SET("Description" = 'Origin of the material'), 
J_1BOWNPRO CHAR(1)  NULL  SET("Description" = 'Produced in-house'), 
J_1BINDUST CHAR(2)  NULL  SET("Description" = 'Material CFOP category'), 
ABUEB CHAR(4)  NULL  SET("Description" = 'Release Creation Profile'), 
NLABD DATE  NULL  SET("Description" = 'Next Forecast Delivery Schedule Transmission'), 
NFABD DATE  NULL  SET("Description" = 'Next JIT Delivery Schedule Transmission'), 
KZBWS CHAR(1)  NULL  SET("Description" = 'Valuation of Special Stock'), 
BONBA DECIMAL(13, 2)  NULL  SET("Description" = 'Rebate basis 1'), 
FABKZ CHAR(1)  NULL  SET("Description" = 'Indicator: Item Relevant to JIT Delivery Schedules'), 
J_1AINDXP CHAR(5)  NULL  SET("Description" = 'Inflation Index'), 
J_1AIDATEP DATE  NULL  SET("Description" = 'Inflation Index Date'), 
MPROF CHAR(4)  NULL  SET("Description" = 'Manufacturer Part Profile'), 
EGLKZ CHAR(1)  NULL  SET("Description" = '"Outward Delivery Completed" Indicator'), 
KZTLF CHAR(1)  NULL  SET("Description" = 'Partial Delivery at Item Level (Stock Transfer)'), 
KZFME CHAR(1)  NULL  SET("Description" = 'Units of measure usage'), 
RDPRF CHAR(4)  NULL  SET("Description" = 'Rounding Profile'), 
TECHS CHAR(12)  NULL  SET("Description" = 'Parameter Variant/Standard Variant'), 
CHG_SRV CHAR(1)  NULL  SET("Description" = 'Configuration changed'), 
CHG_FPLNR CHAR(1)  NULL  SET("Description" = 'No invoice for this item although not free of charge'), 
MFRPN CHAR(40)  NULL  SET("Description" = 'Manufacturer Part Number'), 
MFRNR CHAR(10)  NULL  SET("Description" = 'Number of a Manufacturer'), 
EMNFR CHAR(10)  NULL  SET("Description" = 'External manufacturer code name or number'), 
NOVET CHAR(1)  NULL  SET("Description" = 'Item blocked for SD delivery'), 
AFNAM CHAR(12)  NULL  SET("Description" = 'Name of Requisitioner/Requester'), 
TZONRC CHAR(6)  NULL  SET("Description" = 'Time zone of recipient location'), 
IPRKZ CHAR(1)  NULL  SET("Description" = 'Period Indicator for Shelf Life Expiration Date'), 
LEBRE CHAR(1)  NULL  SET("Description" = 'Indicator for Service-Based Invoice Verification'), 
BERID CHAR(10)  NULL  SET("Description" = 'MRP Area'), 
XCONDITIONS CHAR(1)  NULL  SET("Description" = 'Conditions for item although no invoice'), 
APOMS CHAR(1)  NULL  SET("Description" = 'APO as Planning System'), 
CCOMP CHAR(1)  NULL  SET("Description" = 'Posting Logic in the Case of Stock Transfers'), 
GRANT_NBR CHAR(20)  NULL  SET("Description" = 'Grant'), 
FKBER CHAR(16)  NULL  SET("Description" = 'Functional Area'), 
STATUS CHAR(1)  NULL  SET("Description" = 'Status of Purchasing Document Item'), 
RESLO CHAR(4)  NULL  SET("Description" = 'Issuing Storage Location for Stock Transport Order'), 
KBLNR CHAR(10)  NULL  SET("Description" = 'Document Number for Earmarked Funds'), 
KBLPOS NUMERIC(3, 0)  NULL  SET("Description" = 'Earmarked Funds: Document Item'), 
WEORA CHAR(1)  NULL  SET("Description" = 'Acceptance At Origin'), 
SRV_BAS_COM CHAR(1)  NULL  SET("Description" = 'Service-Based Commitment'), 
PRIO_URG NUMERIC(2, 0)  NULL  SET("Description" = 'Requirement Urgency'), 
PRIO_REQ NUMERIC(3, 0)  NULL  SET("Description" = 'Requirement Priority'), 
EMPST CHAR(25)  NULL  SET("Description" = 'Receiving point'), 
DIFF_INVOICE CHAR(2)  NULL  SET("Description" = 'Differential Invoicing'), 
TRMRISK_RELEVANT CHAR(2)  NULL  SET("Description" = 'Risk Relevancy in Purchasing'), 
SPE_ABGRU CHAR(2)  NULL  SET("Description" = 'Reason for rejection of quotations and sales orders'), 
SPE_CRM_SO CHAR(10)  NULL  SET("Description" = 'CRM Sales Order Number for TPOP Process'), 
SPE_CRM_SO_ITEM NUMERIC(6, 0)  NULL  SET("Description" = 'CRM Sales Order Item Number in TPOP Process'), 
SPE_CRM_REF_SO CHAR(35)  NULL  SET("Description" = 'CRM Reference Order Number for TPOP Process'), 
SPE_CRM_REF_ITEM CHAR(6)  NULL  SET("Description" = 'CRM Reference Sales Order Item Number in TPOP Process'), 
SPE_CRM_FKREL CHAR(1)  NULL  SET("Description" = 'Billing Relevance CRM'), 
SPE_CHNG_SYS CHAR(1)  NULL  SET("Description" = 'Last Changer\'s System Type'), 
SPE_INSMK_SRC CHAR(1)  NULL  SET("Description" = 'Stock Type of Source Storage Location in STO'), 
SPE_CQ_CTRLTYPE CHAR(1)  NULL  SET("Description" = 'CQ Control Type'), 
SPE_CQ_NOCQ CHAR(1)  NULL  SET("Description" = 'No Transmission of Cumulative Quantities in SA Release'), 
REASON_CODE CHAR(4)  NULL  SET("Description" = 'Goods Receipt Reason Code'), 
CQU_SAR DECIMAL(15, 3)  NULL  SET("Description" = 'Cumulative Goods Receipts from Redirected Purchase Orders'), 
ANZSN INT  NULL  SET("Description" = 'Number of serial numbers'), 
SPE_EWM_DTC CHAR(1)  NULL  SET("Description" = 'EWM Delivery Based Tolerance Check'), 
EXLIN CHAR(40)  NULL  SET("Description" = 'Item Number Length'), 
EXSNR NUMERIC(5, 0)  NULL  SET("Description" = 'External Sorting'), 
EHTYP CHAR(4)  NULL  SET("Description" = 'External Hierarchy Category'), 
RETPC DECIMAL(5, 2)  NULL  SET("Description" = 'Retention in Percent'), 
DPTYP CHAR(4)  NULL  SET("Description" = 'Down Payment Indicator'), 
DPPCT DECIMAL(5, 2)  NULL  SET("Description" = 'Down Payment Percentage'), 
DPAMT DECIMAL(11, 2)  NULL  SET("Description" = 'Down Payment Amount in Document Currency'), 
DPDAT DATE  NULL  SET("Description" = 'Due Date for Down Payment'), 
FLS_RSTO CHAR(1)  NULL  SET("Description" = 'Store Return with Inbound and Outbound Delivery'), 
EXT_RFX_NUMBER CHAR(35)  NULL  SET("Description" = 'Document Number of External Document'), 
EXT_RFX_ITEM CHAR(10)  NULL  SET("Description" = 'Item Number of External Document'), 
EXT_RFX_SYSTEM CHAR(10)  NULL  SET("Description" = 'Logical System'), 
SRM_CONTRACT_ID CHAR(10)  NULL  SET("Description" = 'Central Contract'), 
SRM_CONTRACT_ITM NUMERIC(10, 0)  NULL  SET("Description" = 'Central Contract Item Number'), 
BLK_REASON_ID CHAR(4)  NULL  SET("Description" = 'Blocking Reason - ID'), 
BLK_REASON_TXT CHAR(40)  NULL  SET("Description" = 'Blocking Reason - Text'), 
ITCONS CHAR(1)  NULL  SET("Description" = 'Real-Time Consumption Posting of Subcontracting Components'), 
FIXMG CHAR(1)  NULL  SET("Description" = 'Delivery Date and Quantity Fixed'), 
WABWE CHAR(1)  NULL  SET("Description" = 'Indicator for GI-based goods receipt'), 
TC_AUT_DET CHAR(2)  NULL  SET("Description" = 'Tax Code Automatically Determined'), 
MANUAL_TC_REASON CHAR(2)  NULL  SET("Description" = 'Manual Tax Code Reason'), 
FISCAL_INCENTIVE CHAR(4)  NULL  SET("Description" = 'Tax Incentive Type'), 
TAX_SUBJECT_ST CHAR(1)  NULL  SET("Description" = 'Tax Subject to Substituição Tributária'), 
FISCAL_INCENTIVE_ID CHAR(4)  NULL  SET("Description" = 'Incentive ID'), 
"/BEV1/NEGEN_ITEM" CHAR(1)  NULL  SET("Description" = 'Indicator: Item Is Generated'), 
"/BEV1/NEDEPFREE" CHAR(1)  NULL  SET("Description" = 'Indicator: Dependent Items Are Free of Charge'), 
"/BEV1/NESTRUCCAT" CHAR(1)  NULL  SET("Description" = 'Structure Category for Material Relationship'), 
ADVCODE CHAR(2)  NULL  SET("Description" = 'Advice Code'), 
BUDGET_PD CHAR(10)  NULL  SET("Description" = 'FM: Budget Period'), 
EXCPE NUMERIC(2, 0)  NULL  SET("Description" = 'Acceptance Period'), 
IUID_RELEVANT CHAR(1)  NULL  SET("Description" = 'IUID-Relevant'), 
MRPIND CHAR(1)  NULL  SET("Description" = 'Max. Retail Price Relevant'), 
ZZREMARK CHAR(132)  NULL , 
REFSITE CHAR(4)  NULL  SET("Description" = 'Reference Site For Purchasing'), 
REF_ITEM NUMERIC(5, 0)  NULL  SET("Description" = 'Reference Item for Remaining Qty Cancellation'), 
SOURCE_ID CHAR(3)  NULL  SET("Description" = 'Origin Profile'), 
SOURCE_KEY CHAR(32)  NULL  SET("Description" = 'Key in Source System'), 
PUT_BACK CHAR(1)  NULL  SET("Description" = 'Indicator for Putting Back from Grouped PO Document'), 
POL_ID CHAR(10)  NULL  SET("Description" = 'Order List Item Number'), 
CONS_ORDER CHAR(1)  NULL  SET("Description" = 'Purchase Order for Consignment')) 
PRIMARY KEY (EBELN, EBELP) 
CREATE_INDEX "1" ON (MATNR, WERKS, BSTYP, LOEKZ, ELIKZ, MATKL) 
CREATE_INDEX A ON (AFNAM, BSTYP) 
CREATE_INDEX B ON (BEDNR, BSTYP) 
CREATE_INDEX FPL ON (FPLNR) 
CREATE_INDEX "PRIMARY" ON (EBELN, EBELP) PRIMARY 
CREATE_INDEX SRV ON (PACKNO) 
FOREIGN KEY  (ADRN2) REFERENCES ADRC (ADDRNUMBER)
FOREIGN KEY  (ADRNR, AEDAT) REFERENCES ADRC (ADDRNUMBER, DATE_FROM)
FOREIGN KEY  (ABELN) REFERENCES AUKO (ABELN)
FOREIGN KEY  (KO_PPRCTR) REFERENCES CEPC (PRCTR)
FOREIGN KEY  (KO_PRCTR) REFERENCES CEPC (PRCTR)
FOREIGN KEY  (BANFN, BNFPO) REFERENCES EBAN (BANFN, BNFPO)
FOREIGN KEY  (INFNR) REFERENCES EINA (INFNR)
FOREIGN KEY  (ANFNR) REFERENCES EKKO (EBELN)
FOREIGN KEY  (EBELN) REFERENCES EKKO (EBELN)
FOREIGN KEY  (KONNR) REFERENCES EKKO (EBELN)
FOREIGN KEY  (ANFNR) REFERENCES EKPO (EBELN)
FOREIGN KEY  (KONNR) REFERENCES EKPO (EBELN)
FOREIGN KEY  (KONNR) REFERENCES EKPO (EBELN)
FOREIGN KEY  (KTPNR) REFERENCES EKPO (EBELP)
FOREIGN KEY  (UEBPO, ANFPS) REFERENCES EKPO (EBELP, EBELP)
FOREIGN KEY  (PACKNO) REFERENCES ESLH (PACKNO)
FOREIGN KEY  (FIPOS, PRDAT) REFERENCES FMFPO (FIPOS, DATBIS)
FOREIGN KEY  (J_1AINDXP) REFERENCES J_1AINFT20 (J_1AINDX)
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (EMLIF) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (KOLIF) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (MFRNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (EMATN) REFERENCES MARA (MATNR)
FOREIGN KEY  (MATNR) REFERENCES MARA (MATNR)
FOREIGN KEY  (SATNR) REFERENCES MARA (MATNR)
FOREIGN KEY  (BERID) REFERENCES MDLV (BERID)
FOREIGN KEY  (PRIO_REQ) REFERENCES PREQ (PRIO_REQ)
FOREIGN KEY  (PRIO_URG) REFERENCES PURG (PRIO_URG)
FOREIGN KEY  (WERKS, RDPRF) REFERENCES RDPR (WERKS, RDPRF)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (WERKS) REFERENCES T001L (WERKS)
FOREIGN KEY  (RESLO, LGORT) REFERENCES T001L (LGORT, LGORT)
FOREIGN KEY  (WERKS) REFERENCES T001W (WERKS)
FOREIGN KEY  (BPRME) REFERENCES T006 (MSEHI)
FOREIGN KEY  (GEWEI) REFERENCES T006 (MSEHI)
FOREIGN KEY  (LMEIN) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MEINS) REFERENCES T006 (MSEHI)
FOREIGN KEY  (PUNEI) REFERENCES T006 (MSEHI)
FOREIGN KEY  (VOLEH) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MWSKZ) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (MATKL) REFERENCES T023 (MATKL)
FOREIGN KEY  (EVERS) REFERENCES T027A (EVERS)
FOREIGN KEY  (MTART) REFERENCES T134 (MTART)
FOREIGN KEY  (SOBKZ) REFERENCES T148 (SOBKZ)
FOREIGN KEY  (BWTTY) REFERENCES T149C (BWTTY)
FOREIGN KEY  (BWTAR) REFERENCES T149D (BWTAR)
FOREIGN KEY  (PSTYP) REFERENCES T163 (PSTYP)
FOREIGN KEY  (KNTTP) REFERENCES T163K (KNTTP)
FOREIGN KEY  (BSTAE) REFERENCES T163L (BSTAE)
FOREIGN KEY  (WERKS, ABUEB) REFERENCES T163P (WERKS, ABUEB)
FOREIGN KEY  (J_1BNBM) REFERENCES T604F (STEUC)
FOREIGN KEY  (SAISO) REFERENCES T6WSP (SAISO)
FOREIGN KEY  (BSGRU) REFERENCES TBSG (BSGRU)
FOREIGN KEY  (INCO1) REFERENCES TINC (INCO1)
FOREIGN KEY  (AGMEM) REFERENCES TMAM (AGMEM)
FOREIGN KEY  (MFRGR) REFERENCES TMFG (MFRGR)
FOREIGN KEY  (USEQU) REFERENCES TMQ2 (USEQU)
FOREIGN KEY  (UPTYP) REFERENCES TMSI1 (UPTYP)
FOREIGN KEY  (SIKGR) REFERENCES TMSI2 (SIKGR)
FOREIGN KEY  (EHTYP) REFERENCES TMSRM_EHTYP (EHTYP)
FOREIGN KEY  (ZGTYP) REFERENCES TQ05 (ZGTYP)
FOREIGN KEY  (SSQSS) REFERENCES TQ08 (QM_PUR)
FOREIGN KEY  (TXJCD) REFERENCES TTXJ (TXJCD)
FOREIGN KEY  (LFRET) REFERENCES TVLK (LFART)
FOREIGN KEY  (AKTNR) REFERENCES WAKH (AKTNR)
FOREIGN KEY  (SOURCE_ID) REFERENCES WRFT_POHF_SOURCE (SOURCE_ID)
FOREIGN KEY  (KOLIF, LTSNR) REFERENCES WYT1 (LIFNR, LTSNR);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '1666' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '3' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Vendor Master (General Section)' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_modified',ActaValue_11 = 'Thu Mar  4 02:38:40 2021' , 
ActaName_12 = 'RDate_created',ActaValue_12 = 'Thu Oct 24 00:16:11 2019' , 
ActaName_13 = 'RDate_last_loaded',ActaValue_13 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".LFA1(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
LIFNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
LAND1 CHAR(3)  NULL  SET("Description" = 'Country Key'), 
NAME1 CHAR(35)  NULL  SET("Description" = 'Name 1'), 
NAME2 CHAR(35)  NULL  SET("Description" = 'Name 2'), 
NAME3 CHAR(35)  NULL  SET("Description" = 'Name 3'), 
NAME4 CHAR(35)  NULL  SET("Description" = 'Name 4'), 
ORT01 CHAR(35)  NULL  SET("Description" = 'City'), 
ORT02 CHAR(35)  NULL  SET("Description" = 'District'), 
PFACH CHAR(10)  NULL  SET("Description" = 'PO Box'), 
PSTL2 CHAR(10)  NULL  SET("Description" = 'P.O. Box Postal Code'), 
PSTLZ CHAR(10)  NULL  SET("Description" = 'Postal Code'), 
REGIO CHAR(3)  NULL  SET("Description" = 'Region (State, Province, County)'), 
SORTL CHAR(10)  NULL  SET("Description" = 'Sort field'), 
STRAS CHAR(35)  NULL  SET("Description" = 'House number and street'), 
ADRNR CHAR(10)  NULL  SET("Description" = 'Address'), 
MCOD1 CHAR(25)  NULL  SET("Description" = 'Search term for matchcode search'), 
MCOD2 CHAR(25)  NULL  SET("Description" = 'Search term for matchcode search'), 
MCOD3 CHAR(25)  NULL  SET("Description" = 'Search term for matchcode search'), 
ANRED CHAR(15)  NULL  SET("Description" = 'Title'), 
BAHNS CHAR(25)  NULL  SET("Description" = 'Train station'), 
BBBNR NUMERIC(7, 0)  NULL  SET("Description" = 'International location number  (part 1)'), 
BBSNR NUMERIC(5, 0)  NULL  SET("Description" = 'International location number (Part 2)'), 
BEGRU CHAR(4)  NULL  SET("Description" = 'Authorization Group'), 
BRSCH CHAR(4)  NULL  SET("Description" = 'Industry key'), 
BUBKZ NUMERIC(1, 0)  NULL  SET("Description" = 'Check digit for the international location number'), 
DATLT CHAR(14)  NULL  SET("Description" = 'Data communication line no.'), 
DTAMS CHAR(1)  NULL  SET("Description" = 'Indicator for Data Medium Exchange'), 
DTAWS CHAR(2)  NULL  SET("Description" = 'Instruction key for data medium exchange'), 
ERDAT DATE  NULL  SET("Description" = 'Date on which the Record Was Created'), 
ERNAM CHAR(12)  NULL  SET("Description" = 'Name of Person who Created the Object'), 
ESRNR CHAR(11)  NULL  SET("Description" = 'ISR Subscriber Number'), 
KONZS CHAR(10)  NULL  SET("Description" = 'Group key'), 
KTOKK CHAR(4)  NULL  SET("Description" = 'Vendor account group'), 
KUNNR CHAR(10)  NULL  SET("Description" = 'Customer Number'), 
LNRZA CHAR(10)  NULL  SET("Description" = 'Account Number of the Alternative Payee'), 
LOEVM CHAR(1)  NULL  SET("Description" = 'Central Deletion Flag for Master Record'), 
SPERR CHAR(1)  NULL  SET("Description" = 'Central posting block'), 
SPERM CHAR(1)  NULL  SET("Description" = 'Centrally imposed purchasing block'), 
SPRAS CHAR(1)  NULL  SET("Description" = 'Language Key'), 
STCD1 CHAR(16)  NULL  SET("Description" = 'Tax Number 1'), 
STCD2 CHAR(11)  NULL  SET("Description" = 'Tax Number 2'), 
STKZA CHAR(1)  NULL  SET("Description" = 'Indicator: Business Partner Subject to Equalization Tax?'), 
STKZU CHAR(1)  NULL  SET("Description" = 'Liable for VAT'), 
TELBX CHAR(15)  NULL  SET("Description" = 'Telebox number'), 
TELF1 CHAR(16)  NULL  SET("Description" = 'First telephone number'), 
TELF2 CHAR(16)  NULL  SET("Description" = 'Second telephone number'), 
TELFX CHAR(31)  NULL  SET("Description" = 'Fax Number'), 
TELTX CHAR(30)  NULL  SET("Description" = 'Teletex number'), 
TELX1 CHAR(30)  NULL  SET("Description" = 'Telex number'), 
XCPDK CHAR(1)  NULL  SET("Description" = 'Indicator: Is the account a one-time account?'), 
XZEMP CHAR(1)  NULL  SET("Description" = 'Indicator: Alternative payee in document allowed ?'), 
VBUND CHAR(6)  NULL  SET("Description" = 'Company ID of Trading Partner'), 
FISKN CHAR(10)  NULL  SET("Description" = 'Account number of the master record with fiscal address'), 
STCEG CHAR(20)  NULL  SET("Description" = 'VAT Registration Number'), 
STKZN CHAR(1)  NULL  SET("Description" = 'Natural Person'), 
SPERQ CHAR(2)  NULL  SET("Description" = 'Function That Will Be Blocked'), 
GBORT CHAR(25)  NULL  SET("Description" = 'Place of birth of the person subject to withholding tax'), 
GBDAT DATE  NULL  SET("Description" = 'Date of birth of the person subject to withholding tax'), 
SEXKZ CHAR(1)  NULL  SET("Description" = 'Key for the Sex of the Person Subject to Withholding Tax'), 
KRAUS CHAR(11)  NULL  SET("Description" = 'Credit information number'), 
REVDB DATE  NULL  SET("Description" = 'Last review (external)'), 
QSSYS CHAR(4)  NULL  SET("Description" = 'Vendor\'s QM system'), 
KTOCK CHAR(4)  NULL  SET("Description" = 'Reference Account Group for One-Time Account (Vendor)'), 
PFORT CHAR(35)  NULL  SET("Description" = 'PO Box city'), 
WERKS CHAR(4)  NULL  SET("Description" = 'Plant (Own or External)'), 
LTSNA CHAR(1)  NULL  SET("Description" = 'Indicator: vendor sub-range relevant'), 
WERKR CHAR(1)  NULL  SET("Description" = 'Indicator: plant level relevant'), 
PLKAL CHAR(2)  NULL  SET("Description" = 'Factory calendar key'), 
DUEFL CHAR(1)  NULL  SET("Description" = 'Status of Data Transfer into Subsequent Release'), 
TXJCD CHAR(15)  NULL  SET("Description" = 'Tax Jurisdiction'), 
SPERZ CHAR(1)  NULL  SET("Description" = 'Payment Block'), 
SCACD CHAR(4)  NULL  SET("Description" = 'Standard carrier access code'), 
SFRGR CHAR(4)  NULL  SET("Description" = 'Forwarding agent freight group'), 
LZONE CHAR(10)  NULL  SET("Description" = 'Transportation zone to or from which the goods are delivered'), 
XLFZA CHAR(1)  NULL  SET("Description" = 'Indicator: Alternative payee using account number'), 
DLGRP CHAR(4)  NULL  SET("Description" = 'Service agent procedure group'), 
FITYP CHAR(2)  NULL  SET("Description" = 'Tax type'), 
STCDT CHAR(2)  NULL  SET("Description" = 'Tax Number Type'), 
REGSS CHAR(1)  NULL  SET("Description" = 'Registered for Social Insurance'), 
ACTSS CHAR(3)  NULL  SET("Description" = 'Activity Code for Social Insurance'), 
STCD3 CHAR(18)  NULL  SET("Description" = 'Tax Number 3'), 
STCD4 CHAR(18)  NULL  SET("Description" = 'Tax Number 4'), 
STCD5 CHAR(60)  NULL  SET("Description" = 'Tax Number 5'), 
IPISP CHAR(1)  NULL  SET("Description" = 'Tax Split'), 
TAXBS NUMERIC(1, 0)  NULL  SET("Description" = 'Tax Base in Percentage'), 
PROFS CHAR(30)  NULL  SET("Description" = 'Profession'), 
STGDL CHAR(2)  NULL  SET("Description" = 'Shipment: statistics group, transportation service agent'), 
EMNFR CHAR(10)  NULL  SET("Description" = 'External manufacturer code name or number'), 
LFURL CHAR(132)  NULL  SET("Description" = 'Uniform Resource Locator'), 
J_1KFREPRE CHAR(10)  NULL  SET("Description" = 'Name of Representative'), 
J_1KFTBUS CHAR(30)  NULL  SET("Description" = 'Type of Business'), 
J_1KFTIND CHAR(30)  NULL  SET("Description" = 'Type of Industry'), 
CONFS CHAR(1)  NOT NULL  SET("Description" = 'Status of Change Authorization (Central)'), 
UPDAT DATE  NULL  SET("Description" = 'Date on Which the Changes Were Confirmed'), 
UPTIM TIME  NULL  SET("Description" = 'Time of Last Change Confirmation'), 
NODEL CHAR(1)  NOT NULL  SET("Description" = 'Central deletion block for master record'), 
QSSYSDAT DATE  NULL  SET("Description" = 'Validity date of certification'), 
PODKZB CHAR(1)  NULL  SET("Description" = 'Vendor indicator relevant for proof of delivery'), 
FISKU CHAR(10)  NULL  SET("Description" = 'Account Number of Master Record of Tax Office Responsible'), 
STENR CHAR(18)  NULL  SET("Description" = 'Tax Number at Responsible Tax Authority'), 
CARRIER_CONF CHAR(1)  NULL  SET("Description" = 'Carrier confirmation is expected'), 
MIN_COMP CHAR(1)  NULL  SET("Description" = 'Micro company indicator'), 
TERM_LI CHAR(1)  NULL  SET("Description" = 'Terms of Liability'), 
CRC_NUM CHAR(25)  NULL  SET("Description" = 'CRC number'), 
RG CHAR(11)  NULL  SET("Description" = 'RG Number'), 
EXP CHAR(3)  NULL  SET("Description" = 'Issued by'), 
UF CHAR(2)  NULL  SET("Description" = 'State'), 
RGDATE DATE  NULL  SET("Description" = 'RG Issue Date'), 
RIC NUMERIC(11, 0)  NULL  SET("Description" = 'RIC Number'), 
RNE CHAR(10)  NULL  SET("Description" = 'Foreign National Registration'), 
RNEDATE DATE  NULL  SET("Description" = 'RNE Issue Date'), 
CNAE CHAR(7)  NULL  SET("Description" = 'CNAE'), 
LEGALNAT NUMERIC(4, 0)  NULL  SET("Description" = 'Legal Nature'), 
CRTN CHAR(1)  NULL  SET("Description" = 'CRT Number'), 
ICMSTAXPAY CHAR(2)  NULL  SET("Description" = 'ICMS Taxpayer'), 
INDTYP CHAR(2)  NULL  SET("Description" = 'Industry Main Type'), 
TDT CHAR(2)  NULL  SET("Description" = 'Tax Declaration Type'), 
COMSIZE CHAR(2)  NULL  SET("Description" = 'Company Size'), 
DECREGPC CHAR(2)  NULL  SET("Description" = 'Declaration Regimen for PIS/COFINS'), 
J_SC_CAPITAL DECIMAL(15, 2)  NULL  SET("Description" = 'Capital Amount'), 
J_SC_CURRENCY CHAR(5)  NULL  SET("Description" = 'Currency'), 
ALC CHAR(8)  NULL  SET("Description" = 'Agency Location Code'), 
PMT_OFFICE CHAR(5)  NULL  SET("Description" = 'Payment Office'), 
PSOFG CHAR(10)  NULL  SET("Description" = 'Processor group'), 
PSOIS CHAR(20)  NULL  SET("Description" = 'Subledger acct preprocessing procedure'), 
PSON1 CHAR(35)  NULL  SET("Description" = 'Name 1'), 
PSON2 CHAR(35)  NULL  SET("Description" = 'Name 2'), 
PSON3 CHAR(35)  NULL  SET("Description" = 'Name 3'), 
PSOVN CHAR(35)  NULL  SET("Description" = 'First Name'), 
PSOTL CHAR(20)  NULL  SET("Description" = 'Title'), 
PSOHS CHAR(6)  NULL  SET("Description" = 'House number: is no longer used from Release 4.6B'), 
PSOST CHAR(28)  NULL  SET("Description" = 'Street: No longer used from Release 4.6B'), 
TRANSPORT_CHAIN CHAR(10)  NULL  SET("Description" = 'Transportation Chain'), 
STAGING_TIME DECIMAL(3, 0)  NULL  SET("Description" = 'Staging Time in Days'), 
SCHEDULING_TYPE CHAR(1)  NULL  SET("Description" = 'Scheduling Procedure'), 
SUBMI_RELEVANT CHAR(1)  NULL  SET("Description" = 'Cross Docking: Relevant for Collective Numbering')) 
PRIMARY KEY (LIFNR) 
CREATE_INDEX "001" ON (CONFS) 
CREATE_INDEX E ON (SORTL) 
CREATE_INDEX FIS ON (FISKN) 
CREATE_INDEX ILN ON (BBBNR, BBSNR, BUBKZ) 
CREATE_INDEX MC3 ON (MCOD3) 
CREATE_INDEX MCD ON (MCOD1, MCOD2, MCOD3) 
CREATE_INDEX PLZ ON (PSTLZ) 
CREATE_INDEX "PRIMARY" ON (LIFNR) PRIMARY 
CREATE_INDEX R ON (ESRNR) 
CREATE_INDEX Z ON (LAND1) 
FOREIGN KEY  (J_1KFTBUS) REFERENCES BUSTYPE (GESTYP)
FOREIGN KEY  (ALC) REFERENCES FMFGT_ALC (ALC)
FOREIGN KEY  (PMT_OFFICE) REFERENCES FMFGT_PO (PMT_OFFICE)
FOREIGN KEY  (J_1KFTIND) REFERENCES INDUSTYPE (INDTYPE)
FOREIGN KEY  (ACTSS) REFERENCES J_1AACT (J_1AACT)
FOREIGN KEY  (FITYP) REFERENCES J_1AFITP (J_1AFITP)
FOREIGN KEY  (STCDT) REFERENCES J_1ATODC (J_1ATODC)
FOREIGN KEY  (CNAE) REFERENCES J_1BTCNAE (J_1BCNAE)
FOREIGN KEY  (COMSIZE) REFERENCES J_1BTCOMSIZE (J_1BCOMSIZE)
FOREIGN KEY  (DECREGPC) REFERENCES J_1BTDECREGPC (J_1BDECREGPC)
FOREIGN KEY  (ICMSTAXPAY) REFERENCES J_1BTICMSTAXPAY (J_1BICMSTAXPAY)
FOREIGN KEY  (INDTYP) REFERENCES J_1BTINDTYP (J_1BINDTYP)
FOREIGN KEY  (LEGALNAT) REFERENCES J_1BTLEGALNAT (J_1BLEGALNAT)
FOREIGN KEY  (TDT) REFERENCES J_1BTTDT (J_1BTDT)
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (FISKN) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (FISKU) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LNRZA) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (PSOFG) REFERENCES PSO19 (PSOFG)
FOREIGN KEY  (SPRAS) REFERENCES T002 (SPRAS)
FOREIGN KEY  (LAND1) REFERENCES T005 (LAND1)
FOREIGN KEY  (LAND1, REGIO) REFERENCES T005S (LAND1, BLAND)
FOREIGN KEY  (BRSCH) REFERENCES T016 (BRSCH)
FOREIGN KEY  (KTOCK) REFERENCES T077K (KTOKK)
FOREIGN KEY  (KTOKK) REFERENCES T077K (KTOKK)
FOREIGN KEY  (VBUND) REFERENCES T880 (RCOMP)
FOREIGN KEY  (J_SC_CURRENCY) REFERENCES TCURC (WAERS)
FOREIGN KEY  (PLKAL) REFERENCES TFACD (IDENT)
FOREIGN KEY  (QSSYS) REFERENCES TQ02B (QSSYSFAM)
FOREIGN KEY  (SPERQ) REFERENCES TQ04A (SPERRFKT)
FOREIGN KEY  (SFRGR) REFERENCES TSFG (SFRGR)
FOREIGN KEY  (TXJCD) REFERENCES TTXJ (TXJCD)
FOREIGN KEY  (DLGRP) REFERENCES TVFCD (DLGRP)
FOREIGN KEY  (LAND1, LZONE) REFERENCES TZONE (LAND1, ZONE1)
FOREIGN KEY  (STGDL) REFERENCES VTSGD (STGDL)
FOREIGN KEY  (TRANSPORT_CHAIN) REFERENCES WRF_PSCD_TCHAINH (TC_ID);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '529' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '2' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Vendor Master (Company Code)' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Thu Oct 24 00:16:54 2019' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:41 2021' )
CREATE TABLE SOURCE_SAP_LI."".LFB1(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
LIFNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
BUKRS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Company Code'), 
PERNR NUMERIC(8, 0)  NULL  SET("Description" = 'Personnel Number'), 
ERDAT DATE  NULL  SET("Description" = 'Date on which the Record Was Created'), 
ERNAM CHAR(12)  NULL  SET("Description" = 'Name of Person who Created the Object'), 
SPERR CHAR(1)  NULL  SET("Description" = 'Posting block for company code'), 
LOEVM CHAR(1)  NULL  SET("Description" = 'Deletion Flag for Master Record (Company Code Level)'), 
ZUAWA CHAR(3)  NULL  SET("Description" = 'Key for sorting according to assignment numbers'), 
AKONT CHAR(10)  NULL  SET("Description" = 'Reconciliation Account in General Ledger'), 
BEGRU CHAR(4)  NULL  SET("Description" = 'Authorization Group'), 
VZSKZ CHAR(2)  NULL  SET("Description" = 'Interest calculation indicator'), 
ZWELS CHAR(10)  NULL  SET("Description" = 'List of the Payment Methods to be Considered'), 
XVERR CHAR(1)  NULL  SET("Description" = 'Indicator: Clearing between customer and vendor?'), 
ZAHLS CHAR(1)  NULL  SET("Description" = 'Block Key for Payment'), 
ZTERM CHAR(4)  NULL  SET("Description" = 'Terms of Payment Key'), 
EIKTO CHAR(12)  NULL  SET("Description" = 'Our account number with the vendor'), 
ZSABE CHAR(15)  NULL  SET("Description" = 'Clerk at vendor'), 
KVERM CHAR(30)  NULL  SET("Description" = 'Memo'), 
FDGRV CHAR(10)  NULL  SET("Description" = 'Planning group'), 
BUSAB CHAR(2)  NULL  SET("Description" = 'Accounting clerk'), 
LNRZE CHAR(10)  NULL  SET("Description" = 'Head office account number'), 
LNRZB CHAR(10)  NULL  SET("Description" = 'Account number of the alternative payee'), 
ZINDT DATE  NULL  SET("Description" = 'Key date of the last interest calculation'), 
ZINRT NUMERIC(2, 0)  NULL  SET("Description" = 'Interest calculation frequency in months'), 
DATLZ DATE  NULL  SET("Description" = 'Date of the last interest calculation run'), 
XDEZV CHAR(1)  NULL  SET("Description" = 'Indicator: Local processing?'), 
WEBTR DECIMAL(13, 2)  NULL  SET("Description" = 'Bill of exchange limit (in local currency)'), 
KULTG DECIMAL(3, 0)  NULL  SET("Description" = 'Probable time until check is paid'), 
REPRF CHAR(1)  NULL  SET("Description" = 'Check Flag for Double Invoices or Credit Memos'), 
TOGRU CHAR(4)  NULL  SET("Description" = 'Tolerance group for the business partner/G/L account'), 
HBKID CHAR(5)  NULL  SET("Description" = 'Short Key for a House Bank'), 
XPORE CHAR(1)  NULL  SET("Description" = 'Indicator: Pay all items separately ?'), 
QSZNR CHAR(10)  NULL  SET("Description" = 'Certificate Number of the Withholding Tax Exemption'), 
QSZDT DATE  NULL  SET("Description" = 'Validity Date for Withholding Tax Exemption Certificate'), 
QSSKZ CHAR(2)  NULL  SET("Description" = 'Withholding Tax Code'), 
BLNKZ CHAR(2)  NULL  SET("Description" = 'Subsidy Indicator for Determining the Reduction Rates'), 
MINDK CHAR(3)  NULL  SET("Description" = 'Minority Indicators'), 
ALTKN CHAR(10)  NULL  SET("Description" = 'Previous Master Record Number'), 
ZGRUP CHAR(2)  NULL  SET("Description" = 'Key for Payment Grouping'), 
MGRUP CHAR(2)  NULL  SET("Description" = 'Key for dunning notice grouping'), 
UZAWE CHAR(2)  NULL  SET("Description" = 'Payment Method Supplement'), 
QSREC CHAR(2)  NULL  SET("Description" = 'Vendor Recipient Type'), 
QSBGR CHAR(1)  NULL  SET("Description" = 'Authority for Exemption from Withholding Tax'), 
QLAND CHAR(3)  NULL  SET("Description" = 'Withholding Tax Country Key'), 
XEDIP CHAR(1)  NULL  SET("Description" = 'Indicator: Send Payment Advices by EDI'), 
FRGRP CHAR(4)  NULL  SET("Description" = 'Release Approval Group'), 
TOGRR CHAR(4)  NULL  SET("Description" = 'Tolerance group; Invoice Verification'), 
TLFXS CHAR(31)  NULL  SET("Description" = 'Accounting clerk\'s fax number at the customer/vendor'), 
INTAD CHAR(130)  NULL  SET("Description" = 'Internet address of partner company clerk'), 
XLFZB CHAR(1)  NULL  SET("Description" = 'Indicator: Alternative payee using account number'), 
GUZTE CHAR(4)  NULL  SET("Description" = 'Payment Terms Key for Credit Memos'), 
GRICD CHAR(2)  NULL  SET("Description" = 'Activity Code for Gross Income Tax'), 
GRIDT CHAR(2)  NULL  SET("Description" = 'Distribution Type for Employment Tax'), 
XAUSZ CHAR(1)  NULL  SET("Description" = 'Indicator for periodic account statements'), 
CERDT DATE  NULL  SET("Description" = 'Certification date'), 
CONFS CHAR(1)  NOT NULL  SET("Description" = 'Status of Change Authorization (Company Code Level)'), 
UPDAT DATE  NULL  SET("Description" = 'Date on Which the Changes Were Confirmed'), 
UPTIM TIME  NULL  SET("Description" = 'Time of Last Change Confirmation'), 
NODEL CHAR(1)  NOT NULL  SET("Description" = 'Deletion bock for master record (company code level)'), 
TLFNS CHAR(30)  NULL  SET("Description" = 'Accounting clerk\'s telephone number at business partner'), 
AVSND CHAR(1)  NULL  SET("Description" = 'Indicator: Send Payment Advice by XML'), 
AD_HASH CHAR(10)  NULL  SET("Description" = 'E-Mail Address for Avis: Hash Value'), 
J_SC_SUBCONTYPE CHAR(1)  NULL  SET("Description" = 'Subcontractor Type'), 
J_SC_COMPDATE NUMERIC(3, 0)  NULL  SET("Description" = 'Completion Date Of Inspection'), 
J_SC_OFFSM CHAR(1)  NULL  SET("Description" = 'Offset Method'), 
J_SC_OFFSR NUMERIC(3, 0)  NULL  SET("Description" = 'Offset Percentage'), 
BASIS_PNT DECIMAL(6, 3)  NULL  SET("Description" = 'Average daily basis points for purchase cards'), 
GMVKZK CHAR(1)  NULL  SET("Description" = 'Vendor is in execution'), 
PREPAY_RELEVANT CHAR(1)  NULL  SET("Description" = 'Prepayment Relevance (Vendor Master)'), 
ASSIGN_TEST CHAR(4)  NULL  SET("Description" = 'Assignment Test Group')) 
PRIMARY KEY (LIFNR, BUKRS) 
CREATE_INDEX "001" ON (CONFS, BUKRS) 
CREATE_INDEX N ON (ALTKN, BUKRS) 
CREATE_INDEX PER ON (PERNR) 
CREATE_INDEX "PRIMARY" ON (LIFNR, BUKRS) PRIMARY 
FOREIGN KEY  (BUKRS, GRIDT) REFERENCES J_1ADTYP (BUKRS, J_1ADTYP)
FOREIGN KEY  (GRICD) REFERENCES J_1AGICD (J_1AGICD)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LNRZB) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (LNRZE) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (BUKRS, AKONT) REFERENCES SKB1 (BUKRS, SAKNR)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BUKRS, BUSAB) REFERENCES T001S (BUKRS, BUSAB)
FOREIGN KEY  (QLAND) REFERENCES T005Q (QLAND)
FOREIGN KEY  (ZAHLS) REFERENCES T008 (ZAHLS)
FOREIGN KEY  (BUKRS, HBKID) REFERENCES T012 (BUKRS, HBKID)
FOREIGN KEY  (FDGRV) REFERENCES T035 (GRUPP)
FOREIGN KEY  (UZAWE) REFERENCES T042F (UZAWE)
FOREIGN KEY  (BUKRS, TOGRU) REFERENCES T043G (BUKRS, TOGRU)
FOREIGN KEY  (MGRUP) REFERENCES T047R (MGRUP)
FOREIGN KEY  (XAUSZ) REFERENCES T048K (XAUSZ)
FOREIGN KEY  (VZSKZ) REFERENCES T056 (VZSKZ)
FOREIGN KEY  (QSREC) REFERENCES T059A (QSREC)
FOREIGN KEY  (MINDK) REFERENCES T059M (MINDK)
FOREIGN KEY  (BUKRS, TOGRR) REFERENCES T169L (BUKRS, TOGRR)
FOREIGN KEY  (ZGRUP) REFERENCES TZGR (ZGRUP)
FOREIGN KEY  (ZUAWA) REFERENCES TZUN (ZUAWA)
FOREIGN KEY  (FRGRP) REFERENCES VBWF08 (FRGRP)
FOREIGN KEY  (ASSIGN_TEST) REFERENCES WRF_ASSIGN_GRP (ASSIGN_GROUP);

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_created',ActaValue_7 = 'Tue Jul 28 19:47:48 2020' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Tue Mar  9 05:24:40 2021' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '15' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '15' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '7 Minutes and 12 Seconds' , 
ActaName_15 = 'RDate_modified',ActaValue_15 = 'Thu Mar  4 02:38:44 2021' )
CREATE TABLE TARGET_ODS.DBO.LI_SAP_EXTRACT_INVOICE_TEMP(BELNR VARCHAR(10)  NULL , 
BUZEI DECIMAL(3, 0)  NULL , 
BLDAT VARCHAR(10)  NULL , 
INV_UPRICE DECIMAL(14, 4)  NULL , 
WARES VARCHAR(5)  NULL , 
INV_QTY DECIMAL(13, 3)  NULL , 
WRBTR DECIMAL(13, 2)  NULL , 
SHKZG VARCHAR(1)  NULL , 
ZTERM VARCHAR(4)  NULL , 
EBELN VARCHAR(10)  NULL , 
EBELP DECIMAL(5, 0)  NULL , 
BUKRS VARCHAR(4)  NULL , 
BLART VARCHAR(2)  NULL , 
LIFNR VARCHAR(10)  NULL , 
EMATN VARCHAR(50)  NULL , 
BUDAT VARCHAR(10)  NULL , 
KNTTP VARCHAR(1)  NULL , 
KNTTX VARCHAR(20)  NULL , 
EPSTP VARCHAR(1)  NULL , 
PTEXT VARCHAR(20)  NULL , 
NETPR DECIMAL(11, 2)  NULL , 
BEDAT VARCHAR(10)  NULL , 
CPUDT VARCHAR(10)  NULL , 
BUZID VARCHAR(1)  NULL ) 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '615' , 
ActaName_3 = 'Rsap_table_type',ActaValue_3 = 'Transparent Table' , 
ActaName_4 = 'RDescription',ActaValue_4 = 'Document Item: Incoming Invoice' , 
ActaName_5 = 'RSAP_Table_Class',ActaValue_5 = '1' , 
ActaName_6 = 'RSAP_Table_Class_Name',ActaValue_6 = 'transparent' , 
ActaName_7 = 'REstimated_Row_Count',ActaValue_7 = '50000' , 
ActaName_8 = 'RSavedAfterCheckOut',ActaValue_8 = 'YES' , 
ActaName_9 = 'RLoader_Is_Template_Table',ActaValue_9 = 'no' , 
ActaName_10 = 'RDate_modified',ActaValue_10 = 'Thu Mar  4 02:38:45 2021' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:48 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".RSEG(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
BELNR CHAR(10)  KEY  NOT NULL  SET("Description" = 'Accounting Document Number'), 
GJAHR NUMERIC(4, 0)  KEY  NOT NULL  SET("Description" = 'Fiscal Year'), 
BUZEI NUMERIC(6, 0)  KEY  NOT NULL  SET("Description" = 'Document Item in Invoice Document'), 
EBELN CHAR(10)  NOT NULL  SET("Description" = 'Purchasing Document Number'), 
EBELP NUMERIC(5, 0)  NOT NULL  SET("Description" = 'Item Number of Purchasing Document'), 
ZEKKN NUMERIC(2, 0)  NOT NULL  SET("Description" = 'Sequential Number of Account Assignment'), 
MATNR CHAR(18)  NOT NULL  SET("Description" = 'Material Number'), 
BWKEY CHAR(4)  NOT NULL  SET("Description" = 'Valuation Area'), 
BWTAR CHAR(10)  NOT NULL  SET("Description" = 'Valuation Type'), 
BUKRS CHAR(4)  NOT NULL  SET("Description" = 'Company Code'), 
WERKS CHAR(4)  NOT NULL  SET("Description" = 'Plant'), 
WRBTR DECIMAL(13, 2)  NOT NULL  SET("Description" = 'Amount in Document Currency'), 
SHKZG CHAR(1)  NOT NULL  SET("Description" = 'Debit/Credit Indicator'), 
MWSKZ CHAR(2)  NOT NULL  SET("Description" = 'Tax on sales/purchases code'), 
TXJCD CHAR(15)  NOT NULL  SET("Description" = 'Tax Jurisdiction'), 
MENGE DECIMAL(13, 3)  NOT NULL  SET("Description" = 'Quantity'), 
BSTME CHAR(3)  NOT NULL  SET("Description" = 'Purchase Order Unit of Measure'), 
BPMNG DECIMAL(13, 3)  NOT NULL  SET("Description" = 'Quantity in Purchase Order Price Unit'), 
BPRME CHAR(3)  NOT NULL  SET("Description" = 'Order Price Unit (Purchasing)'), 
LBKUM DECIMAL(13, 3)  NOT NULL  SET("Description" = 'Total Valuated Stock'), 
VRKUM DECIMAL(13, 3)  NOT NULL  SET("Description" = 'Total valuated stock in the previous posting period'), 
MEINS CHAR(3)  NOT NULL  SET("Description" = 'Base Unit of Measure'), 
PSTYP CHAR(1)  NOT NULL  SET("Description" = 'Item Category in Purchasing Document'), 
KNTTP CHAR(1)  NOT NULL  SET("Description" = 'Account Assignment Category'), 
BKLAS CHAR(4)  NOT NULL  SET("Description" = 'Valuation Class'), 
EREKZ CHAR(1)  NOT NULL  SET("Description" = 'Final Invoice Indicator'), 
EXKBE CHAR(1)  NOT NULL  SET("Description" = 'Indicator: update purchase order history'), 
XEKBZ CHAR(1)  NOT NULL  SET("Description" = 'Indicator: Update Purchase Order Delivery Costs'), 
TBTKZ CHAR(1)  NOT NULL  SET("Description" = 'Indicator: Subsequent Debit/Credit'), 
SPGRP CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Price'), 
SPGRM CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Quantity'), 
SPGRT CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Date'), 
SPGRG CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Order Price Quantity'), 
SPGRV CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Project Budget'), 
SPGRQ CHAR(1)  NOT NULL  SET("Description" = 'Manual Blocking Reason'), 
SPGRS CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Item Amount'), 
SPGRC CHAR(1)  NOT NULL  SET("Description" = 'Blocking Reason: Quality'), 
SPGREXT CHAR(1)  NULL  SET("Description" = 'Blocking Reason Enhancement Fields'), 
BUSTW CHAR(4)  NOT NULL  SET("Description" = 'Posting String for Values'), 
XBLNR CHAR(16)  NOT NULL  SET("Description" = 'Reference Document Number'), 
XRUEB CHAR(1)  NOT NULL  SET("Description" = 'Indicator: Document is posted to a previous period'), 
BNKAN DECIMAL(13, 2)  NOT NULL  SET("Description" = 'Delivery costs\' share of item value'), 
KSCHL CHAR(4)  NOT NULL  SET("Description" = 'Condition Type'), 
SALK3 DECIMAL(13, 2)  NOT NULL  SET("Description" = 'Value of Total Valuated Stock'), 
VMSAL DECIMAL(13, 2)  NOT NULL  SET("Description" = 'Value of total valuated stock in previous period'), 
XLIFO CHAR(1)  NOT NULL  SET("Description" = 'LIFO/FIFO-Relevant'), 
LFBNR CHAR(10)  NOT NULL  SET("Description" = 'Document No. of a Reference Document'), 
LFGJA NUMERIC(4, 0)  NOT NULL  SET("Description" = 'Fiscal Year of Current Period'), 
LFPOS NUMERIC(4, 0)  NOT NULL  SET("Description" = 'Item of a Reference Document'), 
MATBF CHAR(18)  NOT NULL  SET("Description" = 'Material in Respect of Which Stock is Managed'), 
RBMNG DECIMAL(13, 3)  NULL  SET("Description" = 'Qty invoiced in vendor invoice in PO order units'), 
BPRBM DECIMAL(13, 3)  NULL  SET("Description" = 'Qty invoiced in vendor invoice in PO price units'), 
RBWWR DECIMAL(13, 2)  NULL  SET("Description" = 'Invoice amount in document currency of vendor invoice'), 
LFEHL CHAR(1)  NULL  SET("Description" = 'Type of vendor error'), 
GRICD CHAR(2)  NULL  SET("Description" = 'Activity Code for Gross Income Tax'), 
GRIRG CHAR(3)  NULL  SET("Description" = 'Region (State, Province, County)'), 
GITYP CHAR(2)  NULL  SET("Description" = 'Distribution Type for Employment Tax'), 
PACKNO NUMERIC(10, 0)  NULL  SET("Description" = 'Package Number of Service'), 
INTROW NUMERIC(10, 0)  NULL  SET("Description" = 'Line Number of Service'), 
SGTXT CHAR(50)  NULL  SET("Description" = 'Item Text'), 
XSKRL CHAR(1)  NULL  SET("Description" = 'Indicator: Line Item Not Liable to Cash Discount?'), 
KZMEK CHAR(1)  NULL  SET("Description" = 'Correction indicator'), 
MRMOK CHAR(1)  NULL  SET("Description" = 'Indicator: invoice item processed'), 
STUNR NUMERIC(3, 0)  NULL  SET("Description" = 'Step number'), 
ZAEHK NUMERIC(2, 0)  NULL  SET("Description" = 'Condition counter'), 
STOCK_POSTING DECIMAL(13, 2)  NULL  SET("Description" = 'Stock Posting of Line from an Incoming Invoice'), 
STOCK_POSTING_PP DECIMAL(13, 2)  NULL  SET("Description" = 'Stock Posting of Line from an Incoming Invoice, Prev. Period'), 
STOCK_POSTING_PY DECIMAL(13, 2)  NULL  SET("Description" = 'Stock Posting of Line from an Incoming Invoice, Prev. Year'), 
WEREC CHAR(1)  NULL  SET("Description" = 'Clearing Indicator for GR/IR Posting for External Services'), 
LIFNR CHAR(10)  NULL  SET("Description" = 'Account Number of Vendor or Creditor'), 
FRBNR CHAR(16)  NULL  SET("Description" = 'Number of Bill of Lading at Time of Goods Receipt'), 
XHISTMA CHAR(1)  NULL  SET("Description" = 'Update Multiple Account Assignment EKBE_MA, EKBZ_MA'), 
COMPLAINT_REASON CHAR(2)  NULL  SET("Description" = 'Complaints Reason in an Invoice'), 
RETAMT_FC DECIMAL(13, 2)  NULL  SET("Description" = 'Retention Amount in Document Currency'), 
RETPC DECIMAL(5, 2)  NULL  SET("Description" = 'Retention in Percent'), 
RETDUEDT DATE  NULL  SET("Description" = 'Due Date for Retention'), 
XRETTAXNET CHAR(1)  NULL  SET("Description" = 'Tax Reduction for Retention'), 
RE_ACCOUNT CHAR(10)  NULL  SET("Description" = 'Cash Ledger: Expense or Revenue Account'), 
ERP_CONTRACT_ID CHAR(10)  NULL  SET("Description" = 'Number of Principal Purchase Agreement'), 
ERP_CONTRACT_ITM NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Principal Purchase Agreement'), 
SRM_CONTRACT_ID CHAR(10)  NULL  SET("Description" = 'Central Contract'), 
SRM_CONTRACT_ITM NUMERIC(10, 0)  NULL  SET("Description" = 'Central Contract Item Number'), 
CONT_PSTYP CHAR(1)  NULL  SET("Description" = 'Item Category in Purchasing Document'), 
SRVMAPKEY NUMERIC(10, 0)  NULL  SET("Description" = 'Item Key for eSOA Messages'), 
CHARG CHAR(10)  NULL  SET("Description" = 'Batch Number'), 
INV_ITM_ORIGIN CHAR(1)  NULL  SET("Description" = 'Origin of an Invoice Item'), 
INVREL NUMERIC(6, 0)  NULL  SET("Description" = 'Grouping Characteristic for Invoice Verification'), 
XDINV CHAR(1)  NULL  SET("Description" = 'Indicator for Differential Invoicing'), 
DIFF_AMOUNT DECIMAL(13, 2)  NULL  SET("Description" = 'Difference Amount (in Document Currency)'), 
XCPRF CHAR(1)  NULL  SET("Description" = 'Checkbox for Commodity Repricing in Invoice Verification'), 
LICNO NUMERIC(10, 0)  NULL  SET("Description" = 'Internal License Number'), 
ZEILE NUMERIC(4, 0)  NULL  SET("Description" = 'Item Number')) 
PRIMARY KEY (BELNR, GJAHR, BUZEI) 
CREATE_INDEX "PRIMARY" ON (BELNR, GJAHR, BUZEI) PRIMARY 
CREATE_INDEX ZEK ON (EBELN, EBELP) 
FOREIGN KEY  (EBELN) REFERENCES EKKO (EBELN)
FOREIGN KEY  (EBELN, EBELP) REFERENCES EKPO (EBELN, EBELP)
FOREIGN KEY  (BUKRS, GITYP) REFERENCES J_1ADTYP (BUKRS, J_1ADTYP)
FOREIGN KEY  (GRICD) REFERENCES J_1AGICD (J_1AGICD)
FOREIGN KEY  (MATNR) REFERENCES MARA (MATNR)
FOREIGN KEY  (BUKRS) REFERENCES T001 (BUKRS)
FOREIGN KEY  (BWKEY) REFERENCES T001K (BWKEY)
FOREIGN KEY  (WERKS) REFERENCES T001W (WERKS)
FOREIGN KEY  (GRIRG) REFERENCES T005S (BLAND)
FOREIGN KEY  (BSTME) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MEINS) REFERENCES T006 (MSEHI)
FOREIGN KEY  (BPRME) REFERENCES T006 (MSEHI)
FOREIGN KEY  (MWSKZ) REFERENCES T007A (MWSKZ)
FOREIGN KEY  (BKLAS) REFERENCES T025 (BKLAS)
FOREIGN KEY  (BWTAR) REFERENCES T149D (BWTAR)
FOREIGN KEY  (PSTYP) REFERENCES T163 (PSTYP)
FOREIGN KEY  (KNTTP) REFERENCES T163K (KNTTP)
FOREIGN KEY  (TXJCD) REFERENCES TTXJ (TXJCD);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '147' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '0' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Storage Locations' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Mar  9 04:28:32 2021' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".T001L(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
WERKS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Plant'), 
LGORT CHAR(4)  KEY  NOT NULL  SET("Description" = 'Storage Location'), 
LGOBE CHAR(16)  NOT NULL  SET("Description" = 'Description of Storage Location'), 
SPART CHAR(2)  NOT NULL  SET("Description" = 'Division'), 
XLONG CHAR(1)  NOT NULL  SET("Description" = 'Negative stocks allowed in storage location'), 
XBUFX CHAR(1)  NOT NULL  SET("Description" = 'Freezing book inventory bal. allowed in stor. loc.'), 
DISKZ CHAR(1)  NOT NULL  SET("Description" = 'Storage location MRP indicator'), 
XBLGO CHAR(1)  NULL  SET("Description" = 'Storage location authorization for goods movements active'), 
XRESS CHAR(1)  NULL  SET("Description" = 'Storage location is allocated to resource (storage resource)'), 
XHUPF CHAR(1)  NULL  SET("Description" = 'Handling unit requirement'), 
PARLG CHAR(4)  NULL  SET("Description" = 'Partner storage location of the handling unit'), 
VKORG CHAR(4)  NULL  SET("Description" = 'Sales Organization'), 
VTWEG CHAR(2)  NULL  SET("Description" = 'Distribution Channel'), 
VSTEL CHAR(4)  NULL  SET("Description" = 'Shipping Point/Receiving Point'), 
LIFNR CHAR(10)  NULL  SET("Description" = 'Vendor\'s account number'), 
KUNNR CHAR(10)  NULL  SET("Description" = 'Account number of customer'), 
MESBS CHAR(60)  NULL  SET("Description" = 'Business System of MES'), 
MESST CHAR(1)  NULL  SET("Description" = 'Type of inventory management for production storage location'), 
OIH_LICNO CHAR(15)  NULL  SET("Description" = 'License number for untaxed stock'), 
OIG_ITRFL CHAR(1)  NULL  SET("Description" = 'TD in-transit flag'), 
OIB_TNKASSIGN CHAR(1)  NULL  SET("Description" = 'Silo Managament: Tank assignment indicator')) 
PRIMARY KEY (WERKS, LGORT) 
CREATE_INDEX "PRIMARY" ON (WERKS, LGORT) PRIMARY 
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (MESBS) REFERENCES MDG_BUS_SYS_TECH (BUSINESS_SYSTEM)
FOREIGN KEY  (WERKS) REFERENCES T001W (WERKS)
FOREIGN KEY  (SPART) REFERENCES TSPA (SPART)
FOREIGN KEY  (VKORG) REFERENCES TVKO (VKORG)
FOREIGN KEY  (VSTEL) REFERENCES TVST (VSTEL)
FOREIGN KEY  (VTWEG) REFERENCES TVTW (VTWEG);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '354' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '0' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Plants/Branches' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Mar  9 04:29:06 2021' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' )
CREATE TABLE SOURCE_SAP_LI."".T001W(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
WERKS CHAR(4)  KEY  NOT NULL  SET("Description" = 'Plant'), 
NAME1 CHAR(30)  NOT NULL  SET("Description" = 'Name'), 
BWKEY CHAR(4)  NOT NULL  SET("Description" = 'Valuation Area'), 
KUNNR CHAR(10)  NOT NULL  SET("Description" = 'Customer number of plant'), 
LIFNR CHAR(10)  NOT NULL  SET("Description" = 'Vendor number of plant'), 
FABKL CHAR(2)  NULL  SET("Description" = 'Factory calendar key'), 
NAME2 CHAR(30)  NULL  SET("Description" = 'Name 2'), 
STRAS CHAR(30)  NULL  SET("Description" = 'Street and House Number'), 
PFACH CHAR(10)  NULL  SET("Description" = 'PO Box'), 
PSTLZ CHAR(10)  NULL  SET("Description" = 'Postal Code'), 
ORT01 CHAR(25)  NULL  SET("Description" = 'City'), 
EKORG CHAR(4)  NULL  SET("Description" = 'Purchasing Organization'), 
VKORG CHAR(4)  NULL  SET("Description" = 'Sales organization for intercompany billing'), 
CHAZV CHAR(1)  NULL  SET("Description" = 'Indicator: batch status management active'), 
KKOWK CHAR(1)  NULL  SET("Description" = 'Indicator: Conditions at plant level'), 
KORDB CHAR(1)  NULL  SET("Description" = 'Indicator: Source list requirement'), 
BEDPL CHAR(1)  NULL  SET("Description" = 'Activating requirements planning'), 
LAND1 CHAR(3)  NULL  SET("Description" = 'Country Key'), 
REGIO CHAR(3)  NULL  SET("Description" = 'Region (State, Province, County)'), 
COUNC CHAR(3)  NULL  SET("Description" = 'County Code'), 
CITYC CHAR(4)  NULL  SET("Description" = 'City Code'), 
ADRNR CHAR(10)  NULL  SET("Description" = 'Address'), 
IWERK CHAR(4)  NULL  SET("Description" = 'Maintenance Planning Plant'), 
TXJCD CHAR(15)  NULL  SET("Description" = 'Tax Jurisdiction'), 
VTWEG CHAR(2)  NULL  SET("Description" = 'Distribution channel for intercompany billing'), 
SPART CHAR(2)  NULL  SET("Description" = 'Division for intercompany billing'), 
SPRAS CHAR(1)  NULL  SET("Description" = 'Language Key'), 
WKSOP CHAR(1)  NULL  SET("Description" = 'SOP plant'), 
AWSLS CHAR(6)  NULL  SET("Description" = 'Variance Key'), 
CHAZV_OLD CHAR(1)  NULL  SET("Description" = 'Indicator: batch status management active'), 
VLFKZ CHAR(1)  NULL  SET("Description" = 'Plant category'), 
BZIRK CHAR(6)  NULL  SET("Description" = 'Sales district'), 
ZONE1 CHAR(10)  NULL  SET("Description" = 'Supply region (region supplied)'), 
TAXIW CHAR(1)  NULL  SET("Description" = 'Tax Indicator: Plant (Purchasing)'), 
BZQHL CHAR(1)  NULL  SET("Description" = 'Take regular vendor into account'), 
LET01 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for First Reminder/Expediter'), 
LET02 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for Second Reminder/Expediter'), 
LET03 DECIMAL(3, 0)  NULL  SET("Description" = 'Number of Days for Third Reminder/Expediter'), 
TXNAM_MA1 CHAR(16)  NULL  SET("Description" = 'Text name of 1st dunning of vendor declarations'), 
TXNAM_MA2 CHAR(16)  NULL  SET("Description" = 'Text name of the 2nd dunning of vendor declarations'), 
TXNAM_MA3 CHAR(16)  NULL  SET("Description" = 'Text name of 3rd dunning of vendor declarations'), 
BETOL NUMERIC(3, 0)  NULL  SET("Description" = 'Number of days for PO tolerance - Compress info records - SU'), 
J_1BBRANCH CHAR(4)  NULL  SET("Description" = 'Business Place'), 
VTBFI CHAR(2)  NULL  SET("Description" = 'Rule for determining the sales area for stock transfers'), 
FPRFW CHAR(3)  NULL  SET("Description" = 'Distribution profile at plant level'), 
ACHVM CHAR(1)  NULL  SET("Description" = 'Central archiving marker for master record'), 
DVSART CHAR(1)  NULL  SET("Description" = 'Batch Record: Type of DMS Used'), 
NODETYPE CHAR(3)  NULL  SET("Description" = 'Node type: supply chain network'), 
NSCHEMA CHAR(4)  NULL  SET("Description" = 'Structure for name formation'), 
PKOSA CHAR(1)  NULL  SET("Description" = 'Cost Object Controlling linking active'), 
MISCH CHAR(1)  NULL  SET("Description" = 'Updating is active for mixed costing'), 
MGVUPD CHAR(1)  NULL  SET("Description" = 'Updating is active in actual costing'), 
VSTEL CHAR(4)  NULL  SET("Description" = 'Shipping Point/Receiving Point'), 
MGVLAUPD CHAR(1)  NULL  SET("Description" = 'Update of Activity Consumption in the Quantity Structure'), 
MGVLAREVAL CHAR(1)  NULL  SET("Description" = 'Control of Credit of Cost Centers'), 
SOURCING CHAR(1)  NULL  SET("Description" = 'Invoke Added-Function Source Determination via ATP'), 
SGT_STAT CHAR(1)  NULL  SET("Description" = 'Segmentation Status-Material Master'), 
FSH_MG_ARUN_REQ CHAR(1)  NULL  SET("Description" = 'Order Allocation Run'), 
FSH_SEAIM CHAR(1)  NULL  SET("Description" = 'Indicator: Season Active in Inventory Management'), 
FSH_BOM_MAINTENANCE CHAR(1)  NULL  SET("Description" = 'Control data for fashion BOM maintenance'), 
OILIVAL CHAR(1)  NULL  SET("Description" = 'Exchange valuation indicator'), 
OIHVTYPE CHAR(1)  NULL  SET("Description" = 'Vendor type (refinery/mill/other) (Brazil)'), 
OIHCREDIPI CHAR(1)  NULL  SET("Description" = 'IPI credit allowed'), 
STORETYPE CHAR(1)  NULL  SET("Description" = 'Store Category to Differentiate Store, Dep. Store, Shop'), 
DEP_STORE CHAR(4)  NULL  SET("Description" = 'Superior Department Store')) 
PRIMARY KEY (WERKS) 
CREATE_INDEX "PRIMARY" ON (WERKS) PRIMARY 
FOREIGN KEY  (NSCHEMA) REFERENCES CKMLMV007 (NSCHEMA)
FOREIGN KEY  (J_1BBRANCH) REFERENCES J_1BBRANCH (BRANCH)
FOREIGN KEY  (KUNNR) REFERENCES KNA1 (KUNNR)
FOREIGN KEY  (LIFNR) REFERENCES LFA1 (LIFNR)
FOREIGN KEY  (NODETYPE) REFERENCES MDRP_NODT (NODETYPE)
FOREIGN KEY  (BWKEY) REFERENCES T001K (BWKEY)
FOREIGN KEY  (IWERK) REFERENCES T001W (WERKS)
FOREIGN KEY  (SPRAS) REFERENCES T002 (SPRAS)
FOREIGN KEY  (LAND1) REFERENCES T005 (LAND1)
FOREIGN KEY  (LAND1, REGIO, COUNC) REFERENCES T005E (LAND1, REGIO, COUNC)
FOREIGN KEY  (LAND1, REGIO, CITYC) REFERENCES T005G (LAND1, REGIO, CITYC)
FOREIGN KEY  (LAND1, REGIO) REFERENCES T005S (LAND1, BLAND)
FOREIGN KEY  (EKORG) REFERENCES T024E (EKORG)
FOREIGN KEY  (BZIRK) REFERENCES T171 (BZIRK)
FOREIGN KEY  (FABKL) REFERENCES TFACD (IDENT)
FOREIGN KEY  (AWSLS) REFERENCES TKV01 (AWSLS)
FOREIGN KEY  (LAND1, TAXIW) REFERENCES TMKW1 (LAND1, TAXIW)
FOREIGN KEY  (SPART) REFERENCES TSPA (SPART)
FOREIGN KEY  (TXJCD) REFERENCES TTXJ (TXJCD)
FOREIGN KEY  (VKORG) REFERENCES TVKO (VKORG)
FOREIGN KEY  (VSTEL) REFERENCES TVST (VSTEL)
FOREIGN KEY  (VTWEG) REFERENCES TVTW (VTWEG)
FOREIGN KEY  (FPRFW) REFERENCES TWFPF (FPRFW)
FOREIGN KEY  (LAND1, ZONE1) REFERENCES TZONE (LAND1, ZONE1);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '25' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '0' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Texts for Account Assignment Categories' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:49 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:45 2021' )
CREATE TABLE SOURCE_SAP_LI."".T163I(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
SPRAS CHAR(1)  KEY  NOT NULL  SET("Description" = 'Language Key'), 
KNTTP CHAR(1)  KEY  NOT NULL  SET("Description" = 'Account Assignment Category'), 
KNTTX CHAR(20)  NOT NULL  SET("Description" = 'Account Assignment Category Description')) 
PRIMARY KEY (SPRAS, KNTTP) 
CREATE_INDEX "PRIMARY" ON (SPRAS, KNTTP) PRIMARY 
FOREIGN KEY  (SPRAS) REFERENCES T002 (SPRAS)
FOREIGN KEY  (KNTTP) REFERENCES T163K (KNTTP);

 AlGUIComment (ActaName_1 = 'RTable_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'Rsap_row_size',ActaValue_2 = '26' , 
ActaName_3 = 'Rsap_table_size_category',ActaValue_3 = '0' , 
ActaName_4 = 'Rsap_table_type',ActaValue_4 = 'Transparent Table' , 
ActaName_5 = 'RDescription',ActaValue_5 = 'Texts for Item Categories' , 
ActaName_6 = 'RSAP_Table_Class',ActaValue_6 = '1' , 
ActaName_7 = 'RSAP_Table_Class_Name',ActaValue_7 = 'transparent' , 
ActaName_8 = 'REstimated_Row_Count',ActaValue_8 = '50000' , 
ActaName_9 = 'RSavedAfterCheckOut',ActaValue_9 = 'YES' , 
ActaName_10 = 'RLoader_Is_Template_Table',ActaValue_10 = 'no' , 
ActaName_11 = 'RDate_created',ActaValue_11 = 'Tue Jul 28 19:47:49 2020' , 
ActaName_12 = 'RDate_last_loaded',ActaValue_12 = 'NotSupported' , 
ActaName_13 = 'RDate_modified',ActaValue_13 = 'Thu Mar  4 02:38:45 2021' )
CREATE TABLE SOURCE_SAP_LI."".T163Y(MANDT CHAR(3)  NOT NULL  SET("Description" = 'Client'), 
SPRAS CHAR(1)  KEY  NOT NULL  SET("Description" = 'Language Key'), 
PSTYP CHAR(1)  KEY  NOT NULL  SET("Description" = 'Item Category in Purchasing Document'), 
PTEXT CHAR(20)  NOT NULL  SET("Description" = 'Text for Item Category'), 
EPSTP CHAR(1)  NULL  SET("Description" = 'Item Category in Purchasing Document')) 
PRIMARY KEY (SPRAS, PSTYP) 
CREATE_INDEX "PRIMARY" ON (SPRAS, PSTYP) PRIMARY 
FOREIGN KEY  (SPRAS) REFERENCES T002 (SPRAS)
FOREIGN KEY  (PSTYP) REFERENCES T163 (PSTYP);

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RLoader_Is_Template_Table',ActaValue_5 = 'yes' , 
ActaName_6 = 'RSavedAfterCheckOut',ActaValue_6 = 'YES' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Tue Mar  9 05:16:22 2021' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Tue Mar  9 05:25:03 2021' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '19' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '19' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '2 Seconds' )
CREATE TABLE TARGET_ODS.DBO.TEMP_RIZ_INV_PLANT(INVOICE_NUM VARCHAR(10)  NULL  SET("Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001L.BSAK_BELNR'), 
INVOICE_LINE_NUM NUMERIC(3, 0)  NULL  SET("Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_T001L.BSAK_BUZEI'), 
PO_NUM VARCHAR(10)  NULL  SET("Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_T001L.BSEG_EBELN'), 
PO_LINE_NUM NUMERIC(5, 0)  NULL  SET("Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_T001L.BSEG_EBELP'), 
PURCHASING_ORG VARCHAR(4)  NULL  SET("Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_T001L.EKKO_EKORG'), 
PLANT_CODE VARCHAR(4)  NULL  SET("Description" = 'Plant', "ui_mapping_text" = 'Query_T001L.EKPO_WERKS'), 
PLANT_NAME VARCHAR(30)  NULL  SET("Description" = 'Name', "ui_mapping_text" = 'Query_T001L.T001W_NAME1'), 
STORAGE_LOC VARCHAR(4)  NULL  SET("Description" = 'Storage Location', "ui_mapping_text" = 'Query_T001L.EKPO_LGORT'), 
STORAGE_LOC_DESC VARCHAR(16)  NULL  SET("Description" = 'Description of Storage Location', "ui_mapping_text" = 'Query_T001L.T001L_LGOBE'), 
VENDOR_REF VARCHAR(16)  NULL  SET("Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_T001L.BKPF_XBLNR'), 
REFERENCE_DOC VARCHAR(20)  NULL  SET("Description" = 'Assignment Number', "ui_mapping_text" = 'ifthenelse(Query_T001L.EKKO_BSART = \'K\', Query_T001L.BSEG_ZUONR, Query_T001L.BKPF_AWKEY)'), 
BSEG_BUZID VARCHAR(1)  NULL  SET("Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_T001L.BSEG_BUZID'), 
BSEG_KOART VARCHAR(1)  NULL  SET("Description" = 'Account Type', "ui_mapping_text" = 'Query_T001L.BSEG_KOART')) 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Mon Mar  8 02:11:12 2021' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Mon Mar 15 02:56:33 2021' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '3718' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '3718' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '25 Seconds' )
CREATE TABLE TARGET_ODS.dbo.tInvoice(invcObjID VARCHAR(50)  KEY  NOT NULL , 
siteID VARCHAR(5)  NOT NULL , 
runID VARCHAR(50)  NOT NULL , 
runLineNum INT  NOT NULL , 
eaiStatus VARCHAR(50)  NOT NULL , 
dwStatus VARCHAR(50)  NULL , 
InvoiceNum VARCHAR(50)  NOT NULL , 
InvoiceLineItem VARCHAR(50)  NULL , 
InvcDate DATETIME(3)  NOT NULL , 
UnitPrice DECIMAL(14, 6)  NOT NULL , 
curCode VARCHAR(5)  NOT NULL , 
Qty DECIMAL(14, 4)  NOT NULL , 
AmtDocCur DECIMAL(21, 6)  NOT NULL , 
InvcDebitCredit VARCHAR(25)  NULL , 
PaymentTerm VARCHAR(50)  NULL , 
poNum VARCHAR(50)  NULL , 
poLineItem VARCHAR(50)  NULL , 
CompanyCode VARCHAR(50)  NULL , 
InvcDocType VARCHAR(50)  NULL , 
vendorOriginalID VARCHAR(50)  NOT NULL , 
loadID INT  NULL , 
PartNumber VARCHAR(50)  NULL , 
PurchaseInvoicePostingDate DATETIME(3)  NULL , 
POLineTypeAccountAssignment VARCHAR(80)  NULL , 
POLineTypeAccountAssignmentDesc VARCHAR(250)  NULL , 
POLineItemcategorycode VARCHAR(50)  NULL , 
POLineItemcategorycodeDesc VARCHAR(250)  NULL , 
POLinePrice DECIMAL(21, 6)  NULL , 
PODocumentDate DATETIME(3)  NULL , 
PurchaseInvoiceCreateDate DATETIME(3)  NULL , 
PurchasingOrg VARCHAR(50)  NULL , 
PlantCode VARCHAR(255)  NULL , 
StorageLocation VARCHAR(50)  NULL , 
StorageLocationDesc VARCHAR(255)  NULL , 
VendorReferenceNo VARCHAR(50)  NULL , 
ReferenceDocumentNo VARCHAR(50)  NULL ) 
PRIMARY KEY (invcObjID) 
CREATE_INDEX PK_TINVOICE ON (invcObjID) PRIMARY 
SET("db_alias_name" = 'DBO')
;
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:47 2020', "ActaValue_3" = 'Sun Aug  2 19:07:19 2020', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_BSAK::'92db3880-33c2-4a33-9ec2-d7a87ac52556'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '259', "Input_Width_Name" = '189', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '286', "Output_Width_Mapping" = '85', "Output_Width_Name" = '141', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>257</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSAK', "ui_display_name" = 'Query_BSAK', "ui_where_text" = 'BSAK.BLART IN (\'KR\', \'KG\', \'RE\', \'ZC\', \'RN\', \'RG\') 
AND BSAK.WRBTR > 0
AND BSAK.BUKRS = $G_CompanyCode 
AND (BSAK.CPUDT >= $G_ExtractBeginDate  AND BSAK.CPUDT <= $G_ExtractEndDate )
#AND (BSAK.BUDAT >= $G_ExtractBeginDate  AND BSAK.BUDAT <= $G_ExtractEndDate )', "x" = '1022', "y" = '-694')
GUID::'208ef841-3578-448d-a891-9c929076e712' CREATE VIEW Query_BSAK( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'BSAK.MANDT') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSAK.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSAK.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'BSAK.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'BSAK.WAERS') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'BSAK.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'BSAK.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'BSAK.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSAK.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSAK.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSAK.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'BSAK.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'BSAK.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSAK.GJAHR') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'BSAK.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'BSAK.CPUDT')  )
 AS
SELECT BSAK.MANDT, BSAK.BELNR, BSAK.BUZEI, BSAK.BLDAT, BSAK.WAERS, BSAK.WRBTR, BSAK.SHKZG, BSAK.ZTERM, BSAK.EBELN, BSAK.EBELP, BSAK.BUKRS, BSAK.BLART, BSAK.LIFNR, BSAK.GJAHR, BSAK.BUDAT, BSAK.CPUDT FROM BSAK  WHERE (((BSAK.BLART IN ('KR','KG','RE','ZC','RN','RG') AND
   (BSAK.WRBTR > 0)) AND
   (BSAK.BUKRS = $G_CompanyCode)) AND
   ((BSAK.CPUDT >= $G_ExtractBeginDate) AND
   (BSAK.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '37', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '50', "ui_display_name" = 'DataTransport40151', "x" = '1656', "y" = '-756')
GUID::'5b704fcc-2a42-4828-aaef-8158bab9bf72' FLOWOUTPUT FILE "LI_BSAK.DAT" INPUT(Query_BSAK)
SET("abap_remote_data_file" = 'LI_BSAK.DAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '441', "y" = '-625')
GUID::'f189b9fb-b883-4c7f-830c-a553877b9315' READ TABLE SOURCE_SAP_LI."".BSAK OUTPUT(BSAK)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_BSAK', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_BSAK', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_BSAK', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:47 2020', "ActaValue_3" = 'Thu Aug 20 21:58:03 2020', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_BSEG_BKPF::'46b088d5-9b92-45a2-a778-ef4b69c40256'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '46', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '185', "Input_Width_Name" = '211', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '150', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '60', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSEG', "ui_display_name" = 'Query_BSEG', "ui_where_text" = 'BSEG.KOART = \'S\' and  BSEG.BUKRS = $G_CompanyCode and 
(BSEG.BUZID = \'W\' and BSEG.WRBTR <> 0)



', "x" = '974', "y" = '-904')
GUID::'5a06d31d-db3d-4130-badb-d8795e6bcf0c' CREATE VIEW Query_BSEG( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'BSEG.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSEG.BUKRS') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSEG.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSEG.GJAHR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSEG.BUZEI') ,
 KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'BSEG.KOART') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'BSEG.MENGE
#BSEG.ERFMG') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSEG.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSEG.EBELP') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'BSEG.WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'BSEG.BUZID
#ifthenelse(BSEG.KOART = \'S\' and BSEG.BUZEI = \'2\' and (BSEG.BUZID = \'\' or BSEG.BUZID = \'S\'), \'W\', BSEG.BUZID)') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'nvl(BSEG.MATNR , BSEG.SGTXT)')  )
 AS
SELECT BSEG.MANDT, BSEG.BUKRS, BSEG.BELNR, BSEG.GJAHR, BSEG.BUZEI, BSEG.KOART, BSEG.MENGE, BSEG.EBELN, BSEG.EBELP, BSEG.WRBTR, BSEG.BUZID, nvl(BSEG.MATNR, BSEG.SGTXT) FROM BSEG  WHERE (((BSEG.KOART = 'S') AND
   (BSEG.BUKRS = $G_CompanyCode)) AND
   ((BSEG.BUZID = 'W') AND
   (BSEG.WRBTR != 0)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '33', "ui_display_name" = 'DataTransport101374', "x" = '2088', "y" = '-784')
GUID::'126394cb-66ce-4a25-a819-fbd3275a6189' FLOWOUTPUT FILE "LI_BSEG.DAT" INPUT(Query_JOIN)
SET("abap_remote_data_file" = 'LI_BSEG.DAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '46', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '193', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '147', "Output_Width_Mapping" = '184', "Output_Width_Name" = '132', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '50', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BKPF', "ui_display_name" = 'Query_BKPF', "ui_where_text" = 'BKPF.BUKRS = $G_CompanyCode and 
(BKPF.CPUDT >= $G_ExtractBeginDate  AND BKPF.CPUDT <= $G_ExtractEndDate )
#(BKPF.BUDAT >= $G_ExtractBeginDate  AND BKPF.BUDAT <= $G_ExtractEndDate )', "x" = '975', "y" = '-622')
GUID::'12fa9539-cfc7-4371-aead-ea201491dbd6' CREATE VIEW Query_BKPF( BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BKPF.BUKRS') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BKPF.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BKPF.GJAHR') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'substr( BKPF.AWKEY, 1, 10)') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'ifthenelse(length(BKPF.AWKEY) > 14, substr(BKPF.AWKEY, 15, 4), substr(BKPF.AWKEY, 11, 4))
#substr(BKPF.AWKEY, 11, 4)')  )
 AS
SELECT BKPF.BUKRS, BKPF.BELNR, BKPF.GJAHR, substr(BKPF.AWKEY, 1, 10), ifthenelse((length(BKPF.AWKEY) > 14), substr(BKPF.AWKEY, 15, 4), substr(BKPF.AWKEY, 11, 4)) FROM BKPF  WHERE ((BKPF.BUKRS = $G_CompanyCode) AND
   ((BKPF.CPUDT >= $G_ExtractBeginDate) AND
   (BKPF.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '201', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '165', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '47', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_BSEG', "ui_acta_from_schema_1" = 'Query_BKPF', "ui_display_name" = 'Query_JOIN', "x" = '1582', "y" = '-785')
GUID::'f5338d5c-65a8-4e13-839f-923cd3423255' CREATE VIEW Query_JOIN( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_BSEG.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BUKRS') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.GJAHR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSEG.BUZEI') ,
 KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BSEG.KOART') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_BSEG.MENGE') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BSEG.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BSEG.EBELP') ,
 BSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_BSEG.WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG.BUZID') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_BSEG.MATNR_SGTXT') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.AW_BELNR') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.AW_GJAHR')  )
 AS
SELECT Query_BSEG.MANDT, Query_BSEG.BUKRS, Query_BSEG.BELNR, Query_BSEG.GJAHR, Query_BSEG.BUZEI, Query_BSEG.KOART, Query_BSEG.MENGE, Query_BSEG.EBELN, Query_BSEG.EBELP, Query_BSEG.WRBTR, Query_BSEG.BUZID, Query_BSEG.MATNR_SGTXT, Query_BKPF.AW_BELNR, Query_BKPF.AW_GJAHR FROM Query_BKPF  __SAP_LEFT_OUTER_JOIN Query_BSEG  ON (((Query_BSEG.BELNR = Query_BKPF.BELNR) AND
   (Query_BSEG.GJAHR = Query_BKPF.GJAHR)) AND
   (Query_BSEG.BUKRS = Query_BKPF.BUKRS))SET("ui_on_text" = 'Query_BSEG.BELNR = Query_BKPF.BELNR and 
Query_BSEG.GJAHR  = Query_BKPF.GJAHR and 
Query_BSEG.BUKRS = Query_BKPF.BUKRS')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '47', "x" = '540', "y" = '-622')
GUID::'e2773435-86c3-4af4-880c-199213adeabc' READ TABLE SOURCE_SAP_LI."".BKPF OUTPUT(BKPF)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '47', "x" = '533', "y" = '-903')
GUID::'5d8718c0-7fb0-46ff-806d-872f3f91afbe' READ TABLE SOURCE_SAP_LI."".BSEG OUTPUT(BSEG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_BSEG_BKPF', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_BSEG_BKPF', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_BSEG_BKPF', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:47 2020', "ActaValue_3" = 'Mon Sep 16 20:36:05 2019', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_BSIK::'4f5402b1-dfdd-4d5f-a80a-31eac6e9e03c'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '207', "Input_Width_Name" = '246', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '194', "Output_Width_Mapping" = '85', "Output_Width_Name" = '166', "Output_Width_Type" = '117', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '56', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSIK', "ui_display_name" = 'Query_BSIK', "ui_where_text" = 'BSIK.BLART IN (\'KR\', \'KG\', \'RE\', \'ZC\', \'RN\', \'RG\') 
AND BSIK.WRBTR > 0 
AND BSIK.BUKRS = $G_CompanyCode 
AND (BSIK.CPUDT >= $G_ExtractBeginDate  AND BSIK.CPUDT <= $G_ExtractEndDate)
#AND (BSIK.BUDAT >= $G_ExtractBeginDate  AND BSIK.BUDAT <= $G_ExtractEndDate)', "x" = '1203', "y" = '-681')
GUID::'3df135bd-9af6-458a-9fed-840db1bcc507' CREATE VIEW Query_BSIK( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'BSIK.MANDT') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSIK.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSIK.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'BSIK.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'BSIK.WAERS') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'BSIK.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'BSIK.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'BSIK.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSIK.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSIK.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSIK.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'BSIK.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'BSIK.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSIK.GJAHR') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'BSIK.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'BSIK.CPUDT')  )
 AS
SELECT BSIK.MANDT, BSIK.BELNR, BSIK.BUZEI, BSIK.BLDAT, BSIK.WAERS, BSIK.WRBTR, BSIK.SHKZG, BSIK.ZTERM, BSIK.EBELN, BSIK.EBELP, BSIK.BUKRS, BSIK.BLART, BSIK.LIFNR, BSIK.GJAHR, BSIK.BUDAT, BSIK.CPUDT FROM BSIK  WHERE (((BSIK.BLART IN ('KR','KG','RE','ZC','RN','RG') AND
   (BSIK.WRBTR > 0)) AND
   (BSIK.BUKRS = $G_CompanyCode)) AND
   ((BSIK.CPUDT >= $G_ExtractBeginDate) AND
   (BSIK.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "ui_display_name" = 'DataTransport25248', "x" = '1960', "y" = '-741')
GUID::'34628c8c-27fa-4cf1-b249-2466bdd384f3' FLOWOUTPUT FILE "LI_BSIK.DAT" INPUT(Query_BSIK)
SET("abap_remote_data_file" = 'LI_BSIK.DAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '509', "y" = '-603')
GUID::'bee58417-712f-45d6-adba-21057d19e54b' READ TABLE SOURCE_SAP_LI."".BSIK OUTPUT(BSIK)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_BSIK', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_BSIK', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_BSIK', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Mar  9 04:23:09 2021', "ActaValue_3" = 'Tue Mar  9 04:24:06 2021', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_DELTA_BSAK_PLANT::'09cdcac6-25f7-48e3-a22d-682c17095449'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "ui_display_name" = 'BSAK_PLANT', "x" = '1652', "y" = '-1901')
GUID::'da2e6181-ecec-4369-955e-7ddbb06e6879' FLOWOUTPUT FILE "SG_BSAK_PLANT.dat" INPUT(Query_FINAL)
SET("abap_remote_data_file" = 'SG_BSAK_PLANT.dat', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '208', "Input_Width_Type" = '91', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '213', "Output_Width_Type" = '118', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>257</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '54', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_T001L', "ui_display_name" = 'Query_FINAL', "x" = '1252', "y" = '-1899')
GUID::'254d7438-57f5-473c-9bf8-50bfb370d3f1' CREATE VIEW Query_FINAL( INVOICE_NUM VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001L.BSAK_BELNR') ,
 INVOICE_LINE_NUM NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_T001L.BSAK_BUZEI') ,
 PO_NUM VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_T001L.BSEG_EBELN') ,
 PO_LINE_NUM NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_T001L.BSEG_EBELP') ,
 PURCHASING_ORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_T001L.EKKO_EKORG') ,
 PLANT_CODE VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_T001L.EKPO_WERKS') ,
 PLANT_NAME VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_T001L.T001W_NAME1') ,
 STORAGE_LOC VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_T001L.EKPO_LGORT') ,
 STORAGE_LOC_DESC VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'Query_T001L.T001L_LGOBE') ,
 VENDOR_REF VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_T001L.BKPF_XBLNR') ,
 REFERENCE_DOC VARCHAR(20)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'ifthenelse(Query_T001L.EKKO_BSART = \'K\', Query_T001L.BSEG_ZUONR, Query_T001L.BKPF_AWKEY)') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_T001L.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_T001L.BSEG_KOART')  )
 AS
SELECT Query_T001L.BSAK_BELNR, Query_T001L.BSAK_BUZEI, Query_T001L.BSEG_EBELN, Query_T001L.BSEG_EBELP, Query_T001L.EKKO_EKORG, Query_T001L.EKPO_WERKS, Query_T001L.T001W_NAME1, Query_T001L.EKPO_LGORT, Query_T001L.T001L_LGOBE, Query_T001L.BKPF_XBLNR, ifthenelse((Query_T001L.EKKO_BSART = 'K'), Query_T001L.BSEG_ZUONR, Query_T001L.BKPF_AWKEY), Query_T001L.BSEG_BUZID, Query_T001L.BSEG_KOART FROM Query_T001L 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '135', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '200', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>257</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSAK', "ui_display_name" = 'Query_BSAK', "ui_where_text" = 'BSAK.BLART IN (\'RE\',\'ZC\',\'KR\',\'KG\',\'KA\')
AND BSAK.WRBTR > 0
AND BSAK.BUKRS = $G_CompanyCode 
AND (BSAK.CPUDT >= $G_ExtractBeginDate  AND BSAK.CPUDT <= $G_ExtractEndDate )
', "x" = '763', "y" = '-240')
GUID::'623f7fe2-2840-4c10-93ce-219fc5980c6d' CREATE VIEW Query_BSAK( BSAK_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSAK.EBELN') ,
 BSAK_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSAK.EBELP') ,
 BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSAK.BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSAK.BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSAK.GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSAK.BUKRS')  )
 AS
SELECT DISTINCT BSAK.EBELN, BSAK.EBELP, BSAK.BELNR, BSAK.BUZEI, BSAK.GJAHR, BSAK.BUKRS FROM BSAK  WHERE (((BSAK.BLART IN ('RE','ZC','KR','KG','KA') AND
   (BSAK.WRBTR > 0)) AND
   (BSAK.BUKRS = $G_CompanyCode)) AND
   ((BSAK.CPUDT >= $G_ExtractBeginDate) AND
   (BSAK.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '229', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '151', "Output_Width_Name" = '209', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'EKKO', "ui_acta_from_schema_1" = 'Query_BKPF', "ui_display_name" = 'Query_EKKO', "x" = '765', "y" = '-1077')
GUID::'44bd89f2-59df-41a1-a58c-5afc7555d603' CREATE VIEW Query_EKKO( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BKPF.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BKPF.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BKPF.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BKPF.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BKPF.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BKPF.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BKPF.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BKPF.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BKPF.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BKPF.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BKPF.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_BKPF.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_BKPF.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'EKKO.EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'EKKO.BSART')  )
 AS
SELECT DISTINCT Query_BKPF.BSAK_BELNR, Query_BKPF.BSAK_BUZEI, Query_BKPF.BSAK_GJAHR, Query_BKPF.BSAK_BUKRS, Query_BKPF.BSEG_EBELN, Query_BKPF.BSEG_EBELP, Query_BKPF.BSEG_BUZID, Query_BKPF.BSEG_KOART, Query_BKPF.BSEG_BUKRS, Query_BKPF.BSEG_BELNR, Query_BKPF.BSEG_GJAHR, Query_BKPF.BSEG_ZUONR, Query_BKPF.BKPF_XBLNR, Query_BKPF.BKPF_AWKEY, EKKO.EKORG, EKKO.BSART FROM Query_BKPF  __SAP_LEFT_OUTER_JOIN EKKO  ON (EKKO.EBELN = Query_BKPF.BSEG_EBELN)SET("ui_on_text" = 'EKKO.EBELN = Query_BKPF.BSEG_EBELN ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '203', "Input_Width_Type" = '96', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '195', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>250</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'EKPO', "ui_acta_from_schema_1" = 'Query_EKKO', "ui_display_name" = 'Query_EKPO', "x" = '764', "y" = '-1350')
GUID::'69d1f79c-59d7-4d08-80f0-e657629ffb56' CREATE VIEW Query_EKPO( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKKO.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_EKKO.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKKO.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKKO.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_EKKO.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_EKKO.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_EKKO.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_EKKO.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKKO.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKKO.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKKO.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_EKKO.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_EKKO.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_EKKO.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_EKKO.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_EKKO.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'EKPO.WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'EKPO.LGORT')  )
 AS
SELECT DISTINCT Query_EKKO.BSAK_BELNR, Query_EKKO.BSAK_BUZEI, Query_EKKO.BSAK_GJAHR, Query_EKKO.BSAK_BUKRS, Query_EKKO.BSEG_EBELN, Query_EKKO.BSEG_EBELP, Query_EKKO.BSEG_BUZID, Query_EKKO.BSEG_KOART, Query_EKKO.BSEG_BUKRS, Query_EKKO.BSEG_BELNR, Query_EKKO.BSEG_GJAHR, Query_EKKO.BSEG_ZUONR, Query_EKKO.BKPF_XBLNR, Query_EKKO.BKPF_AWKEY, Query_EKKO.EKKO_EKORG, Query_EKKO.EKKO_BSART, EKPO.WERKS, EKPO.LGORT FROM Query_EKKO  __SAP_LEFT_OUTER_JOIN EKPO  ON ((Query_EKKO.BSEG_EBELN = EKPO.EBELN) AND
   (Query_EKKO.BSEG_EBELP = EKPO.EBELP))SET("ui_on_text" = 'Query_EKKO.BSEG_EBELN = EKPO.EBELN and
Query_EKKO.BSEG_EBELP = EKPO.EBELP')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '228', "Input_Width_Type" = '103', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '214', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>272</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T001W', "ui_acta_from_schema_1" = 'Query_EKPO', "ui_display_name" = 'Query_T001W', "x" = '762', "y" = '-1619')
GUID::'cd45293e-d983-4abf-a2b7-068c56991f14' CREATE VIEW Query_T001W( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKPO.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_EKPO.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKPO.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKPO.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_EKPO.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_EKPO.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_EKPO.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_EKPO.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKPO.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKPO.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKPO.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_EKPO.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_EKPO.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_EKPO.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_EKPO.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_EKPO.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_EKPO.EKPO_WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_EKPO.EKPO_LGORT') ,
 T001W_NAME1 VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'T001W.NAME1')  )
 AS
SELECT DISTINCT Query_EKPO.BSAK_BELNR, Query_EKPO.BSAK_BUZEI, Query_EKPO.BSAK_GJAHR, Query_EKPO.BSAK_BUKRS, Query_EKPO.BSEG_EBELN, Query_EKPO.BSEG_EBELP, Query_EKPO.BSEG_BUZID, Query_EKPO.BSEG_KOART, Query_EKPO.BSEG_BUKRS, Query_EKPO.BSEG_BELNR, Query_EKPO.BSEG_GJAHR, Query_EKPO.BSEG_ZUONR, Query_EKPO.BKPF_XBLNR, Query_EKPO.BKPF_AWKEY, Query_EKPO.EKKO_EKORG, Query_EKPO.EKKO_BSART, Query_EKPO.EKPO_WERKS, Query_EKPO.EKPO_LGORT, T001W.NAME1 FROM Query_EKPO  __SAP_LEFT_OUTER_JOIN T001W  ON (T001W.WERKS = Query_EKPO.EKPO_WERKS)SET("ui_on_text" = 'T001W.WERKS = Query_EKPO.EKPO_WERKS')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '189', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '199', "Output_Width_Name" = '193', "Output_Width_Type" = '114', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_BSEG', "ui_acta_from_schema_1" = 'BKPF', "ui_display_name" = 'Query_BKPF', "x" = '761', "y" = '-787')
GUID::'8c7c5415-f031-45e1-8bff-d997ac2ed5c8' CREATE VIEW Query_BKPF( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSEG.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BSEG.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_BSEG.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'BKPF.XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'BKPF.AWKEY')  )
 AS
SELECT DISTINCT Query_BSEG.BSAK_BELNR, Query_BSEG.BSAK_BUZEI, Query_BSEG.BSAK_GJAHR, Query_BSEG.BSAK_BUKRS, Query_BSEG.BSEG_EBELN, Query_BSEG.BSEG_EBELP, Query_BSEG.BSEG_BUZID, Query_BSEG.BSEG_KOART, Query_BSEG.BSEG_BUKRS, Query_BSEG.BSEG_BELNR, Query_BSEG.BSEG_GJAHR, Query_BSEG.BSEG_ZUONR, BKPF.XBLNR, BKPF.AWKEY FROM Query_BSEG  __SAP_LEFT_OUTER_JOIN BKPF  ON (((BKPF.BUKRS = Query_BSEG.BSAK_BUKRS) AND
   (BKPF.BELNR = Query_BSEG.BSAK_BELNR)) AND
   (BKPF.GJAHR = Query_BSEG.BSAK_GJAHR))SET("ui_on_text" = 'BKPF.BUKRS = Query_BSEG.BSAK_BUKRS and 
BKPF.BELNR = Query_BSEG.BSAK_BELNR and 
BKPF.GJAHR = Query_BSEG.BSAK_GJAHR ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '268', "Input_Width_Name" = '170', "Input_Width_Type" = '96', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '210', "Output_Width_Name" = '170', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSEG', "ui_acta_from_schema_1" = 'Query_BSAK', "ui_display_name" = 'Query_BSEG', "x" = '767', "y" = '-502')
GUID::'361fc5b1-a643-456b-b436-ce8f0e3ea215' CREATE VIEW Query_BSEG( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSAK.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSAK.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSAK.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSAK.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSEG.EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSEG.EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'BSEG.BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'BSEG.KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSEG.BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSEG.BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSEG.GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'BSEG.ZUONR')  )
 AS
SELECT DISTINCT Query_BSAK.BSAK_BELNR, Query_BSAK.BSAK_BUZEI, Query_BSAK.BSAK_GJAHR, Query_BSAK.BSAK_BUKRS, BSEG.EBELN, BSEG.EBELP, BSEG.BUZID, BSEG.KOART, BSEG.BUKRS, BSEG.BELNR, BSEG.GJAHR, BSEG.ZUONR FROM Query_BSAK  __SAP_LEFT_OUTER_JOIN BSEG  ON ((((BSEG.BUKRS = Query_BSAK.BSAK_BUKRS) AND
   (BSEG.BELNR = Query_BSAK.BSAK_BELNR)) AND
   (BSEG.GJAHR = Query_BSAK.BSAK_GJAHR)) AND
   (BSEG.KOART = 'S'))SET("ui_on_text" = 'BSEG.BUKRS = Query_BSAK.BSAK_BUKRS and 
BSEG.BELNR = Query_BSAK.BSAK_BELNR and 
BSEG.GJAHR = Query_BSAK.BSAK_GJAHR and 
BSEG.KOART = \'S\'
')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '235', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>260</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T001L', "ui_acta_from_schema_1" = 'Query_T001W', "ui_display_name" = 'Query_T001L', "x" = '761', "y" = '-1900')
GUID::'426e0b91-c538-4650-92ed-0062fcdcf8a3' CREATE VIEW Query_T001L( BSAK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001W.BSAK_BELNR') ,
 BSAK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_T001W.BSAK_BUZEI') ,
 BSAK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_T001W.BSAK_GJAHR') ,
 BSAK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_T001W.BSAK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_T001W.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_T001W.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_T001W.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_T001W.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_T001W.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001W.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_T001W.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_T001W.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_T001W.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_T001W.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_T001W.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_T001W.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_T001W.EKPO_WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_T001W.EKPO_LGORT') ,
 T001W_NAME1 VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_T001W.T001W_NAME1') ,
 T001L_LGOBE VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'T001L.LGOBE')  )
 AS
SELECT DISTINCT Query_T001W.BSAK_BELNR, Query_T001W.BSAK_BUZEI, Query_T001W.BSAK_GJAHR, Query_T001W.BSAK_BUKRS, Query_T001W.BSEG_EBELN, Query_T001W.BSEG_EBELP, Query_T001W.BSEG_BUZID, Query_T001W.BSEG_KOART, Query_T001W.BSEG_BUKRS, Query_T001W.BSEG_BELNR, Query_T001W.BSEG_GJAHR, Query_T001W.BSEG_ZUONR, Query_T001W.BKPF_XBLNR, Query_T001W.BKPF_AWKEY, Query_T001W.EKKO_EKORG, Query_T001W.EKKO_BSART, Query_T001W.EKPO_WERKS, Query_T001W.EKPO_LGORT, Query_T001W.T001W_NAME1, T001L.LGOBE FROM Query_T001W  __SAP_LEFT_OUTER_JOIN T001L  ON ((T001L.WERKS = Query_T001W.EKPO_WERKS) AND
   (T001L.LGORT = Query_T001W.EKPO_LGORT))SET("ui_on_text" = 'T001L.WERKS = Query_T001W.EKPO_WERKS and 
T001L.LGORT = Query_T001W.EKPO_LGORT ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '209', "y" = '-240')
GUID::'92150d15-b289-4a75-9bc2-860c893f8019' READ TABLE SOURCE_SAP_LI."".BSAK OUTPUT(BSAK)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '203', "y" = '-503')
GUID::'0acd37d7-67d1-40c1-aedb-ac3feae8732d' READ TABLE SOURCE_SAP_LI."".BSEG OUTPUT(BSEG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '204', "y" = '-787')
GUID::'5dcabfe9-3408-4b22-acf0-ac8de25ae0dc' READ TABLE SOURCE_SAP_LI."".BKPF OUTPUT(BKPF)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '204', "y" = '-1078')
GUID::'40243eab-5da0-4aa6-af88-5b1ad91d7143' READ TABLE SOURCE_SAP_LI."".EKKO OUTPUT(EKKO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '210', "y" = '-1350')
GUID::'05967ba0-a5e1-4cf3-b6fe-3f6170970bbc' READ TABLE SOURCE_SAP_LI."".EKPO OUTPUT(EKPO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '203', "y" = '-1620')
GUID::'b74cde98-60b5-4a7b-a54f-02836df2d5a3' READ TABLE SOURCE_SAP_LI."".T001W OUTPUT(T001W)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '209', "y" = '-1901')
GUID::'315c582d-ef08-4492-b541-973e261f7c0f' READ TABLE SOURCE_SAP_LI."".T001L OUTPUT(T001L)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_D_BSAK_PLANT', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_D_BSAK_PLANT', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'no', "job_name" = 'J_ABAP_INVOICE_D_BSAK_PLT', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Mar  9 04:23:09 2021', "ActaValue_3" = 'Tue Mar  9 04:31:24 2021', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_DELTA_BSIK_PLANT::'42ad41c3-44e4-40af-abb3-b867282ca37a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "ui_display_name" = 'BSIK_PLANT', "x" = '1652', "y" = '-1901')
GUID::'ef8a5d76-f163-48f4-98a5-fc97c035c23f' FLOWOUTPUT FILE "SG_BSAK_PLANT.dat" INPUT(Query_FINAL)
SET("abap_remote_data_file" = 'SG_BSAK_PLANT.dat', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '208', "Input_Width_Type" = '91', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '213', "Output_Width_Type" = '118', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>257</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '54', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_T001L', "ui_display_name" = 'Query_FINAL', "x" = '1252', "y" = '-1899')
GUID::'9716a90b-4969-4873-9d79-1d5aa69a1389' CREATE VIEW Query_FINAL( INVOICE_NUM VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001L.BSIK_BELNR') ,
 INVOICE_LINE_NUM NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_T001L.BSIK_BUZEI') ,
 PO_NUM VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_T001L.BSEG_EBELN') ,
 PO_LINE_NUM NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_T001L.BSEG_EBELP') ,
 PURCHASING_ORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_T001L.EKKO_EKORG') ,
 PLANT_CODE VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_T001L.EKPO_WERKS') ,
 PLANT_NAME VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_T001L.T001W_NAME1') ,
 STORAGE_LOC VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_T001L.EKPO_LGORT') ,
 STORAGE_LOC_DESC VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'Query_T001L.T001L_LGOBE') ,
 VENDOR_REF VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_T001L.BKPF_XBLNR') ,
 REFERENCE_DOC VARCHAR(20)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'ifthenelse(Query_T001L.EKKO_BSART = \'K\', Query_T001L.BSEG_ZUONR, Query_T001L.BKPF_AWKEY)') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_T001L.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_T001L.BSEG_KOART')  )
 AS
SELECT Query_T001L.BSIK_BELNR, Query_T001L.BSIK_BUZEI, Query_T001L.BSEG_EBELN, Query_T001L.BSEG_EBELP, Query_T001L.EKKO_EKORG, Query_T001L.EKPO_WERKS, Query_T001L.T001W_NAME1, Query_T001L.EKPO_LGORT, Query_T001L.T001L_LGOBE, Query_T001L.BKPF_XBLNR, ifthenelse((Query_T001L.EKKO_BSART = 'K'), Query_T001L.BSEG_ZUONR, Query_T001L.BKPF_AWKEY), Query_T001L.BSEG_BUZID, Query_T001L.BSEG_KOART FROM Query_T001L 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '135', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '200', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSIK', "ui_display_name" = 'Query_BSIK', "ui_where_text" = 'BSIK.BLART IN (\'RE\',\'ZC\',\'KR\',\'KG\',\'KA\')
AND BSIK.WRBTR > 0
AND BSIK.BUKRS = $G_CompanyCode 
AND (BSIK.CPUDT >= $G_ExtractBeginDate  AND BSIK.CPUDT <= $G_ExtractEndDate )', "x" = '763', "y" = '-240')
GUID::'3a56ccfd-09d7-4c60-a3d7-27f0a4315ba3' CREATE VIEW Query_BSIK( BSIK_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSIK.EBELN') ,
 BSIK_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSIK.EBELP') ,
 BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSIK.BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSIK.BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSIK.GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSIK.BUKRS')  )
 AS
SELECT DISTINCT BSIK.EBELN, BSIK.EBELP, BSIK.BELNR, BSIK.BUZEI, BSIK.GJAHR, BSIK.BUKRS FROM BSIK  WHERE (((BSIK.BLART IN ('RE','ZC','KR','KG','KA') AND
   (BSIK.WRBTR > 0)) AND
   (BSIK.BUKRS = $G_CompanyCode)) AND
   ((BSIK.CPUDT >= $G_ExtractBeginDate) AND
   (BSIK.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '229', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '151', "Output_Width_Name" = '209', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_BKPF', "ui_acta_from_schema_1" = 'EKKO', "ui_display_name" = 'Query_EKKO', "x" = '765', "y" = '-1077')
GUID::'b2600a7b-41dc-416f-8d69-bd7d69d49c71' CREATE VIEW Query_EKKO( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BKPF.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BKPF.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BKPF.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BKPF.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BKPF.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BKPF.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BKPF.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BKPF.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BKPF.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BKPF.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BKPF.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_BKPF.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_BKPF.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'EKKO.EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'EKKO.BSART')  )
 AS
SELECT DISTINCT Query_BKPF.BSIK_BELNR, Query_BKPF.BSIK_BUZEI, Query_BKPF.BSIK_GJAHR, Query_BKPF.BSIK_BUKRS, Query_BKPF.BSEG_EBELN, Query_BKPF.BSEG_EBELP, Query_BKPF.BSEG_BUZID, Query_BKPF.BSEG_KOART, Query_BKPF.BSEG_BUKRS, Query_BKPF.BSEG_BELNR, Query_BKPF.BSEG_GJAHR, Query_BKPF.BSEG_ZUONR, Query_BKPF.BKPF_XBLNR, Query_BKPF.BKPF_AWKEY, EKKO.EKORG, EKKO.BSART FROM Query_BKPF  __SAP_LEFT_OUTER_JOIN EKKO  ON (EKKO.EBELN = Query_BKPF.BSEG_EBELN)SET("ui_on_text" = 'EKKO.EBELN = Query_BKPF.BSEG_EBELN ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '203', "Input_Width_Type" = '96', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '195', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>250</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_EKKO', "ui_acta_from_schema_1" = 'EKPO', "ui_display_name" = 'Query_EKPO', "x" = '764', "y" = '-1350')
GUID::'442ad202-5308-443f-abe4-2f10cc18590f' CREATE VIEW Query_EKPO( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKKO.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_EKKO.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKKO.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKKO.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_EKKO.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_EKKO.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_EKKO.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_EKKO.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKKO.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKKO.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKKO.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_EKKO.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_EKKO.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_EKKO.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_EKKO.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_EKKO.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'EKPO.WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'EKPO.LGORT')  )
 AS
SELECT DISTINCT Query_EKKO.BSIK_BELNR, Query_EKKO.BSIK_BUZEI, Query_EKKO.BSIK_GJAHR, Query_EKKO.BSIK_BUKRS, Query_EKKO.BSEG_EBELN, Query_EKKO.BSEG_EBELP, Query_EKKO.BSEG_BUZID, Query_EKKO.BSEG_KOART, Query_EKKO.BSEG_BUKRS, Query_EKKO.BSEG_BELNR, Query_EKKO.BSEG_GJAHR, Query_EKKO.BSEG_ZUONR, Query_EKKO.BKPF_XBLNR, Query_EKKO.BKPF_AWKEY, Query_EKKO.EKKO_EKORG, Query_EKKO.EKKO_BSART, EKPO.WERKS, EKPO.LGORT FROM Query_EKKO  __SAP_LEFT_OUTER_JOIN EKPO  ON ((Query_EKKO.BSEG_EBELN = EKPO.EBELN) AND
   (Query_EKKO.BSEG_EBELP = EKPO.EBELP))SET("ui_on_text" = 'Query_EKKO.BSEG_EBELN = EKPO.EBELN and
Query_EKKO.BSEG_EBELP = EKPO.EBELP')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '228', "Input_Width_Type" = '103', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '214', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>272</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T001W', "ui_acta_from_schema_1" = 'Query_EKPO', "ui_display_name" = 'Query_T001W', "x" = '762', "y" = '-1619')
GUID::'2bdef0f0-aecc-4d07-803b-642a755e6c35' CREATE VIEW Query_T001W( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKPO.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_EKPO.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKPO.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKPO.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_EKPO.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_EKPO.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_EKPO.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_EKPO.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKPO.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_EKPO.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_EKPO.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_EKPO.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_EKPO.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_EKPO.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_EKPO.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_EKPO.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_EKPO.EKPO_WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_EKPO.EKPO_LGORT') ,
 T001W_NAME1 VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'T001W.NAME1')  )
 AS
SELECT DISTINCT Query_EKPO.BSIK_BELNR, Query_EKPO.BSIK_BUZEI, Query_EKPO.BSIK_GJAHR, Query_EKPO.BSIK_BUKRS, Query_EKPO.BSEG_EBELN, Query_EKPO.BSEG_EBELP, Query_EKPO.BSEG_BUZID, Query_EKPO.BSEG_KOART, Query_EKPO.BSEG_BUKRS, Query_EKPO.BSEG_BELNR, Query_EKPO.BSEG_GJAHR, Query_EKPO.BSEG_ZUONR, Query_EKPO.BKPF_XBLNR, Query_EKPO.BKPF_AWKEY, Query_EKPO.EKKO_EKORG, Query_EKPO.EKKO_BSART, Query_EKPO.EKPO_WERKS, Query_EKPO.EKPO_LGORT, T001W.NAME1 FROM Query_EKPO  __SAP_LEFT_OUTER_JOIN T001W  ON (T001W.WERKS = Query_EKPO.EKPO_WERKS)SET("ui_on_text" = 'T001W.WERKS = Query_EKPO.EKPO_WERKS')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '189', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '199', "Output_Width_Name" = '193', "Output_Width_Type" = '114', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BKPF', "ui_acta_from_schema_1" = 'Query_BSEG', "ui_display_name" = 'Query_BKPF', "x" = '761', "y" = '-787')
GUID::'b9d1d70f-673f-4faa-9567-762752ab96b9' CREATE VIEW Query_BKPF( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSEG.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BSEG.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_BSEG.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'BKPF.XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'BKPF.AWKEY')  )
 AS
SELECT DISTINCT Query_BSEG.BSIK_BELNR, Query_BSEG.BSIK_BUZEI, Query_BSEG.BSIK_GJAHR, Query_BSEG.BSIK_BUKRS, Query_BSEG.BSEG_EBELN, Query_BSEG.BSEG_EBELP, Query_BSEG.BSEG_BUZID, Query_BSEG.BSEG_KOART, Query_BSEG.BSEG_BUKRS, Query_BSEG.BSEG_BELNR, Query_BSEG.BSEG_GJAHR, Query_BSEG.BSEG_ZUONR, BKPF.XBLNR, BKPF.AWKEY FROM Query_BSEG  __SAP_LEFT_OUTER_JOIN BKPF  ON (((BKPF.BUKRS = Query_BSEG.BSIK_BUKRS) AND
   (BKPF.BELNR = Query_BSEG.BSIK_BELNR)) AND
   (BKPF.GJAHR = Query_BSEG.BSIK_GJAHR))SET("ui_on_text" = 'BKPF.BUKRS = Query_BSEG.BSIK_BUKRS and 
BKPF.BELNR = Query_BSEG.BSIK_BELNR and 
BKPF.GJAHR = Query_BSEG.BSIK_GJAHR ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '268', "Input_Width_Name" = '170', "Input_Width_Type" = '96', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '210', "Output_Width_Name" = '170', "Output_Width_Type" = '96', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSEG', "ui_acta_from_schema_1" = 'Query_BSIK', "ui_display_name" = 'Query_BSEG', "x" = '767', "y" = '-502')
GUID::'f75a87b6-f12e-46e5-a1f3-108663110688' CREATE VIEW Query_BSEG( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSIK.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSIK.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSIK.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSIK.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSEG.EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSEG.EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'BSEG.BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'BSEG.KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSEG.BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSEG.BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSEG.GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'BSEG.ZUONR')  )
 AS
SELECT DISTINCT Query_BSIK.BSIK_BELNR, Query_BSIK.BSIK_BUZEI, Query_BSIK.BSIK_GJAHR, Query_BSIK.BSIK_BUKRS, BSEG.EBELN, BSEG.EBELP, BSEG.BUZID, BSEG.KOART, BSEG.BUKRS, BSEG.BELNR, BSEG.GJAHR, BSEG.ZUONR FROM Query_BSIK  __SAP_LEFT_OUTER_JOIN BSEG  ON ((((BSEG.BUKRS = Query_BSIK.BSIK_BUKRS) AND
   (BSEG.BELNR = Query_BSIK.BSIK_BELNR)) AND
   (BSEG.GJAHR = Query_BSIK.BSIK_GJAHR)) AND
   (BSEG.KOART = 'S'))SET("ui_on_text" = 'BSEG.BUKRS = Query_BSIK.BSIK_BUKRS and 
BSEG.BELNR = Query_BSIK.BSIK_BELNR and 
BSEG.GJAHR = Query_BSIK.BSIK_GJAHR and 
BSEG.KOART = \'S\'
')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '235', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>260</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T001L', "ui_acta_from_schema_1" = 'Query_T001W', "ui_display_name" = 'Query_T001L', "x" = '761', "y" = '-1900')
GUID::'5417a1e5-89c1-4257-bcc5-05689a38cbf2' CREATE VIEW Query_T001L( BSIK_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001W.BSIK_BELNR') ,
 BSIK_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_T001W.BSIK_BUZEI') ,
 BSIK_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_T001W.BSIK_GJAHR') ,
 BSIK_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_T001W.BSIK_BUKRS') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_T001W.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_T001W.BSEG_EBELP') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_T001W.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_T001W.BSEG_KOART') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_T001W.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_T001W.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_T001W.BSEG_GJAHR') ,
 BSEG_ZUONR VARCHAR(18)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_T001W.BSEG_ZUONR') ,
 BKPF_XBLNR VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_T001W.BKPF_XBLNR') ,
 BKPF_AWKEY VARCHAR(20)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_T001W.BKPF_AWKEY') ,
 EKKO_EKORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_T001W.EKKO_EKORG') ,
 EKKO_BSART VARCHAR(4)  SET( "Description" = 'Purchasing Document Type', "ui_mapping_text" = 'Query_T001W.EKKO_BSART') ,
 EKPO_WERKS VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_T001W.EKPO_WERKS') ,
 EKPO_LGORT VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_T001W.EKPO_LGORT') ,
 T001W_NAME1 VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_T001W.T001W_NAME1') ,
 T001L_LGOBE VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'T001L.LGOBE')  )
 AS
SELECT DISTINCT Query_T001W.BSIK_BELNR, Query_T001W.BSIK_BUZEI, Query_T001W.BSIK_GJAHR, Query_T001W.BSIK_BUKRS, Query_T001W.BSEG_EBELN, Query_T001W.BSEG_EBELP, Query_T001W.BSEG_BUZID, Query_T001W.BSEG_KOART, Query_T001W.BSEG_BUKRS, Query_T001W.BSEG_BELNR, Query_T001W.BSEG_GJAHR, Query_T001W.BSEG_ZUONR, Query_T001W.BKPF_XBLNR, Query_T001W.BKPF_AWKEY, Query_T001W.EKKO_EKORG, Query_T001W.EKKO_BSART, Query_T001W.EKPO_WERKS, Query_T001W.EKPO_LGORT, Query_T001W.T001W_NAME1, T001L.LGOBE FROM Query_T001W  __SAP_LEFT_OUTER_JOIN T001L  ON ((T001L.WERKS = Query_T001W.EKPO_WERKS) AND
   (T001L.LGORT = Query_T001W.EKPO_LGORT))SET("ui_on_text" = 'T001L.WERKS = Query_T001W.EKPO_WERKS and 
T001L.LGORT = Query_T001W.EKPO_LGORT ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '203', "y" = '-503')
GUID::'590b6e51-aa87-42c6-ba7f-73de18ff42d6' READ TABLE SOURCE_SAP_LI."".BSEG OUTPUT(BSEG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '204', "y" = '-787')
GUID::'deb1faba-922b-4c1b-946c-64e3c8e8ccae' READ TABLE SOURCE_SAP_LI."".BKPF OUTPUT(BKPF)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '204', "y" = '-1078')
GUID::'c11fe1e3-b05b-491b-aa37-0cfd9ed3dd9d' READ TABLE SOURCE_SAP_LI."".EKKO OUTPUT(EKKO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '210', "y" = '-1350')
GUID::'c25b9bea-5626-432f-8c3b-6d4ab1893005' READ TABLE SOURCE_SAP_LI."".EKPO OUTPUT(EKPO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '203', "y" = '-1620')
GUID::'5bc59906-3031-4f4a-945d-4aa0959e5974' READ TABLE SOURCE_SAP_LI."".T001W OUTPUT(T001W)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '209', "y" = '-1901')
GUID::'ca29a246-2512-43d1-8c1f-d67ed8819dcc' READ TABLE SOURCE_SAP_LI."".T001L OUTPUT(T001L)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '212', "y" = '-241')
GUID::'dcbf4448-8e2b-42d3-8485-20d48ccb6d6b' READ TABLE SOURCE_SAP_LI."".BSIK OUTPUT(BSIK)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_D_BSIK_PLANT', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_D_BSIK_PLANT', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'no', "job_name" = 'J_ABAP_INVOICE_D_BSIK_PLT', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Apr 27 01:16:38 2017', "ActaValue_3" = 'Tue Nov 28 01:30:44 2017', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_EKKO::'db10f9f3-74d9-4ec8-834f-6f774999ca2f'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '190', "Input_Width_Name" = '132', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'EKKO', "ui_display_name" = 'Query_EKKO', "x" = '708', "y" = '-144')
GUID::'30e37f6b-98cb-44d3-82ec-cc09b0e7a34c' CREATE VIEW Query_EKKO( BEDAT DATE  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'EKKO.BEDAT') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'EKKO.EBELN') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'EKKO.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Vendor Account Number', "ui_mapping_text" = 'EKKO.LIFNR') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'EKKO.WAERS') ,
 WKURS DECIMAL(9, 5)  SET( "Description" = 'Exchange Rate', "ui_mapping_text" = 'EKKO.WKURS')  )
 AS
SELECT EKKO.BEDAT, EKKO.EBELN, EKKO.BUKRS, EKKO.LIFNR, EKKO.WAERS, EKKO.WKURS FROM EKKO 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "ui_display_name" = 'DataTransport48525', "x" = '2722', "y" = '-1054')
GUID::'ec6cdd52-dcd1-4313-86dd-bacab346ecaa' FLOWOUTPUT FILE "LI_EKKO.DAT" INPUT(Query_JOIN_ALL)
SET("abap_remote_data_file" = 'LI_EKKO.DAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '178', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '53', "Output_Column_Width_5" = '41', "Output_Width_Decsription" = '243', "Output_Width_Mapping" = '85', "Output_Width_Name" = '135', "Output_Width_Type" = '94', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>250</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'EKPO', "ui_display_name" = 'Query_EKPO', "x" = '715', "y" = '-439')
GUID::'60c3c30f-3193-46da-9de1-e12a95af1afb' CREATE VIEW Query_EKPO( EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'nvl( EKPO.EMATN,EKPO. TXZ01 )') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'EKPO.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'EKPO.EBELP') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'EKPO.KNTTP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'nvl( EKPO.NETPR, 0 )
#nvl( ifthenelse( EKPO.PEINH <> 0, (EKPO.NETPR / EKPO.PEINH) / EKPO.UMREZ, EKPO.NETPR ), 0 )') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'EKPO.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'EKPO.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'EKPO.UMREZ
#ifthenelse( EKPO.UMREZ=0, 1, EKPO.UMREZ)') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'EKPO.UMREN')  )
 AS
SELECT nvl(EKPO.EMATN, EKPO.TXZ01), EKPO.EBELN, EKPO.EBELP, EKPO.KNTTP, nvl(EKPO.NETPR, 0), EKPO.PSTYP, EKPO.PEINH, EKPO.UMREZ, EKPO.UMREN FROM EKPO 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '205', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>407</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_NETPR', "ui_acta_from_schema_1" = 'Query_EKKO', "ui_display_name" = 'Query_JOIN_EKKO_EKPO', "x" = '1755', "y" = '-143')
GUID::'dee28698-e299-4dfc-98f6-7a242156c0f8' CREATE VIEW Query_JOIN_EKKO_EKPO( EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_NETPR.EMATN') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_NETPR.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_NETPR.EBELP') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_NETPR.KNTTP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_NETPR.NETPR') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_NETPR.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'Query_NETPR.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_NETPR.UMREZ') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_NETPR.UMREN') ,
 BEDAT DATE  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'Query_EKKO.BEDAT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_EKKO.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Vendor Account Number', "ui_mapping_text" = 'Query_EKKO.LIFNR') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_EKKO.WAERS') ,
 WKURS DECIMAL(9, 5)  SET( "Description" = 'Exchange Rate', "ui_mapping_text" = 'Query_EKKO.WKURS')  )
 AS
SELECT Query_NETPR.EMATN, Query_NETPR.EBELN, Query_NETPR.EBELP, Query_NETPR.KNTTP, Query_NETPR.NETPR, Query_NETPR.PSTYP, Query_NETPR.PEINH, Query_NETPR.UMREZ, Query_NETPR.UMREN, Query_EKKO.BEDAT, Query_EKKO.BUKRS, Query_EKKO.LIFNR, Query_EKKO.WAERS, Query_EKKO.WKURS FROM Query_NETPR  __SAP_LEFT_OUTER_JOIN Query_EKKO  ON (Query_EKKO.EBELN = Query_NETPR.EBELN)SET("ui_on_text" = 'Query_EKKO.EBELN = Query_NETPR.EBELN')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '216', "Input_Width_Type" = '115', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T163I', "ui_display_name" = 'Query_T163I', "ui_where_text" = 'T163I.SPRAS = \'E\'





', "x" = '740', "y" = '-1053')
GUID::'8520fc21-b36b-42c9-a0c3-bb41d0b848b3' CREATE VIEW Query_T163I( KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'T163I.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'T163I.KNTTX')  )
 AS
SELECT T163I.KNTTP, T163I.KNTTX FROM T163I  WHERE (T163I.SPRAS = 'E')
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'T163Y', "ui_display_name" = 'Query_T163Y', "ui_where_text" = 'T163Y.SPRAS = \'E\'', "x" = '722', "y" = '-753')
GUID::'9ea75bcd-1d79-480b-8a08-6371ade988b3' CREATE VIEW Query_T163Y( PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'T163Y.PSTYP') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'T163Y.PTEXT') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'T163Y.EPSTP')  )
 AS
SELECT T163Y.PSTYP, T163Y.PTEXT, T163Y.EPSTP FROM T163Y  WHERE (T163Y.SPRAS = 'E')
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '163', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '119', "Output_Width_Name" = '174', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_JOIN_T163Y', "ui_acta_from_schema_1" = 'Query_T163I', "ui_display_name" = 'Query_JOIN_T163', "x" = '1755', "y" = '-1053')
GUID::'3e71eb4b-5ec2-489e-befb-ffd85d4a8aea' CREATE VIEW Query_JOIN_T163( KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'ifthenelse( Query_JOIN_T163Y.KNTTP=\'\'OR Query_JOIN_T163Y.KNTTP IS NULL, Query_T163I.KNTTX, Query_T163I.KNTTX)') ,
 EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_JOIN_T163Y.EMATN') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_JOIN_T163Y.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163Y.EBELP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_JOIN_T163Y.NETPR') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163Y.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'Query_JOIN_T163Y.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_T163Y.UMREZ') ,
 BEDAT DATE  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'Query_JOIN_T163Y.BEDAT') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_T163Y.UMREN') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'Query_JOIN_T163Y.PTEXT') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163Y.EPSTP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_JOIN_T163Y.BUKRS') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_JOIN_T163Y.KNTTP') ,
 EKKO_LIFNR VARCHAR(10)  SET( "Description" = 'Vendor Account Number', "ui_mapping_text" = 'Query_JOIN_T163Y.LIFNR') ,
 EKKO_WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_JOIN_T163Y.WAERS') ,
 EKKO_WKURS DECIMAL(9, 5)  SET( "Description" = 'Exchange Rate', "ui_mapping_text" = 'Query_JOIN_T163Y.WKURS')  )
 AS
SELECT ifthenelse(((Query_JOIN_T163Y.KNTTP = '') OR
   (Query_JOIN_T163Y.KNTTP IS  NULL )), Query_T163I.KNTTX, Query_T163I.KNTTX), Query_JOIN_T163Y.EMATN, Query_JOIN_T163Y.EBELN, Query_JOIN_T163Y.EBELP, Query_JOIN_T163Y.NETPR, Query_JOIN_T163Y.PSTYP, Query_JOIN_T163Y.PEINH, Query_JOIN_T163Y.UMREZ, Query_JOIN_T163Y.BEDAT, Query_JOIN_T163Y.UMREN, Query_JOIN_T163Y.PTEXT, Query_JOIN_T163Y.EPSTP, Query_JOIN_T163Y.BUKRS, Query_JOIN_T163Y.KNTTP, Query_JOIN_T163Y.LIFNR, Query_JOIN_T163Y.WAERS, Query_JOIN_T163Y.WKURS FROM Query_JOIN_T163Y  __SAP_LEFT_OUTER_JOIN Query_T163I  ON (Query_T163I.KNTTP = Query_JOIN_T163Y.KNTTP)SET("ui_on_text" = 'Query_T163I.KNTTP = Query_JOIN_T163Y.KNTTP')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '155', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '327', "Output_Width_Mapping" = '159', "Output_Width_Name" = '161', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>316</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_JOIN_T163', "ui_display_name" = 'Query_JOIN_ALL', "x" = '2252', "y" = '-1054')
GUID::'22377856-351e-4a96-a671-1e6b7fff98a5' CREATE VIEW Query_JOIN_ALL( KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'Query_JOIN_T163.KNTTX') ,
 EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_JOIN_T163.EMATN') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_JOIN_T163.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163.EBELP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_JOIN_T163.NETPR') ,
 BEDAT DATE  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'Query_JOIN_T163.BEDAT') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'Query_JOIN_T163.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_T163.UMREZ') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_T163.UMREN') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'Query_JOIN_T163.PTEXT') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_JOIN_T163.EPSTP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_JOIN_T163.BUKRS') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_JOIN_T163.KNTTP') ,
 EKKO_LIFNR VARCHAR(10)  SET( "Description" = 'Vendor Account Number', "ui_mapping_text" = 'Query_JOIN_T163.EKKO_LIFNR') ,
 EKKO_WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_JOIN_T163.EKKO_WAERS') ,
 EKKO_WKURS DECIMAL(9, 5)  SET( "Description" = 'Exchange Rate', "ui_mapping_text" = 'Query_JOIN_T163.EKKO_WKURS')  )
 AS
SELECT Query_JOIN_T163.KNTTX, Query_JOIN_T163.EMATN, Query_JOIN_T163.EBELN, Query_JOIN_T163.EBELP, Query_JOIN_T163.NETPR, Query_JOIN_T163.BEDAT, Query_JOIN_T163.PSTYP, Query_JOIN_T163.PEINH, Query_JOIN_T163.UMREZ, Query_JOIN_T163.UMREN, Query_JOIN_T163.PTEXT, Query_JOIN_T163.EPSTP, Query_JOIN_T163.BUKRS, Query_JOIN_T163.KNTTP, Query_JOIN_T163.EKKO_LIFNR, Query_JOIN_T163.EKKO_WAERS, Query_JOIN_T163.EKKO_WKURS FROM Query_JOIN_T163 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_JOIN_EKKO_EKPO', "ui_acta_from_schema_1" = 'Query_T163Y', "ui_display_name" = 'Query_JOIN_T163Y', "x" = '1741', "y" = '-753')
GUID::'3baa8aed-7fea-4377-b34d-8e35eabf549a' CREATE VIEW Query_JOIN_T163Y( EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.EMATN') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.EBELP') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.KNTTP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.NETPR') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.UMREZ') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.UMREN') ,
 BEDAT DATE  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.BEDAT') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'Query_T163Y.PTEXT') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_T163Y.EPSTP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Vendor Account Number', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.LIFNR') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.WAERS') ,
 WKURS DECIMAL(9, 5)  SET( "Description" = 'Exchange Rate', "ui_mapping_text" = 'Query_JOIN_EKKO_EKPO.WKURS')  )
 AS
SELECT Query_JOIN_EKKO_EKPO.EMATN, Query_JOIN_EKKO_EKPO.EBELN, Query_JOIN_EKKO_EKPO.EBELP, Query_JOIN_EKKO_EKPO.KNTTP, Query_JOIN_EKKO_EKPO.NETPR, Query_JOIN_EKKO_EKPO.PSTYP, Query_JOIN_EKKO_EKPO.PEINH, Query_JOIN_EKKO_EKPO.UMREZ, Query_JOIN_EKKO_EKPO.UMREN, Query_JOIN_EKKO_EKPO.BEDAT, Query_T163Y.PTEXT, Query_T163Y.EPSTP, Query_JOIN_EKKO_EKPO.BUKRS, Query_JOIN_EKKO_EKPO.LIFNR, Query_JOIN_EKKO_EKPO.WAERS, Query_JOIN_EKKO_EKPO.WKURS FROM Query_JOIN_EKKO_EKPO  __SAP_LEFT_OUTER_JOIN Query_T163Y  ON (Query_T163Y.PSTYP = Query_JOIN_EKKO_EKPO.PSTYP)SET("ui_on_text" = 'Query_T163Y.PSTYP = Query_JOIN_EKKO_EKPO.PSTYP')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '99', "Input_Column_Width_4" = '100', "Input_Width_Description" = '327', "Input_Width_Name" = '149', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '141', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_EKPO', "ui_display_name" = 'Query_NETPR', "x" = '1140', "y" = '-437')
GUID::'8d8c62bc-8281-433e-8338-123502feec80' CREATE VIEW Query_NETPR( EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_EKPO.EMATN') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_EKPO.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_EKPO.EBELP') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_EKPO.KNTTP') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'ifthenelse( Query_EKPO.PEINH <> 0 and Query_EKPO.UMREZ <> 0, Query_EKPO.NETPR / Query_EKPO.UMREZ, Query_EKPO.NETPR)
#ifthenelse( Query_EKPO.PEINH <> 0, (Query_EKPO.NETPR/Query_EKPO.PEINH)/Query_EKPO.UMREZ, Query_EKPO.NETPR)
#Query_EKPO.NETPR
#ifthenelse( Query_EKPO.PEINH <> 0, Query_EKPO.NETPR_1, Query_EKPO.NETPR )') ,
 PSTYP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_EKPO.PSTYP') ,
 PEINH DECIMAL(11, 2)  SET( "Description" = 'Price Unit', "ui_mapping_text" = 'Query_EKPO.PEINH') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_EKPO.UMREZ') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'Query_EKPO.UMREN')  )
 AS
SELECT Query_EKPO.EMATN, Query_EKPO.EBELN, Query_EKPO.EBELP, Query_EKPO.KNTTP, ifthenelse(((Query_EKPO.PEINH != 0) AND
   (Query_EKPO.UMREZ != 0)), (Query_EKPO.NETPR / Query_EKPO.UMREZ), Query_EKPO.NETPR), Query_EKPO.PSTYP, Query_EKPO.PEINH, Query_EKPO.UMREZ, Query_EKPO.UMREN FROM Query_EKPO 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '115', "y" = '-144')
GUID::'64764585-921a-40ad-9262-fb3d0dfcba6d' READ TABLE SOURCE_SAP_LI."".EKKO OUTPUT(EKKO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '122', "y" = '-439')
GUID::'36f1eea1-6a2f-40a5-8084-0d16559369a8' READ TABLE SOURCE_SAP_LI."".EKPO OUTPUT(EKPO)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '124', "y" = '-753')
GUID::'6aa0c3d4-e727-4a72-9f6a-d342c23d6b1a' READ TABLE SOURCE_SAP_LI."".T163Y OUTPUT(T163Y)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>366</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '131', "y" = '-1053')
GUID::'56960d03-13b0-452f-b284-7aa2b7295542' READ TABLE SOURCE_SAP_LI."".T163I OUTPUT(T163I)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_EKKO', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_EKKO', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_EKKO', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:47 2020', "ActaValue_3" = 'Mon Nov 27 19:07:52 2017', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_LFA1::'40fa63d1-93c2-4689-b421-1fe75a4fd564'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '164', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '145', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'LFA1', "ui_display_name" = 'QUERY_LFA1', "ui_where_text" = 'LFA1.KTOKK <> \'REIS\'', "x" = '1150', "y" = '-807')
GUID::'6581e2e3-bb5b-4d53-9cfa-5526875b70c6' CREATE VIEW QUERY_LFA1( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'LFA1.MANDT') ,
 LIFNR VARCHAR(10)  KEY  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'LFA1.LIFNR') ,
 KTOKK VARCHAR(4)  SET( "Description" = 'Vendor account group', "ui_mapping_text" = 'LFA1.KTOKK')  )
 AS
SELECT LFA1.MANDT, LFA1.LIFNR, LFA1.KTOKK FROM LFA1  WHERE (LFA1.KTOKK != 'REIS')
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = 'DataTransport60420', "x" = '1956', "y" = '-903')
GUID::'ff1fcf40-6328-48f9-931b-6a21db0058af' FLOWOUTPUT FILE "LI_LFA1.BAT" INPUT(QUERY_LFA1)
SET("abap_remote_data_file" = 'LI_LFA1.BAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '460', "y" = '-716')
GUID::'1ed068fa-e5ce-45a2-8515-7086b87a10d4' READ TABLE SOURCE_SAP_LI."".LFA1 OUTPUT(LFA1)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_LFA1', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_LFA1', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_LFA1', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Mar 14 04:50:27 2016', "ActaValue_3" = 'Wed Apr 26 23:44:04 2017', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_LFB1::'2c8cffb5-43d0-42b0-9c14-e643f9c1639b'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>244</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "abap_query" = 'y', "ui_acta_from_schema_0" = 'LFB1', "ui_display_name" = 'Query_LFB1', "x" = '1313', "y" = '-772')
GUID::'00441185-d342-4efb-925d-58d01f76c24b' CREATE VIEW Query_LFB1( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'LFB1.MANDT') ,
 LIFNR VARCHAR(10)  KEY  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'LFB1.LIFNR') ,
 BUKRS VARCHAR(4)  KEY  SET( "Description" = 'Company Code', "ui_mapping_text" = 'LFB1.BUKRS') ,
 PERNR NUMERIC(8, 0)  SET( "Description" = 'Personnel Number', "ui_mapping_text" = 'LFB1.PERNR') ,
 ERDAT DATE  SET( "Description" = 'Date on which the Record Was Created', "ui_mapping_text" = 'LFB1.ERDAT') ,
 ERNAM VARCHAR(12)  SET( "Description" = 'Name of Person who Created the Object', "ui_mapping_text" = 'LFB1.ERNAM') ,
 SPERR VARCHAR(1)  SET( "Description" = 'Posting block for company code', "ui_mapping_text" = 'LFB1.SPERR') ,
 LOEVM VARCHAR(1)  SET( "Description" = 'Deletion Flag for Master Record (Company Code Level)', "ui_mapping_text" = 'LFB1.LOEVM') ,
 ZUAWA VARCHAR(3)  SET( "Description" = 'Key for sorting according to assignment numbers', "ui_mapping_text" = 'LFB1.ZUAWA') ,
 AKONT VARCHAR(10)  SET( "Description" = 'Reconciliation Account in General Ledger', "ui_mapping_text" = 'LFB1.AKONT') ,
 BEGRU VARCHAR(4)  SET( "Description" = 'Authorization Group', "ui_mapping_text" = 'LFB1.BEGRU') ,
 VZSKZ VARCHAR(2)  SET( "Description" = 'Interest calculation indicator', "ui_mapping_text" = 'LFB1.VZSKZ') ,
 ZWELS VARCHAR(10)  SET( "Description" = 'List of the Payment Methods to be Considered', "ui_mapping_text" = 'LFB1.ZWELS') ,
 XVERR VARCHAR(1)  SET( "Description" = 'Indicator: Clearing between customer and vendor?', "ui_mapping_text" = 'LFB1.XVERR') ,
 ZAHLS VARCHAR(1)  SET( "Description" = 'Block key for payment', "ui_mapping_text" = 'LFB1.ZAHLS') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'LFB1.ZTERM') ,
 EIKTO VARCHAR(12)  SET( "Description" = 'Our account number with the vendor', "ui_mapping_text" = 'LFB1.EIKTO') ,
 ZSABE VARCHAR(15)  SET( "Description" = 'Clerk at vendor', "ui_mapping_text" = 'LFB1.ZSABE') ,
 KVERM VARCHAR(30)  SET( "Description" = 'Memo', "ui_mapping_text" = 'LFB1.KVERM') ,
 FDGRV VARCHAR(10)  SET( "Description" = 'Planning group', "ui_mapping_text" = 'LFB1.FDGRV') ,
 BUSAB VARCHAR(2)  SET( "Description" = 'Accounting clerk', "ui_mapping_text" = 'LFB1.BUSAB') ,
 LNRZE VARCHAR(10)  SET( "Description" = 'Head office account number', "ui_mapping_text" = 'LFB1.LNRZE') ,
 LNRZB VARCHAR(10)  SET( "Description" = 'Account number of the alternative payee', "ui_mapping_text" = 'LFB1.LNRZB') ,
 ZINDT DATE  SET( "Description" = 'Key date of the last interest calculation', "ui_mapping_text" = 'LFB1.ZINDT') ,
 ZINRT NUMERIC(2, 0)  SET( "Description" = 'Interest calculation frequency in months', "ui_mapping_text" = 'LFB1.ZINRT') ,
 DATLZ DATE  SET( "Description" = 'Date of the last interest calculation run', "ui_mapping_text" = 'LFB1.DATLZ') ,
 XDEZV VARCHAR(1)  SET( "Description" = 'Indicator: Local processing?', "ui_mapping_text" = 'LFB1.XDEZV') ,
 WEBTR DECIMAL(13, 2)  SET( "Description" = 'Bill of exchange limit (in local currency)', "ui_mapping_text" = 'LFB1.WEBTR') ,
 KULTG DECIMAL(3, 0)  SET( "Description" = 'Probable time until check is paid', "ui_mapping_text" = 'LFB1.KULTG') ,
 REPRF VARCHAR(1)  SET( "Description" = 'Check Flag for Double Invoices or Credit Memos', "ui_mapping_text" = 'LFB1.REPRF') ,
 TOGRU VARCHAR(4)  SET( "Description" = 'Tolerance group for the business partner/G/L account', "ui_mapping_text" = 'LFB1.TOGRU') ,
 HBKID VARCHAR(5)  SET( "Description" = 'Short Key for a House Bank', "ui_mapping_text" = 'LFB1.HBKID') ,
 XPORE VARCHAR(1)  SET( "Description" = 'Indicator: Pay all items separately ?', "ui_mapping_text" = 'LFB1.XPORE') ,
 QSZNR VARCHAR(10)  SET( "Description" = 'Certificate Number of the Withholding Tax Exemption', "ui_mapping_text" = 'LFB1.QSZNR') ,
 QSZDT DATE  SET( "Description" = 'Validity Date for Withholding Tax Exemption Certificate', "ui_mapping_text" = 'LFB1.QSZDT') ,
 QSSKZ VARCHAR(2)  SET( "Description" = 'Withholding Tax Code', "ui_mapping_text" = 'LFB1.QSSKZ') ,
 BLNKZ VARCHAR(2)  SET( "Description" = 'Subsidy Indicator for Determining the Reduction Rates', "ui_mapping_text" = 'LFB1.BLNKZ') ,
 MINDK VARCHAR(3)  SET( "Description" = 'Minority Indicators', "ui_mapping_text" = 'LFB1.MINDK') ,
 ALTKN VARCHAR(10)  SET( "Description" = 'Previous Master Record Number', "ui_mapping_text" = 'LFB1.ALTKN') ,
 ZGRUP VARCHAR(2)  SET( "Description" = 'Key for Payment Grouping', "ui_mapping_text" = 'LFB1.ZGRUP') ,
 MGRUP VARCHAR(2)  SET( "Description" = 'Key for dunning notice grouping', "ui_mapping_text" = 'LFB1.MGRUP') ,
 UZAWE VARCHAR(2)  SET( "Description" = 'Payment Method Supplement', "ui_mapping_text" = 'LFB1.UZAWE') ,
 QSREC VARCHAR(2)  SET( "Description" = 'Vendor Recipient Type', "ui_mapping_text" = 'LFB1.QSREC') ,
 QSBGR VARCHAR(1)  SET( "Description" = 'Authority for Exemption from Withholding Tax', "ui_mapping_text" = 'LFB1.QSBGR') ,
 QLAND VARCHAR(3)  SET( "Description" = 'Withholding Tax Country Key', "ui_mapping_text" = 'LFB1.QLAND') ,
 XEDIP VARCHAR(1)  SET( "Description" = 'Indicator: Send Payment Advices by EDI', "ui_mapping_text" = 'LFB1.XEDIP') ,
 FRGRP VARCHAR(4)  SET( "Description" = 'Release Approval Group', "ui_mapping_text" = 'LFB1.FRGRP') ,
 TOGRR VARCHAR(4)  SET( "Description" = 'Tolerance group; Invoice Verification', "ui_mapping_text" = 'LFB1.TOGRR') ,
 TLFXS VARCHAR(31)  SET( "Description" = 'Accounting clerk\'s fax number at the customer/vendor', "ui_mapping_text" = 'LFB1.TLFXS') ,
 INTAD VARCHAR(130)  SET( "Description" = 'Internet address of partner company clerk', "ui_mapping_text" = 'LFB1.INTAD') ,
 XLFZB VARCHAR(1)  SET( "Description" = 'Indicator: Alternative payee using account number', "ui_mapping_text" = 'LFB1.XLFZB') ,
 GUZTE VARCHAR(4)  SET( "Description" = 'Payment Terms Key for Credit Memos', "ui_mapping_text" = 'LFB1.GUZTE') ,
 GRICD VARCHAR(2)  SET( "Description" = 'Activity Code for Gross Income Tax', "ui_mapping_text" = 'LFB1.GRICD') ,
 GRIDT VARCHAR(2)  SET( "Description" = 'Distribution Type for Employment Tax', "ui_mapping_text" = 'LFB1.GRIDT') ,
 XAUSZ VARCHAR(1)  SET( "Description" = 'Indicator for periodic account statements', "ui_mapping_text" = 'LFB1.XAUSZ') ,
 CERDT DATE  SET( "Description" = 'Certification date', "ui_mapping_text" = 'LFB1.CERDT') ,
 CONFS VARCHAR(1)  SET( "Description" = 'Status of Change Authorization (Company Code Level)', "ui_mapping_text" = 'LFB1.CONFS') ,
 UPDAT DATE  SET( "Description" = 'Date on Which the Changes Were Confirmed', "ui_mapping_text" = 'LFB1.UPDAT') ,
 UPTIM TIME  SET( "Description" = 'Time of Last Change Confirmation', "ui_mapping_text" = 'LFB1.UPTIM') ,
 NODEL VARCHAR(1)  SET( "Description" = 'Deletion bock for master record (company code level)', "ui_mapping_text" = 'LFB1.NODEL') ,
 TLFNS VARCHAR(30)  SET( "Description" = 'Accounting clerk\'s telephone number at business partner', "ui_mapping_text" = 'LFB1.TLFNS') ,
 J_SC_SUBCONTYPE VARCHAR(1)  SET( "Description" = 'Subcontractor Type', "ui_mapping_text" = 'LFB1.J_SC_SUBCONTYPE') ,
 J_SC_COMPDATE NUMERIC(3, 0)  SET( "Description" = 'Completion Date Of Inspection', "ui_mapping_text" = 'LFB1.J_SC_COMPDATE') ,
 J_SC_OFFSM VARCHAR(1)  SET( "Description" = 'Offset Method', "ui_mapping_text" = 'LFB1.J_SC_OFFSM') ,
 J_SC_OFFSR NUMERIC(3, 0)  SET( "Description" = 'Offset Percentage', "ui_mapping_text" = 'LFB1.J_SC_OFFSR') ,
 BASIS_PNT DECIMAL(6, 3)  SET( "Description" = 'Average daily basis points for purchase cards', "ui_mapping_text" = 'LFB1.BASIS_PNT') ,
 GMVKZK VARCHAR(1)  SET( "Description" = 'Vendor is in execution', "ui_mapping_text" = 'LFB1.GMVKZK') ,
 PREPAY_RELEVANT VARCHAR(1)  SET( "Description" = 'Prepayment Relevance (Vendor Master)', "ui_mapping_text" = 'LFB1.PREPAY_RELEVANT') ,
 ASSIGN_TEST VARCHAR(4)  SET( "Description" = 'Assignment Test Group', "ui_mapping_text" = 'LFB1.ASSIGN_TEST')  )
 AS
SELECT LFB1.MANDT, LFB1.LIFNR, LFB1.BUKRS, LFB1.PERNR, LFB1.ERDAT, LFB1.ERNAM, LFB1.SPERR, LFB1.LOEVM, LFB1.ZUAWA, LFB1.AKONT, LFB1.BEGRU, LFB1.VZSKZ, LFB1.ZWELS, LFB1.XVERR, LFB1.ZAHLS, LFB1.ZTERM, LFB1.EIKTO, LFB1.ZSABE, LFB1.KVERM, LFB1.FDGRV, LFB1.BUSAB, LFB1.LNRZE, LFB1.LNRZB, LFB1.ZINDT, LFB1.ZINRT, LFB1.DATLZ, LFB1.XDEZV, LFB1.WEBTR, LFB1.KULTG, LFB1.REPRF, LFB1.TOGRU, LFB1.HBKID, LFB1.XPORE, LFB1.QSZNR, LFB1.QSZDT, LFB1.QSSKZ, LFB1.BLNKZ, LFB1.MINDK, LFB1.ALTKN, LFB1.ZGRUP, LFB1.MGRUP, LFB1.UZAWE, LFB1.QSREC, LFB1.QSBGR, LFB1.QLAND, LFB1.XEDIP, LFB1.FRGRP, LFB1.TOGRR, LFB1.TLFXS, LFB1.INTAD, LFB1.XLFZB, LFB1.GUZTE, LFB1.GRICD, LFB1.GRIDT, LFB1.XAUSZ, LFB1.CERDT, LFB1.CONFS, LFB1.UPDAT, LFB1.UPTIM, LFB1.NODEL, LFB1.TLFNS, LFB1.J_SC_SUBCONTYPE, LFB1.J_SC_COMPDATE, LFB1.J_SC_OFFSM, LFB1.J_SC_OFFSR, LFB1.BASIS_PNT, LFB1.GMVKZK, LFB1.PREPAY_RELEVANT, LFB1.ASSIGN_TEST FROM LFB1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "ui_display_name" = 'DataTransport61199', "x" = '1966', "y" = '-853')
GUID::'bbdcbde7-64a7-4178-9cd9-3d2dfd0ae7cf' FLOWOUTPUT FILE "LI_LFB1.DAT" INPUT(Query_LFB1)
SET("abap_remote_data_file" = 'LI_LFB1.DAT', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>381</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '716', "y" = '-712')
GUID::'735487c0-5e1f-42b2-b2e4-e26439f9cd93' READ TABLE SOURCE_SAP_LI."".LFB1 OUTPUT(LFB1)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_LFB1', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_LFB1', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'optional', "job_name" = 'J_ABAP_INVOICE_LFB1', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:48 2020', "ActaValue_3" = 'Thu Aug 20 21:58:04 2020', "x" = '-1', "y" = '-1')
CREATE ABAP_PROGRAM LI_ABAP_INVOICE_RSEG::'06fdd513-d8db-4c9f-8868-2de206d3577a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '426', "Input_Width_Name" = '231', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '207', "Output_Width_Name" = '167', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BKPF', "ui_display_name" = 'Query_BKPF', "ui_where_text" = 'BKPF.BUKRS = $G_CompanyCode and 
(BKPF.CPUDT >= $G_ExtractBeginDate  AND BKPF.CPUDT <= $G_ExtractEndDate )
#and (BKPF.BUDAT >= $G_ExtractBeginDate  AND BKPF.BUDAT <= $G_ExtractEndDate )', "x" = '901', "y" = '-153')
GUID::'dfed7a80-65a4-4c2f-bdf6-904b82d006d3' CREATE VIEW Query_BKPF( BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BKPF.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BKPF.GJAHR') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BKPF.BUKRS') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'substr(BKPF.AWKEY, 1, 10)') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = '#ifthenelse(length(BKPF.AWKEY) > 14, substr(BKPF.AWKEY, 12, 4), substr(BKPF.AWKEY, 11, 4))
ifthenelse(length(BKPF.AWKEY) > 14, substr(BKPF.AWKEY, 15, 4), substr(BKPF.AWKEY, 11, 4))
#substr(BKPF.AWKEY, 11, 4)')  )
 AS
SELECT BKPF.BELNR, BKPF.GJAHR, BKPF.BUKRS, substr(BKPF.AWKEY, 1, 10), ifthenelse((length(BKPF.AWKEY) > 14), substr(BKPF.AWKEY, 15, 4), substr(BKPF.AWKEY, 11, 4)) FROM BKPF  WHERE ((BKPF.BUKRS = $G_CompanyCode) AND
   ((BKPF.CPUDT >= $G_ExtractBeginDate) AND
   (BKPF.CPUDT <= $G_ExtractEndDate)))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '228', "Output_Width_Name" = '159', "Output_Width_Type" = '97', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_BSEG', "ui_acta_from_schema_1" = 'Query_BKPF', "ui_display_name" = 'Query_JOIN', "ui_where_text" = 'Query_BSEG.HKONT not in (\'0000154201\',\'0000154202\',\'0000154203\',\'0000240003\',\'0000482013\',\'0000482014\',\'0000482017\',\'0000482018\',
\'0000482019\',\'0000482021\',\'0000482022\',\'0000482026\',\'0000482027\')




', "x" = '1496', "y" = '-490')
GUID::'035bf410-79c0-41b7-b1e3-c797501d75ec' CREATE VIEW Query_JOIN( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_BSEG.MANDT') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_BSEG.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_BSEG.BSEG_GJAHR') ,
 BSEG_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSEG.BSEG_BUZEI') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_BSEG.BSEG_KOART') ,
 BSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_BSEG.BSEG_MENGE') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BSEG.BSEG_EBELP') ,
 BSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_BSEG.BSEG_WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG.BUZID') ,
 MATNR VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_BSEG.MATNR') ,
 HKONT VARCHAR(10)  SET( "Description" = 'General Ledger Account', "ui_mapping_text" = 'Query_BSEG.HKONT') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.AW_BELNR') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_BKPF.AW_GJAHR')  )
 AS
SELECT Query_BSEG.MANDT, Query_BSEG.BSEG_BUKRS, Query_BSEG.BSEG_BELNR, Query_BSEG.BSEG_GJAHR, Query_BSEG.BSEG_BUZEI, Query_BSEG.BSEG_KOART, Query_BSEG.BSEG_MENGE, Query_BSEG.BSEG_EBELN, Query_BSEG.BSEG_EBELP, Query_BSEG.BSEG_WRBTR, Query_BSEG.BUZID, Query_BSEG.MATNR, Query_BSEG.HKONT, Query_BKPF.AW_BELNR, Query_BKPF.AW_GJAHR FROM Query_BKPF  __SAP_LEFT_OUTER_JOIN Query_BSEG  ON (((Query_BSEG.BSEG_BELNR = Query_BKPF.BELNR) AND
   (Query_BSEG.BSEG_GJAHR = Query_BKPF.GJAHR)) AND
   (Query_BSEG.BSEG_BUKRS = Query_BKPF.BUKRS))SET("ui_on_text" = 'Query_BSEG.BSEG_BELNR = Query_BKPF.BELNR and 
Query_BSEG.BSEG_GJAHR = Query_BKPF.GJAHR and 
Query_BSEG.BSEG_BUKRS = Query_BKPF.BUKRS 
')
 WHERE ( not Query_BSEG.HKONT IN ('0000154201','0000154202','0000154203','0000240003','0000482013','0000482014','0000482017','0000482018','0000482019','0000482021','0000482022','0000482026','0000482027'))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "ui_display_name" = 'DataTransport19060', "x" = '1988', "y" = '-791')
GUID::'4b784078-20ed-4b2e-b60c-5b9f0dfa9b23' FLOWOUTPUT FILE "LI_RSEG.dat" INPUT(Query_JOIN_ALL)
SET("abap_remote_data_file" = 'LI_RSEG.dat', "connection_port" = 'no', "loader_load_choice" = 'replace');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '187', "Output_Width_Type" = '91', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "abap_query" = 'y', "ui_acta_from_schema_0" = 'RSEG', "ui_display_name" = 'Query_RSEG', "ui_where_text" = 'RSEG.BUKRS = $G_CompanyCode and RSEG.XEKBZ <> \'X\'
#and RSEG.BUZEI = 1










', "x" = '877', "y" = '-792')
GUID::'719041e7-a6f5-4577-9188-1ecf0dd16b5f' CREATE VIEW Query_RSEG( RSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'RSEG.BUKRS') ,
 RSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'RSEG.BELNR') ,
 RSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'RSEG.GJAHR') ,
 RSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'RSEG.EBELN') ,
 RSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'RSEG.EBELP') ,
 RSEG_WRBTR DECIMAL(13, 3)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'RSEG.WRBTR + RSEG.BNKAN') ,
 RSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'RSEG.MENGE') ,
 RSEG_INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'RSEG.MENGE')  )
 AS
SELECT RSEG.BUKRS, RSEG.BELNR, RSEG.GJAHR, RSEG.EBELN, RSEG.EBELP, (RSEG.WRBTR + RSEG.BNKAN), RSEG.MENGE, RSEG.MENGE FROM RSEG  WHERE ((RSEG.BUKRS = $G_CompanyCode) AND
   (RSEG.XEKBZ != 'X'))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '260', "Output_Width_Mapping" = '85', "Output_Width_Name" = '188', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "abap_query" = 'y', "ui_acta_from_schema_0" = 'BSEG', "ui_display_name" = 'Query_BSEG', "ui_where_text" = 'BSEG.KOART = \'S\' and  BSEG.BUKRS = $G_CompanyCode and 
#(BSEG.BUZID = \'W\' AND BSEG.WRBTR <> 0) and 
BSEG.BUSTW <> \'RE10\' and 
BSEG.HKONT not in (\'0000154201\',\'0000154202\',\'0000154203\',\'0000240003\',\'0000482013\',\'0000482014\',\'0000482017\',\'0000482018\',
\'0000482019\',\'0000482021\',\'0000482022\',\'0000482026\',\'0000482027\')




', "x" = '893', "y" = '-491')
GUID::'d66bb2ca-7e8c-4308-8a08-2ba83398ebeb' CREATE VIEW Query_BSEG( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'BSEG.MANDT') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSEG.BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSEG.BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSEG.GJAHR') ,
 BSEG_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSEG.BUZEI') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'BSEG.KOART') ,
 BSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'BSEG.MENGE') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSEG.EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSEG.EBELP') ,
 BSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'BSEG.WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'BSEG.BUZID
#ifthenelse(BSEG.KOART = \'S\' and BSEG.BUZEI = \'2\' and BSEG.BUZID = \'\', \'W\', BSEG.BUZID)') ,
 MATNR VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'NVL(BSEG.MATNR,BSEG.SGTXT)') ,
 HKONT VARCHAR(10)  SET( "Description" = 'General Ledger Account', "ui_mapping_text" = 'BSEG.HKONT')  )
 AS
SELECT DISTINCT BSEG.MANDT, BSEG.BUKRS, BSEG.BELNR, BSEG.GJAHR, BSEG.BUZEI, BSEG.KOART, BSEG.MENGE, BSEG.EBELN, BSEG.EBELP, BSEG.WRBTR, BSEG.BUZID, nvl(BSEG.MATNR, BSEG.SGTXT), BSEG.HKONT FROM BSEG  WHERE ((((BSEG.KOART = 'S') AND
   (BSEG.BUKRS = $G_CompanyCode)) AND
   (BSEG.BUSTW != 'RE10')) AND
   ( not BSEG.HKONT IN ('0000154201','0000154202','0000154203','0000240003','0000482013','0000482014','0000482017','0000482018','0000482019','0000482021','0000482022','0000482026','0000482027')))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '208', "Input_Width_Type" = '91', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '193', "Output_Width_Type" = '118', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>316</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '54', "abap_query" = 'y', "ui_acta_from_schema_0" = 'Query_RSEG', "ui_acta_from_schema_1" = 'Query_JOIN', "ui_display_name" = 'Query_JOIN_ALL', "x" = '1499', "y" = '-792')
GUID::'80ca38a1-9119-4cec-8174-5cadbfd4670d' CREATE VIEW Query_JOIN_ALL( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_JOIN.MANDT') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_JOIN.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_JOIN.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_JOIN.BSEG_GJAHR') ,
 BSEG_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_JOIN.BSEG_BUZEI') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_JOIN.BSEG_KOART') ,
 BSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_JOIN.BSEG_MENGE') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_JOIN.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_JOIN.BSEG_EBELP') ,
 BSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_JOIN.BSEG_WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_JOIN.BUZID') ,
 MATNR VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_JOIN.MATNR') ,
 HKONT VARCHAR(10)  SET( "Description" = 'General Ledger Account', "ui_mapping_text" = 'Query_JOIN.HKONT') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_JOIN.AW_BELNR') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'Query_JOIN.AW_GJAHR') ,
 RSEG_INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'Query_RSEG.RSEG_WRBTR / Query_RSEG.RSEG_MENGE') ,
 RSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_RSEG.RSEG_WRBTR') ,
 RSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_RSEG.RSEG_MENGE')  )
 AS
SELECT Query_JOIN.MANDT, Query_JOIN.BSEG_BUKRS, Query_JOIN.BSEG_BELNR, Query_JOIN.BSEG_GJAHR, Query_JOIN.BSEG_BUZEI, Query_JOIN.BSEG_KOART, Query_JOIN.BSEG_MENGE, Query_JOIN.BSEG_EBELN, Query_JOIN.BSEG_EBELP, Query_JOIN.BSEG_WRBTR, Query_JOIN.BUZID, Query_JOIN.MATNR, Query_JOIN.HKONT, Query_JOIN.AW_BELNR, Query_JOIN.AW_GJAHR, (Query_RSEG.RSEG_WRBTR / Query_RSEG.RSEG_MENGE), Query_RSEG.RSEG_WRBTR, Query_RSEG.RSEG_MENGE FROM Query_JOIN  __SAP_LEFT_OUTER_JOIN Query_RSEG  ON (((((Query_RSEG.RSEG_BELNR = Query_JOIN.AW_BELNR) AND
   (Query_RSEG.RSEG_GJAHR = Query_JOIN.AW_GJAHR)) AND
   (Query_RSEG.RSEG_BUKRS = Query_JOIN.BSEG_BUKRS)) AND
   (Query_RSEG.RSEG_EBELN = Query_JOIN.BSEG_EBELN)) AND
   (Query_RSEG.RSEG_EBELP = Query_JOIN.BSEG_EBELP))SET("ui_on_text" = 'Query_RSEG.RSEG_BELNR = Query_JOIN.AW_BELNR and 
Query_RSEG.RSEG_GJAHR = Query_JOIN.AW_GJAHR and 
Query_RSEG.RSEG_BUKRS = Query_JOIN.BSEG_BUKRS and 
Query_RSEG.RSEG_EBELN = Query_JOIN.BSEG_EBELN and 
Query_RSEG.RSEG_EBELP = Query_JOIN.BSEG_EBELP ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '403', "y" = '-154')
GUID::'c148a132-529d-4b18-bd9e-09e0240ee0bc' READ TABLE SOURCE_SAP_LI."".BKPF OUTPUT(BKPF)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '401', "y" = '-491')
GUID::'d8ccee55-f0df-41b9-ac05-fef82f366353' READ TABLE SOURCE_SAP_LI."".BSEG OUTPUT(BSEG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '64', "x" = '412', "y" = '-791')
GUID::'f7bcb41d-a91b-4caf-ba78-7b923e4b5383' READ TABLE SOURCE_SAP_LI."".RSEG OUTPUT(RSEG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'no', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'SOURCE_SAP_LI', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = '<default>', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "sap_odp_cwf_delay" = '5', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
SET("abap_datastore" = 'SOURCE_SAP_LI', "abap_program_file" = 'ABAP_INVOICE_RSEG', "abap_program_name_in_r3" = 'Z_ABAP_INVOICE_RSEG', "abap_recoverable" = 'yes', "abap_row_limit" = '0', "cache" = 'no', "job_name" = 'J_ABAP_INVOICE_RSEG', "package_size" = '5000', "table_weight" = '0', "use_dataflow_links" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:48 2020', "ActaValue_3" = 'Tue Mar  9 05:14:54 2021', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW LI_DF_ETL_INVOICE::'f200f3b8-9758-4a55-aea8-4faec5820266'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>194</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '41', "x" = '81', "y" = '-469')
GUID::'e9ae5567-651a-4ea1-940a-c75fba82cf72' CALL TRANSFORM SQL() OUTPUT(SQL( BELNR VARCHAR(10) ,
 BUZEI DECIMAL(3, 0) ,
 BLDAT VARCHAR(10) ,
 INV_UPRICE DECIMAL(14, 4) ,
 WARES VARCHAR(5) ,
 INV_QTY DECIMAL(13, 3) ,
 WRBTR DECIMAL(13, 2) ,
 SHKZG VARCHAR(1) ,
 ZTERM VARCHAR(4) ,
 EBELN VARCHAR(10) ,
 EBELP DECIMAL(5, 0) ,
 BUKRS VARCHAR(4) ,
 BLART VARCHAR(2) ,
 LIFNR VARCHAR(10) ,
 EMATN VARCHAR(50) ,
 BUDAT VARCHAR(10) ,
 KNTTP VARCHAR(1) ,
 KNTTX VARCHAR(20) ,
 EPSTP VARCHAR(1) ,
 PTEXT VARCHAR(20) ,
 NETPR DECIMAL(11, 2) ,
 BEDAT VARCHAR(10) ,
 CPUDT VARCHAR(10) ,
 BUZID VARCHAR(1)  )
)
SET("array_fetch_size" = '1000', "cache" = 'no', "database_datastore" = 'TARGET_ODS', "sql_transform_configuration_enabled" = 'yes', "sql_transform_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<SQLTexts>
<SQLText database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2016">
<sql_text>with t1 as&#xD;&#xA;( select * from LI_SAP_EXTRACT_INVOICE_TEMP where BUZID=\'W\'&#xD;&#xA;            union all&#xD;&#xA;            select * from LI_SAP_EXTRACT_INVOICE_TEMP &#xD;&#xA;                        where BELNR not in (select belnr from LI_SAP_EXTRACT_INVOICE_TEMP where BUZID=\'w\')&#xD;&#xA;)&#xD;&#xA;, t2 as ( &#xD;&#xA;select x.lifnr \'LIFNR2\', z.lifnr \'LIFNR3\', t1.* from t1&#xD;&#xA;  left join (select distinct belnr, lifnr from t1 where EBELN &lt;&gt; \'\') x on t1.BELNR=x.BELNR&#xD;&#xA;  left join (select distinct belnr, ebeln, ebelp, lifnr from t1 where EBELN &lt;&gt; \'\') z on t1.BELNR=z.BELNR &#xD;&#xA;                                    and z.BELNR=x.BELNR&#xD;&#xA;                                    and t1.EBELN=z.EBELN and t1.EBELP=z.EBELP&#xD;&#xA;)&#xD;&#xA;select BELNR, BUZEI,BLDAT,INV_UPRICE,WARES,INV_QTY,WRBTR,SHKZG,ZTERM,EBELN,EBELP,BUKRS,BLART,&#xD;&#xA;            CASE WHEN LIFNR2=LIFNR3 THEN ISNULL(LIFNR2,LIFNR)&#xD;&#xA;            WHEN LIFNR2 &lt;&gt; LIFNR THEN LIFNR&#xD;&#xA;            WHEN LIFNR2 IS NULL AND LIFNR3 IS NULL THEN LIFNR &#xD;&#xA;            WHEN LIFNR2 IS NOT NULL AND LIFNR3 IS NULL THEN LIFNR2 ELSE LIFNR3 END AS \'LIFNR\',&#xD;&#xA;            EMATN,BUDAT,KNTTP,KNTTX,EPSTP,PTEXT,NETPR,BEDAT,CPUDT,BUZID&#xD;&#xA;from t2&#xD;&#xA;</sql_text>
</SQLText>
<SQLText database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<sql_text>with t1 as&#xD;&#xA;( select * from LI_SAP_EXTRACT_INVOICE_TEMP where BUZID=\'W\'&#xD;&#xA;&#x9;union all&#xD;&#xA;&#x9;select * from LI_SAP_EXTRACT_INVOICE_TEMP &#xD;&#xA;&#x9;&#x9;where BELNR not in (select belnr from LI_SAP_EXTRACT_INVOICE_TEMP where BUZID=\'w\')&#xD;&#xA;)&#xD;&#xA;, t2 as ( &#xD;&#xA;select x.lifnr \'LIFNR2\', z.lifnr \'LIFNR3\', t1.* from t1&#xD;&#xA;  left join (select distinct belnr, lifnr from t1 where EBELN &lt;&gt; \'\') x on t1.BELNR=x.BELNR&#xD;&#xA;  left join (select distinct belnr, ebeln, ebelp, lifnr from t1 where EBELN &lt;&gt; \'\') z on t1.BELNR=z.BELNR &#xD;&#xA;&#x9;&#x9;&#x9;and z.BELNR=x.BELNR&#xD;&#xA;&#x9;&#x9;&#x9;and t1.EBELN=z.EBELN and t1.EBELP=z.EBELP&#xD;&#xA;)&#xD;&#xA;select BELNR, BUZEI,BLDAT,INV_UPRICE,WARES,INV_QTY,WRBTR,SHKZG,ZTERM,EBELN,EBELP,BUKRS,BLART,&#xD;&#xA;&#x9;CASE WHEN LIFNR2=LIFNR3 THEN ISNULL(LIFNR2,LIFNR)&#xD;&#xA;&#x9;WHEN LIFNR2 &lt;&gt; LIFNR THEN LIFNR&#xD;&#xA;&#x9;WHEN LIFNR2 IS NULL AND LIFNR3 IS NULL THEN LIFNR &#xD;&#xA;&#x9;WHEN LIFNR2 IS NOT NULL AND LIFNR3 IS NULL THEN LIFNR2 ELSE LIFNR3 END AS \'LIFNR\',&#xD;&#xA;&#x9;EMATN,BUDAT,KNTTP,KNTTX,EPSTP,PTEXT,NETPR,BEDAT,CPUDT,BUZID&#xD;&#xA;from t2&#xD;&#xA;</sql_text>
</SQLText>
</SQLTexts>', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '41', "ui_acta_from_schema_0" = 'Case_Company_0200_0400', "ui_display_name" = 'Query_0200_0400', "ui_where_text" = '#SQL.BUZID <> \' \' and SQL.INV_UPRICE <> 0 and SQL.INV_QTY <> 0 and SQL.WRBTR <> 0








', "x" = '910', "y" = '-281')
GUID::'eb7eee5f-651d-4f3b-afdd-5fb4adb2c1df' CREATE VIEW Query_0200_0400( BELNR VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BELNR') ,
 BUZEI DECIMAL(3, 0)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BLDAT') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.ZTERM') ,
 EBELN VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.EBELN') ,
 EBELP DECIMAL(5, 0)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.EBELP') ,
 BUKRS VARCHAR(4)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BUKRS') ,
 BLART VARCHAR(2)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BLART') ,
 LIFNR VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.LIFNR') ,
 EMATN VARCHAR(50)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.EMATN') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BUDAT') ,
 KNTTP VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.NETPR') ,
 BEDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0200_0400.CPUDT')  )
 AS
SELECT Case_Company_0200_0400.BELNR, Case_Company_0200_0400.BUZEI, Case_Company_0200_0400.BLDAT, Case_Company_0200_0400.INV_UPRICE, Case_Company_0200_0400.WARES, Case_Company_0200_0400.INV_QTY, Case_Company_0200_0400.WRBTR, Case_Company_0200_0400.SHKZG, Case_Company_0200_0400.ZTERM, Case_Company_0200_0400.EBELN, Case_Company_0200_0400.EBELP, Case_Company_0200_0400.BUKRS, Case_Company_0200_0400.BLART, Case_Company_0200_0400.LIFNR, Case_Company_0200_0400.EMATN, Case_Company_0200_0400.BUDAT, Case_Company_0200_0400.KNTTP, Case_Company_0200_0400.KNTTX, Case_Company_0200_0400.EPSTP, Case_Company_0200_0400.PTEXT, Case_Company_0200_0400.NETPR, Case_Company_0200_0400.BEDAT, Case_Company_0200_0400.CPUDT FROM Case_Company_0200_0400 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("Case_Company_0003" = 'SQL.BUKRS = \'0003\'', "Case_Company_0200_0400" = 'SQL.BUKRS in (\'0200\',\'0400\')', "InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>291</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '41', "ui_acta_from_schema_0" = 'SQL', "ui_display_name" = 'Case_Company', "x" = '438', "y" = '-469')
GUID::'ee9058aa-13ef-4da2-916b-cb9f9274587c' CREATE VIEW Case_Company()
 AS
SELECT  FROM SQL  CASE (SQL.BUKRS = '0003') OUTPUT Case_Company_0003 , SQL.BUKRS IN ('0200','0400') OUTPUT Case_Company_0200_0400
SET("Mutually_Exclusive" = 'yes', "Preserve_Expression_Order" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>241</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '41', "ui_acta_from_schema_0" = 'Case_Company_0003', "ui_display_name" = 'Query_0003', "x" = '921', "y" = '-653')
GUID::'7ab55183-d926-43bc-90c5-530c5f45f963' CREATE VIEW Query_0003( BELNR VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.BELNR') ,
 BUZEI DECIMAL(3, 0)  SET( "ui_mapping_text" = 'Case_Company_0003.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.BLDAT') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Case_Company_0003.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "ui_mapping_text" = 'Case_Company_0003.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "ui_mapping_text" = 'Case_Company_0003.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "ui_mapping_text" = 'Case_Company_0003.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0003.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "ui_mapping_text" = 'Case_Company_0003.ZTERM') ,
 EBELN VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.EBELN') ,
 EBELP DECIMAL(5, 0)  SET( "ui_mapping_text" = 'Case_Company_0003.EBELP') ,
 BUKRS VARCHAR(4)  SET( "ui_mapping_text" = 'Case_Company_0003.BUKRS') ,
 BLART VARCHAR(2)  SET( "ui_mapping_text" = 'Case_Company_0003.BLART') ,
 LIFNR VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.LIFNR') ,
 EMATN VARCHAR(50)  SET( "ui_mapping_text" = 'Case_Company_0003.EMATN') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.BUDAT') ,
 KNTTP VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0003.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "ui_mapping_text" = 'Case_Company_0003.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "ui_mapping_text" = 'Case_Company_0003.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "ui_mapping_text" = 'Case_Company_0003.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "ui_mapping_text" = 'Case_Company_0003.NETPR') ,
 BEDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "ui_mapping_text" = 'Case_Company_0003.CPUDT')  )
 AS
SELECT DISTINCT Case_Company_0003.BELNR, Case_Company_0003.BUZEI, Case_Company_0003.BLDAT, Case_Company_0003.INV_UPRICE, Case_Company_0003.WARES, Case_Company_0003.INV_QTY, Case_Company_0003.WRBTR, Case_Company_0003.SHKZG, Case_Company_0003.ZTERM, Case_Company_0003.EBELN, Case_Company_0003.EBELP, Case_Company_0003.BUKRS, Case_Company_0003.BLART, Case_Company_0003.LIFNR, Case_Company_0003.EMATN, Case_Company_0003.BUDAT, Case_Company_0003.KNTTP, Case_Company_0003.KNTTX, Case_Company_0003.EPSTP, Case_Company_0003.PTEXT, Case_Company_0003.NETPR, Case_Company_0003.BEDAT, Case_Company_0003.CPUDT FROM Case_Company_0003 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '41', "x" = '1369', "y" = '-453')
GUID::'da0a468d-51b3-4696-871f-85c25f30229d' CALL TRANSFORM Merge() INPUT(Query_0003, Query_0200_0400) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>410</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '41', "ui_acta_from_schema_0" = 'Merge', "ui_acta_from_schema_1" = 'Query_PLANT', "ui_display_name" = 'Query_FINAL_EXTRACT', "x" = '1746', "y" = '-453')
GUID::'856787f5-b176-4954-a5db-be844c6b06f0' CREATE VIEW Query_FINAL_EXTRACT( BELNR VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.BELNR') ,
 BUZEI DECIMAL(3, 0)  SET( "ui_mapping_text" = 'Merge.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.BLDAT') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Merge.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "ui_mapping_text" = 'Merge.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "ui_mapping_text" = 'Merge.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "ui_mapping_text" = 'Merge.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "ui_mapping_text" = 'Merge.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "ui_mapping_text" = 'Merge.ZTERM') ,
 EBELN VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.EBELN') ,
 EBELP DECIMAL(5, 0)  SET( "ui_mapping_text" = 'Merge.EBELP') ,
 BUKRS VARCHAR(4)  SET( "ui_mapping_text" = 'Merge.BUKRS') ,
 BLART VARCHAR(2)  SET( "ui_mapping_text" = 'Merge.BLART') ,
 LIFNR VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.LIFNR') ,
 EMATN VARCHAR(50)  SET( "ui_mapping_text" = 'Merge.EMATN') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.BUDAT') ,
 KNTTP VARCHAR(1)  SET( "ui_mapping_text" = 'Merge.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "ui_mapping_text" = 'Merge.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "ui_mapping_text" = 'Merge.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "ui_mapping_text" = 'Merge.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "ui_mapping_text" = 'Merge.NETPR') ,
 BEDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "ui_mapping_text" = 'Merge.CPUDT') ,
 PURCHASING_ORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_PLANT.PURCHASING_ORG') ,
 PLANT_CODE VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_PLANT.PLANT_CODE') ,
 PLANT_NAME VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_PLANT.PLANT_NAME') ,
 STORAGE_LOC VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_PLANT.STORAGE_LOC') ,
 STORAGE_LOC_DESC VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'Query_PLANT.STORAGE_LOC_DESC') ,
 VENDOR_REF VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_PLANT.VENDOR_REF') ,
 REFERENCE_DOC VARCHAR(20)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_PLANT.REFERENCE_DOC')  )
 AS
SELECT Merge.BELNR, Merge.BUZEI, Merge.BLDAT, Merge.INV_UPRICE, Merge.WARES, Merge.INV_QTY, Merge.WRBTR, Merge.SHKZG, Merge.ZTERM, Merge.EBELN, Merge.EBELP, Merge.BUKRS, Merge.BLART, Merge.LIFNR, Merge.EMATN, Merge.BUDAT, Merge.KNTTP, Merge.KNTTX, Merge.EPSTP, Merge.PTEXT, Merge.NETPR, Merge.BEDAT, Merge.CPUDT, Query_PLANT.PURCHASING_ORG, Query_PLANT.PLANT_CODE, Query_PLANT.PLANT_NAME, Query_PLANT.STORAGE_LOC, Query_PLANT.STORAGE_LOC_DESC, Query_PLANT.VENDOR_REF, Query_PLANT.REFERENCE_DOC FROM Merge  __SAP_LEFT_OUTER_JOIN Query_PLANT  ON ((((Query_PLANT.INVOICE_NUM = Merge.BELNR) AND
   (Query_PLANT.INVOICE_LINE_NUM = Merge.BUZEI)) AND
   (Query_PLANT.PO_NUM = Merge.EBELN)) AND
   (Query_PLANT.PO_LINE_NUM = Merge.EBELP))SET("ui_on_text" = 'Query_PLANT.INVOICE_NUM = Merge.BELNR and 
Query_PLANT.INVOICE_LINE_NUM = Merge.BUZEI and 
Query_PLANT.PO_NUM = Merge.EBELN and 
Query_PLANT.PO_LINE_NUM = Merge.EBELP ')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>410</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "x" = '2803', "y" = '-771')
GUID::'7612b2bd-78c3-4634-83be-cbedcb379933' LOAD TABLE TARGET_ODS.DBO.TINVOICE INPUT(Query_FINAL_LOAD)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2016">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'TARGET_ODS', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '37', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '197', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '46', "Output_Column_Width_5" = '53', "Output_Width_Decsription" = '62', "Output_Width_Mapping" = '206', "Output_Width_Name" = '256', "Output_Width_Type" = '85', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>366</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '71', "ui_acta_from_schema_0" = 'Query_Variables', "ui_display_name" = 'Query_FINAL_LOAD', "x" = '2256', "y" = '-772')
GUID::'a1b19b3f-fc2d-40e5-b1ea-bf552f2354c3' CREATE VIEW Query_FINAL_LOAD( INVCOBJID VARCHAR(50)  KEY  SET( "ui_mapping_text" = 'Query_Variables.TINVOICE_OBJID', "ui_pasting" = 'Query_Variables.TINVOICE_OBJID') ,
 SITEID VARCHAR(5)  SET( "ui_mapping_text" = 'Query_Variables.SID', "ui_pasting" = 'Query_Variables.SID') ,
 RUNID VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.XNUM', "ui_pasting" = 'Query_Variables.XNUM') ,
 RUNLINENUM INT  SET( "ui_mapping_text" = 'gen_row_num( )', "ui_pasting" = 'gen_row_num( )') ,
 EAISTATUS VARCHAR(50)  SET( "ui_mapping_text" = '\'0\'', "ui_pasting" = '\'0\'') ,
 DWSTATUS VARCHAR(50)  SET( "ui_mapping_text" = 'NULL
#\'0\'', "ui_pasting" = 'NULL
#\'0\'') ,
 INVOICENUM VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.BELNR', "ui_pasting" = 'Query_Variables.BELNR') ,
 INVOICELINEITEM VARCHAR(50)  SET( "ui_mapping_text" = 'lpad(Query_Variables.BUZEI,3,\'0\')', "ui_pasting" = 'lpad(Query_Variables.BUZEI,3,\'0\')') ,
 INVCDATE DATETIME(9)  SET( "ui_mapping_text" = 'to_date(Query_Variables.BLDAT,\'MM/DD/YYYY\')
#to_date(Query_Variables.BLDAT,\'YYYYMMDD\')', "ui_pasting" = 'to_date(Query_Variables.BLDAT,\'YYYYMMDD\')') ,
 UNITPRICE DECIMAL(14, 6)  SET( "ui_mapping_text" = 'nvl(Query_Variables.INV_UPRICE,0)', "ui_pasting" = 'nvl(Query_Variables.INV_UPRICE,0)') ,
 CURCODE VARCHAR(5)  SET( "ui_mapping_text" = 'Query_Variables.WARES', "ui_pasting" = 'Query_Variables.WARES') ,
 QTY DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Query_Variables.INV_QTY', "ui_pasting" = 'Query_Variables.INV_QTY') ,
 AMTDOCCUR DECIMAL(21, 6)  SET( "ui_mapping_text" = 'nvl(Query_Variables.WRBTR,0)', "ui_pasting" = 'nvl(Query_Variables.WRBTR,0)') ,
 INVCDEBITCREDIT VARCHAR(25)  SET( "ui_mapping_text" = 'Query_Variables.SHKZG', "ui_pasting" = 'Query_Variables.SHKZG') ,
 PAYMENTTERM VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.ZTERM', "ui_pasting" = 'Query_Variables.ZTERM') ,
 PONUM VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.EBELN', "ui_pasting" = 'Query_Variables.EBELN') ,
 POLINEITEM VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.EBELP
#lpad(Query_Variables.EBELP,5,\'0\')', "ui_pasting" = 'lpad(Query_Variables.EBELP,5,\'0\')') ,
 COMPANYCODE VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.BUKRS', "ui_pasting" = 'Query_Variables.BUKRS') ,
 INVCDOCTYPE VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.BLART', "ui_pasting" = 'Query_Variables.BLART') ,
 VENDORORIGINALID VARCHAR(50)  SET( "ui_mapping_text" = 'ifthenelse(Query_Variables.BUKRS = \'0400\', ltrim(Query_Variables.LIFNR,\'0\'),Query_Variables.LIFNR)', "ui_pasting" = 'ifthenelse(Query_Variables.BUKRS = \'0400\', ltrim(Query_Variables.LIFNR,\'0\'),Query_Variables.LIFNR)') ,
 LOADID INT  SET( "ui_mapping_text" = 'null', "ui_pasting" = 'null') ,
 PartNumber VARCHAR(50)  SET( "ui_mapping_text" = 'nvl(Query_Variables.EMATN,\'\')', "ui_pasting" = 'nvl(Query_Variables.EMATN,\'\')') ,
 PurchaseInvoicePostingDate DATETIME(9)  SET( "ui_mapping_text" = 'to_date(Query_Variables.BUDAT,\'MM/DD/YYYY\')
#to_date(Query_Variables.BUDAT,\'YYYYMMDD\')', "ui_pasting" = 'to_date(Query_Variables.BUDAT,\'YYYYMMDD\')') ,
 PurchaseInvoiceCreateDate DATETIME(9)  SET( "ui_mapping_text" = 'to_date(Query_Variables.CPUDT,\'MM/DD/YYYY\')
#to_date(Query_Variables.CPUDT,\'YYYYMMDD\')
#to_date(Query_Variables.BLDAT,\'YYYYMMDD\')', "ui_pasting" = 'to_date(Query_Variables.CPUDT,\'YYYYMMDD\')
#to_date(Query_Variables.BLDAT,\'YYYYMMDD\')') ,
 POLineTypeAccountAssignment VARCHAR(80)  SET( "ui_mapping_text" = 'Query_Variables.KNTTP', "ui_pasting" = 'Query_Variables.KNTTP') ,
 POLineTypeAccountAssignmentDesc VARCHAR(250)  SET( "ui_mapping_text" = 'Query_Variables.KNTTX', "ui_pasting" = 'Query_Variables.KNTTX') ,
 POLineItemcategorycode VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.EPSTP', "ui_pasting" = 'Query_Variables.EPSTP') ,
 POLineItemcategorycodeDesc VARCHAR(250)  SET( "ui_mapping_text" = 'Query_Variables.PTEXT', "ui_pasting" = 'Query_Variables.PTEXT') ,
 POLinePrice DECIMAL(21, 6)  SET( "ui_mapping_text" = 'Query_Variables.NETPR', "ui_pasting" = 'Query_Variables.NETPR') ,
 PODocumentDate DATETIME(9)  SET( "ui_mapping_text" = 'to_date(Query_Variables.BEDAT,\'MM/DD/YYYY\')
#ifthenelse( to_date(Query_Variables.BEDAT,\'MM/DD/YYYY\') is null, \'1900.01.01\',to_date(Query_Variables.BEDAT,\'MM/DD/YYYY\'))
#ifthenelse( to_date(Query_Variables.BEDAT,\'YYYYMMDD\') is null, \'1900.01.01\',to_date(Query_Variables.BEDAT,\'YYYYMMDD\'))', "ui_pasting" = 'to_date(Query_Variables.BEDAT,\'YYYYMMDD\')') ,
 PURCHASINGORG VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.PURCHASING_ORG') ,
 PLANTCODE VARCHAR(255)  SET( "ui_mapping_text" = 'Query_Variables.PLANT_CODE') ,
 STORAGELOCATION VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.STORAGE_LOC') ,
 STORAGELOCATIONDESC VARCHAR(255)  SET( "ui_mapping_text" = 'Query_Variables.STORAGE_LOC_DESC') ,
 VENDORREFERENCENO VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.VENDOR_REF') ,
 REFERENCEDOCUMENTNO VARCHAR(50)  SET( "ui_mapping_text" = 'Query_Variables.REFERENCE_DOC')  )
 AS
SELECT Query_Variables.TINVOICE_OBJID, Query_Variables.SID, Query_Variables.XNUM, gen_row_num(), '0',  NULL , Query_Variables.BELNR, lpad(Query_Variables.BUZEI, 3, '0'), to_date(Query_Variables.BLDAT, 'MM/DD/YYYY'), nvl(Query_Variables.INV_UPRICE, 0), Query_Variables.WARES, Query_Variables.INV_QTY, nvl(Query_Variables.WRBTR, 0), Query_Variables.SHKZG, Query_Variables.ZTERM, Query_Variables.EBELN, Query_Variables.EBELP, Query_Variables.BUKRS, Query_Variables.BLART, ifthenelse((Query_Variables.BUKRS = '0400'), ltrim(Query_Variables.LIFNR, '0'), Query_Variables.LIFNR),  NULL , nvl(Query_Variables.EMATN, ''), to_date(Query_Variables.BUDAT, 'MM/DD/YYYY'), to_date(Query_Variables.CPUDT, 'MM/DD/YYYY'), Query_Variables.KNTTP, Query_Variables.KNTTX, Query_Variables.EPSTP, Query_Variables.PTEXT, Query_Variables.NETPR, to_date(Query_Variables.BEDAT, 'MM/DD/YYYY'), Query_Variables.PURCHASING_ORG, Query_Variables.PLANT_CODE, Query_Variables.STORAGE_LOC, Query_Variables.STORAGE_LOC_DESC, Query_Variables.VENDOR_REF, Query_Variables.REFERENCE_DOC FROM Query_Variables 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '215', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '254', "Output_Width_Name" = '177', "Output_Width_Type" = '121', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>310</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Query_FINAL_EXTRACT', "ui_display_name" = 'Query_Variables', "x" = '1759', "y" = '-771')
GUID::'4994daa8-0bb5-4e5f-b6d8-dbf636ffd1bd' CREATE VIEW Query_Variables( SID VARCHAR(5)  SET( "ui_mapping_text" = '$G_SiteID', "ui_pasting" = '$G_SiteID') ,
 XTYPE VARCHAR(1)  SET( "ui_mapping_text" = '$G_ExtractType', "ui_pasting" = '$G_ExtractType') ,
 MAXRETURN INT  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 LANGUAGE VARCHAR(4)  SET( "ui_mapping_text" = '$G_Language', "ui_pasting" = '$G_Language') ,
 XNUM VARCHAR(50)  SET( "ui_mapping_text" = '$G_RunID', "ui_pasting" = '$G_RunID') ,
 EXTRACT_DATE DATETIME(9)  SET( "ui_mapping_text" = '$G_RunDateTime', "ui_pasting" = '$G_RunDateTime') ,
 TINVOICE_OBJID VARCHAR(50)  SET( "ui_mapping_text" = '$G_SiteID || gen_uuid( )', "ui_pasting" = '$G_SiteID || gen_uuid( )') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_FINAL_EXTRACT.BELNR', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_FINAL_EXTRACT.BUZEI', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'NVL(Query_FINAL_EXTRACT.BLDAT,0)', "ui_pasting" = 'NVL(LI_SAP_EXTRACT_INVOICE.BLDAT,0)') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.INV_UPRICE', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_FINAL_EXTRACT.WARES', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_FINAL_EXTRACT.INV_QTY', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_FINAL_EXTRACT.WRBTR', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_FINAL_EXTRACT.SHKZG', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_FINAL_EXTRACT.ZTERM', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_FINAL_EXTRACT.EBELN', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_FINAL_EXTRACT.EBELP', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_FINAL_EXTRACT.BUKRS', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_FINAL_EXTRACT.BLART', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_FINAL_EXTRACT.LIFNR', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.LIFNR') ,
 EMATN VARCHAR(50)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.EMATN', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.EMATN') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.BUDAT', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BUDAT') ,
 KNTTP VARCHAR(1)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.KNTTP', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.KNTTX', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.EPSTP', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.PTEXT', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.NETPR', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.NETPR') ,
 BEDAT VARCHAR(10)  SET( "ui_mapping_text" = 'ifthenelse(Query_FINAL_EXTRACT.BEDAT = \'\', \'01/01/1900\', Query_FINAL_EXTRACT.BEDAT)
#Query_FINAL_EXTRACT.BEDAT', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "ui_mapping_text" = 'Query_FINAL_EXTRACT.CPUDT', "ui_pasting" = 'LI_SAP_EXTRACT_INVOICE.CPUDT') ,
 PURCHASING_ORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Query_FINAL_EXTRACT.PURCHASING_ORG') ,
 PLANT_CODE VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Query_FINAL_EXTRACT.PLANT_CODE') ,
 PLANT_NAME VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Query_FINAL_EXTRACT.PLANT_NAME') ,
 STORAGE_LOC VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Query_FINAL_EXTRACT.STORAGE_LOC') ,
 STORAGE_LOC_DESC VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'Query_FINAL_EXTRACT.STORAGE_LOC_DESC') ,
 VENDOR_REF VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Query_FINAL_EXTRACT.VENDOR_REF') ,
 REFERENCE_DOC VARCHAR(20)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Query_FINAL_EXTRACT.REFERENCE_DOC')  )
 AS
SELECT $G_SiteID, $G_ExtractType,  NULL , $G_Language, $G_RunID, $G_RunDateTime, ($G_SiteID || gen_uuid()), Query_FINAL_EXTRACT.BELNR, Query_FINAL_EXTRACT.BUZEI, nvl(Query_FINAL_EXTRACT.BLDAT, 0), Query_FINAL_EXTRACT.INV_UPRICE, Query_FINAL_EXTRACT.WARES, Query_FINAL_EXTRACT.INV_QTY, Query_FINAL_EXTRACT.WRBTR, Query_FINAL_EXTRACT.SHKZG, Query_FINAL_EXTRACT.ZTERM, Query_FINAL_EXTRACT.EBELN, Query_FINAL_EXTRACT.EBELP, Query_FINAL_EXTRACT.BUKRS, Query_FINAL_EXTRACT.BLART, Query_FINAL_EXTRACT.LIFNR, Query_FINAL_EXTRACT.EMATN, Query_FINAL_EXTRACT.BUDAT, Query_FINAL_EXTRACT.KNTTP, Query_FINAL_EXTRACT.KNTTX, Query_FINAL_EXTRACT.EPSTP, Query_FINAL_EXTRACT.PTEXT, Query_FINAL_EXTRACT.NETPR, ifthenelse((Query_FINAL_EXTRACT.BEDAT = ''), '01/01/1900', Query_FINAL_EXTRACT.BEDAT), Query_FINAL_EXTRACT.CPUDT, Query_FINAL_EXTRACT.PURCHASING_ORG, Query_FINAL_EXTRACT.PLANT_CODE, Query_FINAL_EXTRACT.PLANT_NAME, Query_FINAL_EXTRACT.STORAGE_LOC, Query_FINAL_EXTRACT.STORAGE_LOC_DESC, Query_FINAL_EXTRACT.VENDOR_REF, Query_FINAL_EXTRACT.REFERENCE_DOC FROM Query_FINAL_EXTRACT 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '215', "y" = '-968')
GUID::'e6143c14-09a9-4d3f-be40-36662d45702f' CALL ABAP_PROGRAM LI_ABAP_INVOICE_DELTA_BSAK_PLANT::'09cdcac6-25f7-48e3-a22d-682c17095449'() OUTPUT(LI_ABAP_INVOICE_DELTA_BSAK_PLANT);

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>269</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "ui_acta_from_schema_0" = 'Merge_PLANT', "ui_display_name" = 'Query_PLANT', "x" = '1178', "y" = '-1129')
GUID::'62870272-dab9-4a24-b645-800b9b1ac1ef' CREATE VIEW Query_PLANT( INVOICE_NUM VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Merge_PLANT.INVOICE_NUM') ,
 INVOICE_LINE_NUM NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Merge_PLANT.INVOICE_LINE_NUM') ,
 PO_NUM VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Merge_PLANT.PO_NUM') ,
 PO_LINE_NUM NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Merge_PLANT.PO_LINE_NUM') ,
 PURCHASING_ORG VARCHAR(4)  SET( "Description" = 'Purchasing Organization', "ui_mapping_text" = 'Merge_PLANT.PURCHASING_ORG') ,
 PLANT_CODE VARCHAR(4)  SET( "Description" = 'Plant', "ui_mapping_text" = 'Merge_PLANT.PLANT_CODE') ,
 PLANT_NAME VARCHAR(30)  SET( "Description" = 'Name', "ui_mapping_text" = 'Merge_PLANT.PLANT_NAME') ,
 STORAGE_LOC VARCHAR(4)  SET( "Description" = 'Storage Location', "ui_mapping_text" = 'Merge_PLANT.STORAGE_LOC') ,
 STORAGE_LOC_DESC VARCHAR(16)  SET( "Description" = 'Description of Storage Location', "ui_mapping_text" = 'Merge_PLANT.STORAGE_LOC_DESC') ,
 VENDOR_REF VARCHAR(16)  SET( "Description" = 'Reference Document Number', "ui_mapping_text" = 'Merge_PLANT.VENDOR_REF') ,
 REFERENCE_DOC VARCHAR(20)  SET( "Description" = 'Assignment Number', "ui_mapping_text" = 'Merge_PLANT.REFERENCE_DOC') ,
 BSEG_BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Merge_PLANT.BSEG_BUZID') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Merge_PLANT.BSEG_KOART')  )
 AS
SELECT Merge_PLANT.INVOICE_NUM, Merge_PLANT.INVOICE_LINE_NUM, Merge_PLANT.PO_NUM, Merge_PLANT.PO_LINE_NUM, Merge_PLANT.PURCHASING_ORG, Merge_PLANT.PLANT_CODE, Merge_PLANT.PLANT_NAME, Merge_PLANT.STORAGE_LOC, Merge_PLANT.STORAGE_LOC_DESC, Merge_PLANT.VENDOR_REF, Merge_PLANT.REFERENCE_DOC, Merge_PLANT.BSEG_BUZID, Merge_PLANT.BSEG_KOART FROM Merge_PLANT 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>407</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "x" = '1537', "y" = '-1320')
GUID::'c27f982c-91e7-4529-843f-240fad9c33f6' LOAD TABLE TARGET_ODS.DBO.TEMP_RIZ_INV_PLANT INPUT(Query_PLANT)
SET("connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2016">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'yes', "name" = 'TARGET_ODS', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '210', "y" = '-1296')
GUID::'455c0095-0e56-4166-9cb5-6e1335c8d4a1' CALL ABAP_PROGRAM LI_ABAP_INVOICE_DELTA_BSIK_PLANT::'42ad41c3-44e4-40af-abb3-b867282ca37a'() OUTPUT(LI_ABAP_INVOICE_DELTA_BSIK_PLANT);

ALGUIComment ("InputSchema_WidthProp" = '49', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>269</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "ui_display_name" = 'Merge_PLANT', "x" = '696', "y" = '-1127')
GUID::'8c796504-985f-4df9-a93b-92ac61143ac0' CALL TRANSFORM Merge() INPUT(LI_ABAP_INVOICE_DELTA_BSAK_PLANT, LI_ABAP_INVOICE_DELTA_BSIK_PLANT) OUTPUT(Merge_PLANT()
);

END
 SET ("Audit" = '<?xml version="1.0" encoding="UTF-8"?>
<Audit>
<AuditObjects>
<AuditObject AuditPointType="1" SchemaType="0" ObjGUID1="7612b2bd-78c3-4634-83be-cbedcb379933" SchemaName="" ColumnName="" >
<AuditLabel LableMapName="" AuditType="1" LabelDataType="int" Precision="0" Scale="0" >$Count_TINVOICE</AuditLabel>
<AuditLabel LableMapName="" AuditType="2" LabelDataType="int" >$CountError_TINVOICE</AuditLabel>
</AuditObject>
<AuditObject AuditPointType="1" SchemaType="0" ObjGUID1="856787f5-b176-4954-a5db-be844c6b06f0" SchemaName="" ColumnName="" >
<AuditLabel LableMapName="" AuditType="1" LabelDataType="int" Precision="0" Scale="0" >$Count_Query_FINAL_EXTRACT</AuditLabel>
<AuditLabel LableMapName="" AuditType="2" LabelDataType="int" >$CountError_Query_FINAL_EXTRACT</AuditLabel>
</AuditObject>
</AuditObjects>
<AuditRules>
<AuditRule RuleType="1">
<UIValue1>$Count_Query_FINAL_EXTRACT</UIValue1>
<UIValue2>=</UIValue2>
<UIValue3>$Count_TINVOICE</UIValue3>
<Custom>$Count_Query_FINAL_EXTRACT = $Count_TINVOICE</Custom>
</AuditRule>
</AuditRules>
<Notifications>
<RaiseException Enabled="true" >
</RaiseException>
<Mail Enabled="false" ></Mail>
<Script Enabled="true" >$G_SAPRecordCount = $Count_Query_FINAL_EXTRACT;</Script>
</Notifications>
</Audit>
', "Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ANNOTATION_0" = 'ALGUICOMMENT( x = \'6116\', y = \'-950\',ObjectDesc=\'DATE CONVERSION\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-6116</X><Y>950</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>175</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:48 2020', "ActaValue_3" = 'Thu Mar  4 02:38:43 2021', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW LI_DF_GET_SAP_INVOICE::'52ae8c67-cd06-4899-8242-d273f000381c'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '196', "Input_Width_Name" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '133', "Output_Width_Name" = '157', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '58', "ui_acta_from_schema_0" = 'BSIK_BSAK', "x" = '821', "y" = '-407')
GUID::'2c63df5f-6f1b-4047-acaf-b332baeba27c' CREATE VIEW Query( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'BSIK_BSAK.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'BSIK_BSAK.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'BSIK_BSAK.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'BSIK_BSAK.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'BSIK_BSAK.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'BSIK_BSAK.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'BSIK_BSAK.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'BSIK_BSAK.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'BSIK_BSAK.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'BSIK_BSAK.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'BSIK_BSAK.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'BSIK_BSAK.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'BSIK_BSAK.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'BSIK_BSAK.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'BSIK_BSAK.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'BSIK_BSAK.CPUDT')  )
 AS
SELECT BSIK_BSAK.MANDT, BSIK_BSAK.BUKRS, BSIK_BSAK.LIFNR, BSIK_BSAK.GJAHR, BSIK_BSAK.BELNR, BSIK_BSAK.BUZEI, BSIK_BSAK.BLDAT, BSIK_BSAK.WAERS, BSIK_BSAK.BLART, BSIK_BSAK.SHKZG, BSIK_BSAK.WRBTR, BSIK_BSAK.EBELN, BSIK_BSAK.EBELP, BSIK_BSAK.ZTERM, BSIK_BSAK.BUDAT, BSIK_BSAK.CPUDT FROM BSIK_BSAK 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '62', "ui_display_name" = 'BSIK_BSAK', "x" = '481', "y" = '-406')
GUID::'3d05c660-6e19-419a-ad01-9f291b5ffdad' CALL TRANSFORM Merge() INPUT(LI_ABAP_INVOICE_BSAK, LI_ABAP_INVOICE_BSIK) OUTPUT(BSIK_BSAK()
);

ALGUIComment ("Case_Case_1000" = 'Query.BUKRS = \'1000\'', "Case_Case_EGS1_PEB1" = 'Query.BUKRS IN (\'EGS1\', \'PEBI1\') AND ( (substr(LIFNR, 4, 1) = \'9\') OR (substr(LIFNR, 3, 1) = \'9\') OR (substr(LIFNR, 2, 1) = \'9\') OR (substr(LIFNR, 1, 1) = \'9\') OR (substr(LIFNR, 4, 1) = \'3\'))', "Case_Case_GERMANY" = 'Query.BUKRS IN (\'0001\', \'0400\', \'0003\', \'0200\')', "Case_Case_OPPH" = 'Query.BUKRS = \'OPPH\' AND ((substr(LIFNR, 4, 1) = \'9\') OR (substr(LIFNR, 3, 1) = \'9\') OR (substr(LIFNR, 2, 1) = \'9\') OR (substr(LIFNR, 1, 1) = \'9\'))', "Case_Case_US80" = 'Query.BUKRS = \'US80\'', "Case_default" = 'DEFAULT', "InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '278', "Input_Width_Name" = '220', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '32', "ui_acta_from_schema_0" = 'Query', "x" = '837', "y" = '-727')
GUID::'22a1b261-ace2-434f-9ae0-4e9a6cb6b041' CREATE VIEW "Case"()
 AS
SELECT  FROM Query  CASE (Query.BUKRS IN ('EGS1','PEBI1') AND
   (  (((((substr(LIFNR, 4, 1) = '9') OR
   (substr(LIFNR, 3, 1) = '9')) OR
   (substr(LIFNR, 2, 1) = '9')) OR
   (substr(LIFNR, 1, 1) = '9')) OR
   (substr(LIFNR, 4, 1) = '3'))  )) OUTPUT Case_Case_EGS1_PEB1 , Query.BUKRS IN ('0001','0400','0003','0200') OUTPUT Case_Case_GERMANY , (Query.BUKRS = '1000') OUTPUT Case_Case_1000 , ((Query.BUKRS = 'OPPH') AND
   (  ((((substr(LIFNR, 4, 1) = '9') OR
   (substr(LIFNR, 3, 1) = '9')) OR
   (substr(LIFNR, 2, 1) = '9')) OR
   (substr(LIFNR, 1, 1) = '9'))  )) OUTPUT Case_Case_OPPH , (Query.BUKRS = 'US80') OUTPUT Case_Case_US80 ,  DEFAULT  OUTPUT Case_default
SET("Mutually_Exclusive" = 'yes', "Preserve_Expression_Order" = 'yes')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '179', "Output_Width_Name" = '194', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Case_Case_EGS1_PEB1', "ui_display_name" = 'Query_EGS1_PEB1', "x" = '1581', "y" = '-230')
GUID::'afa2170f-498f-4e94-8ea3-b12aab7ca5c5' CREATE VIEW Query_EGS1_PEB1( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_Case_EGS1_PEB1.CPUDT')  )
 AS
SELECT Case_Case_EGS1_PEB1.MANDT, Case_Case_EGS1_PEB1.BUKRS, Case_Case_EGS1_PEB1.LIFNR, Case_Case_EGS1_PEB1.GJAHR, Case_Case_EGS1_PEB1.BELNR, Case_Case_EGS1_PEB1.BUZEI, Case_Case_EGS1_PEB1.BLDAT, Case_Case_EGS1_PEB1.WAERS, Case_Case_EGS1_PEB1.BLART, Case_Case_EGS1_PEB1.SHKZG, Case_Case_EGS1_PEB1.WRBTR, Case_Case_EGS1_PEB1.EBELN, Case_Case_EGS1_PEB1.EBELP, Case_Case_EGS1_PEB1.ZTERM, Case_Case_EGS1_PEB1.BUDAT, Case_Case_EGS1_PEB1.CPUDT FROM Case_Case_EGS1_PEB1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Case_Case_GERMANY', "ui_display_name" = 'Query_0001_0002', "x" = '1577', "y" = '-469')
GUID::'70a3f155-d8b6-4bcc-8406-ba25c39bec70' CREATE VIEW Query_0001_0002( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_Case_GERMANY.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_Case_GERMANY.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_Case_GERMANY.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_Case_GERMANY.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_Case_GERMANY.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_Case_GERMANY.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_Case_GERMANY.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_Case_GERMANY.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_Case_GERMANY.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_Case_GERMANY.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_Case_GERMANY.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_Case_GERMANY.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_Case_GERMANY.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_Case_GERMANY.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_Case_GERMANY.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_Case_GERMANY.CPUDT')  )
 AS
SELECT Case_Case_GERMANY.MANDT, Case_Case_GERMANY.BUKRS, Case_Case_GERMANY.LIFNR, Case_Case_GERMANY.GJAHR, Case_Case_GERMANY.BELNR, Case_Case_GERMANY.BUZEI, Case_Case_GERMANY.BLDAT, Case_Case_GERMANY.WAERS, Case_Case_GERMANY.BLART, Case_Case_GERMANY.SHKZG, Case_Case_GERMANY.WRBTR, Case_Case_GERMANY.EBELN, Case_Case_GERMANY.EBELP, Case_Case_GERMANY.ZTERM, Case_Case_GERMANY.BUDAT, Case_Case_GERMANY.CPUDT FROM Case_Case_GERMANY 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>241</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '61', "ui_acta_from_schema_0" = 'Case_Case_1000', "ui_display_name" = 'Query_1000', "x" = '1579', "y" = '-724')
GUID::'dad3fc23-41fb-4d1c-a91e-2008630995f6' CREATE VIEW Query_1000( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_Case_1000.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_Case_1000.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_Case_1000.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_Case_1000.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_Case_1000.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_Case_1000.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_Case_1000.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_Case_1000.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_Case_1000.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_Case_1000.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_Case_1000.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_Case_1000.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_Case_1000.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_Case_1000.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_Case_1000.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_Case_1000.CPUDT')  )
 AS
SELECT Case_Case_1000.MANDT, Case_Case_1000.BUKRS, Case_Case_1000.LIFNR, Case_Case_1000.GJAHR, Case_Case_1000.BELNR, Case_Case_1000.BUZEI, Case_Case_1000.BLDAT, Case_Case_1000.WAERS, Case_Case_1000.BLART, Case_Case_1000.SHKZG, Case_Case_1000.WRBTR, Case_Case_1000.EBELN, Case_Case_1000.EBELP, Case_Case_1000.ZTERM, Case_Case_1000.BUDAT, Case_Case_1000.CPUDT FROM Case_Case_1000 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>250</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "ui_acta_from_schema_0" = 'Case_Case_OPPH', "ui_display_name" = 'Query_OPPH', "x" = '1593', "y" = '-971')
GUID::'3c46bd9c-e53e-4427-a404-e81c48d153ff' CREATE VIEW Query_OPPH( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_Case_OPPH.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_Case_OPPH.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_Case_OPPH.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_Case_OPPH.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_Case_OPPH.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_Case_OPPH.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_Case_OPPH.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_Case_OPPH.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_Case_OPPH.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_Case_OPPH.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_Case_OPPH.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_Case_OPPH.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_Case_OPPH.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_Case_OPPH.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_Case_OPPH.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_Case_OPPH.CPUDT')  )
 AS
SELECT Case_Case_OPPH.MANDT, Case_Case_OPPH.BUKRS, Case_Case_OPPH.LIFNR, Case_Case_OPPH.GJAHR, Case_Case_OPPH.BELNR, Case_Case_OPPH.BUZEI, Case_Case_OPPH.BLDAT, Case_Case_OPPH.WAERS, Case_Case_OPPH.BLART, Case_Case_OPPH.SHKZG, Case_Case_OPPH.WRBTR, Case_Case_OPPH.EBELN, Case_Case_OPPH.EBELP, Case_Case_OPPH.ZTERM, Case_Case_OPPH.BUDAT, Case_Case_OPPH.CPUDT FROM Case_Case_OPPH 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '65', "ui_acta_from_schema_0" = 'Case_Case_US80', "ui_display_name" = 'Query_US80', "x" = '1604', "y" = '-1209')
GUID::'fe7c2d74-619c-40e3-8854-cc4ba470afb8' CREATE VIEW Query_US80( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_Case_US80.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_Case_US80.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_Case_US80.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_Case_US80.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_Case_US80.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_Case_US80.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_Case_US80.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_Case_US80.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_Case_US80.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_Case_US80.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_Case_US80.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_Case_US80.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_Case_US80.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_Case_US80.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_Case_US80.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_Case_US80.CPUDT')  )
 AS
SELECT Case_Case_US80.MANDT, Case_Case_US80.BUKRS, Case_Case_US80.LIFNR, Case_Case_US80.GJAHR, Case_Case_US80.BELNR, Case_Case_US80.BUZEI, Case_Case_US80.BLDAT, Case_Case_US80.WAERS, Case_Case_US80.BLART, Case_Case_US80.SHKZG, Case_Case_US80.WRBTR, Case_Case_US80.EBELN, Case_Case_US80.EBELP, Case_Case_US80.ZTERM, Case_Case_US80.BUDAT, Case_Case_US80.CPUDT FROM Case_Case_US80 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>310</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '60', "ui_acta_from_schema_0" = 'Case_default', "ui_display_name" = 'Query_DEFAULT', "x" = '1616', "y" = '-1462')
GUID::'01fe2dfe-ead6-4525-b530-e4f110bae4de' CREATE VIEW Query_DEFAULT( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_default.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_default.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_default.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_default.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_default.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_default.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_default.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_default.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_default.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_default.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_default.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_default.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_default.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_default.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_default.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_default.CPUDT')  )
 AS
SELECT Case_default.MANDT, Case_default.BUKRS, Case_default.LIFNR, Case_default.GJAHR, Case_default.BELNR, Case_default.BUZEI, Case_default.BLDAT, Case_default.WAERS, Case_default.BLART, Case_default.SHKZG, Case_default.WRBTR, Case_default.EBELN, Case_default.EBELP, Case_default.ZTERM, Case_default.BUDAT, Case_default.CPUDT FROM Case_default 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '150', "Output_Width_Name" = '170', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '38', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_LFA1', "ui_acta_from_schema_1" = 'Query_0001_0002', "ui_where_text" = 'LI_ABAP_INVOICE_LFA1.KTOKK <> \'REIS\'



', "x" = '2170', "y" = '-470')
GUID::'118319de-414b-4292-9bd6-40d2cafc668e' CREATE VIEW Query_1( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_0001_0002.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_0001_0002.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_0001_0002.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_0001_0002.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_0001_0002.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_0001_0002.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_0001_0002.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_0001_0002.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_0001_0002.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_0001_0002.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_0001_0002.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_0001_0002.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_0001_0002.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_0001_0002.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_0001_0002.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_0001_0002.CPUDT')  )
 AS
SELECT Query_0001_0002.MANDT, Query_0001_0002.BUKRS, Query_0001_0002.LIFNR, Query_0001_0002.GJAHR, Query_0001_0002.BELNR, Query_0001_0002.BUZEI, Query_0001_0002.BLDAT, Query_0001_0002.WAERS, Query_0001_0002.BLART, Query_0001_0002.SHKZG, Query_0001_0002.WRBTR, Query_0001_0002.EBELN, Query_0001_0002.EBELP, Query_0001_0002.ZTERM, Query_0001_0002.BUDAT, Query_0001_0002.CPUDT FROM Query_0001_0002  __SAP_INNER_JOIN LI_ABAP_INVOICE_LFA1  ON ((Query_0001_0002.MANDT = LI_ABAP_INVOICE_LFA1.MANDT) AND
   (Query_0001_0002.LIFNR = LI_ABAP_INVOICE_LFA1.LIFNR))SET("ui_on_text" = 'Query_0001_0002.MANDT = LI_ABAP_INVOICE_LFA1.MANDT and 
Query_0001_0002.LIFNR = LI_ABAP_INVOICE_LFA1.LIFNR
# and LI_ABAP_INVOICE_LFA1.KTOKK <> \'REIS\'')
 WHERE (LI_ABAP_INVOICE_LFA1.KTOKK != 'REIS')
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '60', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_LFA1', "ui_acta_from_schema_1" = 'Query_1000', "ui_where_text" = '#ABAP_INVOICE_LFA1.KTOKK <> \'0003\'


























', "x" = '2172', "y" = '-726')
GUID::'56d8219a-c114-4f73-8036-0ab9249c5f92' CREATE VIEW Query_2( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_1000.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_1000.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_1000.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_1000.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_1000.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_1000.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_1000.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_1000.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_1000.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_1000.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_1000.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_1000.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_1000.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_1000.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_1000.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_1000.CPUDT')  )
 AS
SELECT Query_1000.MANDT, Query_1000.BUKRS, Query_1000.LIFNR, Query_1000.GJAHR, Query_1000.BELNR, Query_1000.BUZEI, Query_1000.BLDAT, Query_1000.WAERS, Query_1000.BLART, Query_1000.SHKZG, Query_1000.WRBTR, Query_1000.EBELN, Query_1000.EBELP, Query_1000.ZTERM, Query_1000.BUDAT, Query_1000.CPUDT FROM Query_1000  __SAP_LEFT_OUTER_JOIN LI_ABAP_INVOICE_LFA1  ON (((Query_1000.MANDT = LI_ABAP_INVOICE_LFA1.MANDT) AND
   (Query_1000.LIFNR = LI_ABAP_INVOICE_LFA1.LIFNR)) AND
   (LI_ABAP_INVOICE_LFA1.KTOKK != '0003'))SET("ui_on_text" = 'Query_1000.MANDT = LI_ABAP_INVOICE_LFA1.MANDT and 
Query_1000.LIFNR = LI_ABAP_INVOICE_LFA1.LIFNR and 
LI_ABAP_INVOICE_LFA1.KTOKK <> \'0003\'')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '60', "ui_acta_from_schema_0" = 'Query_OPPH', "ui_where_text" = 'Query_OPPH.LIFNR <> \'0000800001\'








































', "x" = '2183', "y" = '-973')
GUID::'d60763a4-9e25-4f36-b073-94982c98d30b' CREATE VIEW Query_3( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_OPPH.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_OPPH.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_OPPH.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_OPPH.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_OPPH.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_OPPH.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_OPPH.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_OPPH.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_OPPH.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_OPPH.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_OPPH.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_OPPH.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_OPPH.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_OPPH.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_OPPH.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_OPPH.CPUDT')  )
 AS
SELECT Query_OPPH.MANDT, Query_OPPH.BUKRS, Query_OPPH.LIFNR, Query_OPPH.GJAHR, Query_OPPH.BELNR, Query_OPPH.BUZEI, Query_OPPH.BLDAT, Query_OPPH.WAERS, Query_OPPH.BLART, Query_OPPH.SHKZG, Query_OPPH.WRBTR, Query_OPPH.EBELN, Query_OPPH.EBELP, Query_OPPH.ZTERM, Query_OPPH.BUDAT, Query_OPPH.CPUDT FROM Query_OPPH  WHERE (Query_OPPH.LIFNR != '0000800001')
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '44', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_LFB1', "ui_acta_from_schema_1" = 'Query_US80', "ui_where_text" = 'LI_ABAP_INVOICE_LFB1.QSSKZ is null


























', "x" = '2186', "y" = '-1209')
GUID::'3e22d447-d5fe-4124-8286-c13118342c25' CREATE VIEW Query_4( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_US80.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_US80.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_US80.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_US80.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_US80.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_US80.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_US80.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_US80.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_US80.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_US80.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_US80.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_US80.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_US80.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_US80.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_US80.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_US80.CPUDT')  )
 AS
SELECT Query_US80.MANDT, Query_US80.BUKRS, Query_US80.LIFNR, Query_US80.GJAHR, Query_US80.BELNR, Query_US80.BUZEI, Query_US80.BLDAT, Query_US80.WAERS, Query_US80.BLART, Query_US80.SHKZG, Query_US80.WRBTR, Query_US80.EBELN, Query_US80.EBELP, Query_US80.ZTERM, Query_US80.BUDAT, Query_US80.CPUDT FROM Query_US80  __SAP_LEFT_OUTER_JOIN LI_ABAP_INVOICE_LFB1  ON (((LI_ABAP_INVOICE_LFB1.LIFNR = Query_US80.LIFNR) AND
   (LI_ABAP_INVOICE_LFB1.BUKRS = Query_US80.BUKRS)) AND
   (LI_ABAP_INVOICE_LFB1.QSSKZ != ''))SET("ui_on_text" = 'LI_ABAP_INVOICE_LFB1.LIFNR = Query_US80.LIFNR and
LI_ABAP_INVOICE_LFB1.BUKRS = Query_US80.BUKRS and 
LI_ABAP_INVOICE_LFB1.QSSKZ <> \'\'')
 WHERE (LI_ABAP_INVOICE_LFB1.QSSKZ IS  NULL )
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '60', "x" = '2751', "y" = '-757')
GUID::'153205e6-5895-4323-9481-138457909771' CALL TRANSFORM Merge() INPUT(Query_1, Query_2, Query_3, Query_4, Query_DEFAULT, Query_EGS1_PEB1) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '221', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>282</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '58', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Query_WRBTR', "x" = '3147', "y" = '-755')
GUID::'52eed45f-8a2e-4627-a1eb-b280540482d2' CREATE VIEW Query_WRBTR( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Merge.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Merge.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Merge.LIFNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Merge.GJAHR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Merge.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Merge.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Merge.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Merge.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Merge.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Merge.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = '#ifthenelse((Merge.SHKZG = \'S\' AND (Merge.WRBTR > 0.00)), (Merge.WRBTR * (-1)), Merge.WRBTR)
ifthenelse( Merge.SHKZG = \'S\',
   ifthenelse( Merge.WRBTR > 0, Merge.WRBTR * (-1), Merge.WRBTR),
   Merge.WRBTR)') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Merge.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Merge.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Merge.ZTERM') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Merge.BUDAT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Merge.CPUDT')  )
 AS
SELECT Merge.MANDT, Merge.BUKRS, Merge.LIFNR, Merge.GJAHR, Merge.BELNR, Merge.BUZEI, Merge.BLDAT, Merge.WAERS, Merge.BLART, Merge.SHKZG, ifthenelse((Merge.SHKZG = 'S'), ifthenelse((Merge.WRBTR > 0), (Merge.WRBTR * -1), Merge.WRBTR), Merge.WRBTR), Merge.EBELN, Merge.EBELP, Merge.ZTERM, Merge.BUDAT, Merge.CPUDT FROM Merge 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("Case_1_Case_RE" = 'Query_WRBTR.BLART in (\'RE\', \'RN\')', "Case_1_Case_ZC" = 'Query_WRBTR.BLART = \'ZC\'', "Case_1_default" = 'DEFAULT', "InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '404', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '33', "ui_acta_from_schema_0" = 'Query_WRBTR', "x" = '3537', "y" = '-755')
GUID::'b0909aa5-f6df-4e57-84c3-29d02980cbd9' CREATE VIEW Case_1()
 AS
SELECT  FROM Query_WRBTR  CASE Query_WRBTR.BLART IN ('RE','RN') OUTPUT Case_1_Case_RE , (Query_WRBTR.BLART = 'ZC') OUTPUT Case_1_Case_ZC ,  DEFAULT  OUTPUT Case_1_default
SET("Mutually_Exclusive" = 'yes', "Preserve_Expression_Order" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '186', "Input_Width_Name" = '180', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '305', "Output_Width_Name" = '163', "Output_Width_Type" = '99', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '53', "ui_acta_from_schema_0" = 'Query_BK_BS_RS', "ui_acta_from_schema_1" = 'Case_1_Case_RE', "ui_where_text" = 'Query_BK_BS_RS.HKONT not in (\'0000154201\',\'0000154202\',\'0000154203\',\'0000240003\',\'0000482013\',\'0000482014\',\'0000482017\',\'0000482018\',
\'0000482019\',\'0000482021\',\'0000482022\',\'0000482026\',\'0000482027\')



', "x" = '4047', "y" = '-539')
GUID::'4b4f3733-7efe-4e66-8df7-07b19b9d38b0' CREATE VIEW Query_5( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_1_Case_RE.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_1_Case_RE.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_1_Case_RE.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_1_Case_RE.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BK_BS_RS.BUZEI
#Case_1_Case_RE.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_1_Case_RE.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_1_Case_RE.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_1_Case_RE.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_1_Case_RE.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'ifthenelse(Query_BK_BS_RS.EBELN = \'\', Query_BK_BS_RS.WRBTR, 
   ifthenelse(Query_BK_BS_RS.RSEG_WRBTR = 0, Query_BK_BS_RS.WRBTR, Query_BK_BS_RS.RSEG_WRBTR))
#ifthenelse(Query_BK_BS_RS.EBELN = \'\', Query_BK_BS_RS.WRBTR, Query_BK_BS_RS.RSEG_WRBTR)
#Query_BK_BS_RS.WRBTR
#Case_1_Case_RE.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_BK_BS_RS.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_BK_BS_RS.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_1_Case_RE.ZTERM') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_BK_BS_RS.RSEG_MENGE
#Query_BK_BS_RS.MENGE') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_1_Case_RE.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_BK_BS_RS.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_1_Case_RE.CPUDT') ,
 RSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_BK_BS_RS.RSEG_WRBTR') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = '#Query_BK_BS_RS.INV_UPRICE
Query_BK_BS_RS.INV_UPRICE') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BK_BS_RS.BUZID')  )
 AS
SELECT Case_1_Case_RE.MANDT, Case_1_Case_RE.BUKRS, Case_1_Case_RE.LIFNR, Case_1_Case_RE.BELNR, Query_BK_BS_RS.BUZEI, Case_1_Case_RE.BLDAT, Case_1_Case_RE.WAERS, Case_1_Case_RE.BLART, Case_1_Case_RE.SHKZG, ifthenelse((Query_BK_BS_RS.EBELN = ''), Query_BK_BS_RS.WRBTR, ifthenelse((Query_BK_BS_RS.RSEG_WRBTR = 0), Query_BK_BS_RS.WRBTR, Query_BK_BS_RS.RSEG_WRBTR)), Query_BK_BS_RS.EBELN, Query_BK_BS_RS.EBELP, Case_1_Case_RE.ZTERM, Query_BK_BS_RS.RSEG_MENGE, Case_1_Case_RE.BUDAT, Query_BK_BS_RS.MATNR_SGTXT, Case_1_Case_RE.CPUDT, Query_BK_BS_RS.RSEG_WRBTR, Query_BK_BS_RS.INV_UPRICE, Query_BK_BS_RS.BUZID FROM Case_1_Case_RE  __SAP_INNER_JOIN Query_BK_BS_RS  ON ((((Case_1_Case_RE.MANDT = Query_BK_BS_RS.MANDT) AND
   (Case_1_Case_RE.BELNR = Query_BK_BS_RS.BELNR)) AND
   (Case_1_Case_RE.GJAHR = Query_BK_BS_RS.GJAHR)) AND
   (Case_1_Case_RE.BUKRS = Query_BK_BS_RS.BUKRS))SET("ui_on_text" = 'Case_1_Case_RE.MANDT = Query_BK_BS_RS.MANDT AND 
Case_1_Case_RE.BELNR = Query_BK_BS_RS.BELNR and 
Case_1_Case_RE.GJAHR = Query_BK_BS_RS.GJAHR and 
Case_1_Case_RE.BUKRS = Query_BK_BS_RS.BUKRS 
#and Query_BK_BS_RS.KOART = \'S\' 
#and Query_BK_BS_RS.BUZID = \'W\'
')
 WHERE ( not Query_BK_BS_RS.HKONT IN ('0000154201','0000154202','0000154203','0000240003','0000482013','0000482014','0000482017','0000482018','0000482019','0000482021','0000482022','0000482026','0000482027'))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '209', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '190', "Output_Width_Name" = '150', "Output_Width_Type" = '107', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "ui_acta_from_schema_0" = 'Query_BSEG_ZC_def', "ui_acta_from_schema_1" = 'Case_1_Case_ZC', "x" = '4053', "y" = '-756')
GUID::'3fd7bf52-9f53-44e6-b242-eb2d6adaf078' CREATE VIEW Query_6( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_1_Case_ZC.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_1_Case_ZC.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_1_Case_ZC.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_1_Case_ZC.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_1_Case_ZC.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_1_Case_ZC.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_1_Case_ZC.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_1_Case_ZC.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_1_Case_ZC.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Case_1_Case_ZC.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_1_Case_ZC.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_1_Case_ZC.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_1_Case_ZC.ZTERM') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_BSEG_ZC_def.MENGE') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_1_Case_ZC.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_BSEG_ZC_def.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_1_Case_ZC.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG_ZC_def.BUZID')  )
 AS
SELECT Case_1_Case_ZC.MANDT, Case_1_Case_ZC.BUKRS, Case_1_Case_ZC.LIFNR, Case_1_Case_ZC.BELNR, Case_1_Case_ZC.BUZEI, Case_1_Case_ZC.BLDAT, Case_1_Case_ZC.WAERS, Case_1_Case_ZC.BLART, Case_1_Case_ZC.SHKZG, Case_1_Case_ZC.WRBTR, Case_1_Case_ZC.EBELN, Case_1_Case_ZC.EBELP, Case_1_Case_ZC.ZTERM, Query_BSEG_ZC_def.MENGE, Case_1_Case_ZC.BUDAT, Query_BSEG_ZC_def.MATNR_SGTXT, Case_1_Case_ZC.CPUDT, Query_BSEG_ZC_def.BUZID FROM Case_1_Case_ZC  __SAP_INNER_JOIN Query_BSEG_ZC_def  ON ((((((Case_1_Case_ZC.MANDT = Query_BSEG_ZC_def.MANDT) AND
   (Case_1_Case_ZC.BUKRS = Query_BSEG_ZC_def.BUKRS)) AND
   (Case_1_Case_ZC.BELNR = Query_BSEG_ZC_def.BELNR)) AND
   (Case_1_Case_ZC.GJAHR = Query_BSEG_ZC_def.GJAHR)) AND
   (Query_BSEG_ZC_def.KOART = 'S')) AND
   (Query_BSEG_ZC_def.BUZID = 'S'))SET("ui_on_text" = 'Case_1_Case_ZC.MANDT = Query_BSEG_ZC_def.MANDT and 
Case_1_Case_ZC.BUKRS = Query_BSEG_ZC_def.BUKRS and 
Case_1_Case_ZC.BELNR = Query_BSEG_ZC_def.BELNR and 
Case_1_Case_ZC.GJAHR = Query_BSEG_ZC_def.GJAHR and 
Query_BSEG_ZC_def.KOART = \'S\' and 
Query_BSEG_ZC_def.BUZID = \'S\'
#ABAP_INVOICE_BKPF.BUZID = \'W\'
')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '47', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '211', "Output_Width_Name" = '150', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "ui_acta_from_schema_0" = 'Case_1_default', "ui_acta_from_schema_1" = 'Query_BSEG_ZC_def', "x" = '3993', "y" = '-1006')
GUID::'e6f042a8-11ad-4a87-9f1b-ee6beda7e3ab' CREATE VIEW Query_7( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Case_1_default.MANDT
#ABAP_INVOICE_BSEG.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Case_1_default.BUKRS
#ABAP_INVOICE_BSEG.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Case_1_default.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Case_1_default.BELNR
#ABAP_INVOICE_BSEG.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Case_1_default.GJAHR
#ABAP_INVOICE_BSEG.GJAHR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Case_1_default.BUZEI') ,
 BUZEI_BSEG NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_BSEG_ZC_def.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Case_1_default.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Case_1_default.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Case_1_default.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Case_1_default.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_BSEG_ZC_def.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Case_1_default.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Case_1_default.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Case_1_default.ZTERM') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_BSEG_ZC_def.MENGE') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Case_1_default.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_BSEG_ZC_def.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Case_1_default.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_BSEG_ZC_def.BUZID')  )
 AS
SELECT Case_1_default.MANDT, Case_1_default.BUKRS, Case_1_default.LIFNR, Case_1_default.BELNR, Case_1_default.GJAHR, Case_1_default.BUZEI, Query_BSEG_ZC_def.BUZEI, Case_1_default.BLDAT, Case_1_default.WAERS, Case_1_default.BLART, Case_1_default.SHKZG, Query_BSEG_ZC_def.WRBTR, Case_1_default.EBELN, Case_1_default.EBELP, Case_1_default.ZTERM, Query_BSEG_ZC_def.MENGE, Case_1_default.BUDAT, Query_BSEG_ZC_def.MATNR_SGTXT, Case_1_default.CPUDT, Query_BSEG_ZC_def.BUZID FROM Case_1_default  __SAP_INNER_JOIN Query_BSEG_ZC_def  ON ((((((Case_1_default.MANDT = Query_BSEG_ZC_def.MANDT) AND
   (Case_1_default.BUKRS = Query_BSEG_ZC_def.BUKRS)) AND
   (Case_1_default.BELNR = Query_BSEG_ZC_def.BELNR)) AND
   (Case_1_default.GJAHR = Query_BSEG_ZC_def.GJAHR)) AND
   (Query_BSEG_ZC_def.KOART = 'S')) AND
   (  ((Query_BSEG_ZC_def.BUZID = 'S') OR
   (Query_BSEG_ZC_def.BUZID = ''))  ))SET("ui_on_text" = 'Case_1_default.MANDT  = Query_BSEG_ZC_def.MANDT AND
Case_1_default.BUKRS  = Query_BSEG_ZC_def.BUKRS AND
Case_1_default.BELNR  = Query_BSEG_ZC_def.BELNR AND
Case_1_default.GJAHR  = Query_BSEG_ZC_def.GJAHR AND
Query_BSEG_ZC_def.KOART  = \'S\' AND 
(Query_BSEG_ZC_def.BUZID = \'S\' OR Query_BSEG_ZC_def.BUZID = \'\')')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '216', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '201', "Output_Width_Name" = '163', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '62', "ui_acta_from_schema_0" = 'Query_5', "x" = '4503', "y" = '-541')
GUID::'c9086f45-9252-4a45-a130-b173ad16d549' CREATE VIEW Query_8( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_5.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_5.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_5.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_5.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_5.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_5.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_5.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_5.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_5.SHKZG') ,
 WRBTR DECIMAL(13, 4)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_5.WRBTR
#ifthenelse( Query_5.SHKZG = \'S\' AND Query_5.WRBTR > 0, Query_5.WRBTR * (-1), Query_5.RSEG_WRBTR)
#ifthenelse((Query_5.SHKZG = \'S\' AND (Query_5.WRBTR > 0)), (Query_5.WRBTR * (-1)), Query_5.WRBTR)') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_5.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_5.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_5.ZTERM') ,
 INV_QTY DECIMAL(13, 3)  SET( "ui_mapping_text" = 'nvl(Query_5.MENGE,0.000)') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_5.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_5.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_5.CPUDT') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_5.INV_UPRICE
#ifthenelse(Query_5.INV_UPRICE=0, Query_5.WRBTR/Query_5.MENGE, Query_5.INV_UPRICE)') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_5.BUZID')  )
 AS
SELECT Query_5.MANDT, Query_5.BUKRS, Query_5.LIFNR, Query_5.BELNR, Query_5.BUZEI, Query_5.BLDAT, Query_5.WAERS, Query_5.BLART, Query_5.SHKZG, Query_5.WRBTR, Query_5.EBELN, Query_5.EBELP, Query_5.ZTERM, nvl(Query_5.MENGE, 0.00000000000000e+00), Query_5.BUDAT, Query_5.MATNR_SGTXT, Query_5.CPUDT, Query_5.INV_UPRICE, Query_5.BUZID FROM Query_5 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '227', "Output_Width_Type" = '113', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '70', "ui_acta_from_schema_0" = 'Query_6', "x" = '4506', "y" = '-756')
GUID::'55fe608c-aa10-4103-ac47-e8c1a1b2c36b' CREATE VIEW Query_9( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_6.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_6.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_6.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_6.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_6.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_6.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_6.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_6.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_6.SHKZG') ,
 WRBTR DECIMAL(13, 4)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'ifthenelse((Query_6.SHKZG = \'S\' AND (Query_6.WRBTR > 0)), (Query_6.WRBTR * (-1)), Query_6.WRBTR)') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_6.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_6.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_6.ZTERM') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'NVL(Query_6.MENGE, 0)') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_6.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_6.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_6.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_6.BUZID')  )
 AS
SELECT Query_6.MANDT, Query_6.BUKRS, Query_6.LIFNR, Query_6.BELNR, Query_6.BUZEI, Query_6.BLDAT, Query_6.WAERS, Query_6.BLART, Query_6.SHKZG, ifthenelse(((Query_6.SHKZG = 'S') AND
   (Query_6.WRBTR > 0)), (Query_6.WRBTR * -1), Query_6.WRBTR), Query_6.EBELN, Query_6.EBELP, Query_6.ZTERM, nvl(Query_6.MENGE, 0), Query_6.BUDAT, Query_6.MATNR_SGTXT, Query_6.CPUDT, Query_6.BUZID FROM Query_6 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '58', "Input_Column_Width_4" = '45', "Input_Width_Description" = '130', "Input_Width_Name" = '162', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '208', "Output_Width_Name" = '168', "Output_Width_Type" = '99', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '60', "ui_acta_from_schema_0" = 'Query_8', "x" = '4928', "y" = '-542')
GUID::'1351cd57-d79a-415a-8000-ca1aedd1e72a' CREATE VIEW Query_10( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_8.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_8.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_8.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_8.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_8.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_8.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_8.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_8.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_8.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_8.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_8.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_8.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_8.ZTERM') ,
 INV_QTY DECIMAL(13, 3)  SET( "ui_mapping_text" = 'Query_8.INV_QTY
#ifthenelse( Query_8.WRBTR < 0.000, (0 - Query_8.INV_QTY), Query_8.INV_QTY)') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'Query_8.INV_UPRICE') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_8.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_8.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_8.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_8.BUZID')  )
 AS
SELECT Query_8.MANDT, Query_8.BUKRS, Query_8.LIFNR, Query_8.BELNR, Query_8.BUZEI, Query_8.BLDAT, Query_8.WAERS, Query_8.BLART, Query_8.SHKZG, Query_8.WRBTR, Query_8.EBELN, Query_8.EBELP, Query_8.ZTERM, Query_8.INV_QTY, Query_8.INV_UPRICE, Query_8.BUDAT, Query_8.MATNR_SGTXT, Query_8.CPUDT, Query_8.BUZID FROM Query_8 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '182', "Output_Width_Type" = '117', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '63', "ui_acta_from_schema_0" = 'Query_9', "x" = '4927', "y" = '-755')
GUID::'c4c37e8d-71d3-44b7-82c5-612abc0ebb66' CREATE VIEW Query_11( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_9.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_9.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_9.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_9.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_9.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_9.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_9.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_9.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_9.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_9.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_9.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_9.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_9.ZTERM') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_9.INV_QTY
#ifthenelse(Query_9.WRBTR < 0, (0 - Query_9.INV_QTY), Query_9.INV_QTY)') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'ifthenelse(Query_9.INV_QTY = 0, 0,(Query_9.WRBTR /Query_9.INV_QTY))') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_9.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_9.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_9.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_9.BUZID')  )
 AS
SELECT Query_9.MANDT, Query_9.BUKRS, Query_9.LIFNR, Query_9.BELNR, Query_9.BUZEI, Query_9.BLDAT, Query_9.WAERS, Query_9.BLART, Query_9.SHKZG, Query_9.WRBTR, Query_9.EBELN, Query_9.EBELP, Query_9.ZTERM, Query_9.INV_QTY, ifthenelse((Query_9.INV_QTY = 0), 0, (Query_9.WRBTR / Query_9.INV_QTY)), Query_9.BUDAT, Query_9.MATNR_SGTXT, Query_9.CPUDT, Query_9.BUZID FROM Query_9 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '213', "Output_Width_Type" = '134', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Query_16', "ui_where_text" = '#Query_16.GROUP_ROW_NUM=1



















', "x" = '5060', "y" = '-1006')
GUID::'0537491c-c9f0-485b-9e59-9912bf9e1e98' CREATE VIEW Query_12( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_16.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_16.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_16.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_16.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_16.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_16.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_16.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_16.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_16.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_16.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_16.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_16.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_16.ZTERM') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_16.MENGE
#ifthenelse( Query_16.WRBTR < 0, (0-Query_16.MENGE), Query_16.MENGE)') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'ifthenelse(Query_16.MENGE = 0,0, ( Query_16.WRBTR / Query_16.MENGE))') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_16.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_16.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_16.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_16.BUZID')  )
 AS
SELECT Query_16.MANDT, Query_16.BUKRS, Query_16.LIFNR, Query_16.BELNR, Query_16.BUZEI, Query_16.BLDAT, Query_16.WAERS, Query_16.BLART, Query_16.SHKZG, Query_16.WRBTR, Query_16.EBELN, Query_16.EBELP, Query_16.ZTERM, Query_16.MENGE, ifthenelse((Query_16.MENGE = 0), 0, (Query_16.WRBTR / Query_16.MENGE)), Query_16.BUDAT, Query_16.MATNR_SGTXT, Query_16.CPUDT, Query_16.BUZID FROM Query_16 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '216', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '54', "Output_Column_Width_5" = '39', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '193', "Output_Width_Type" = '90', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '69', "ui_display_name" = 'Merge', "x" = '5384', "y" = '-756')
GUID::'5c7e8df5-1901-4350-8629-6ce76a34fe2a' CALL TRANSFORM Merge() INPUT(Query_10, Query_11, Query_12) OUTPUT(Merge_2()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '176', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '196', "Output_Width_Mapping" = '85', "Output_Width_Name" = '173', "Output_Width_Type" = '112', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Merge_2', "x" = '5704', "y" = '-757')
GUID::'09354b43-24bb-4970-99ab-d275ecf78499' CREATE VIEW Query_13( BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Merge_2.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Merge_2.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Merge_2.BLDAT') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'Merge_2.INV_UPRICE
#abs(Merge_1.INV_UPRICE)') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Merge_2.WAERS') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Merge_2.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Merge_2.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Merge_2.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Merge_2.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Merge_2.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Merge_2.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Merge_2.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Merge_2.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Merge_2.LIFNR') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Merge_2.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Merge_2.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Merge_2.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Merge_2.BUZID')  )
 AS
SELECT Merge_2.BELNR, Merge_2.BUZEI, Merge_2.BLDAT, Merge_2.INV_UPRICE, Merge_2.WAERS, Merge_2.INV_QTY, Merge_2.WRBTR, Merge_2.SHKZG, Merge_2.ZTERM, Merge_2.EBELN, Merge_2.EBELP, Merge_2.BUKRS, Merge_2.BLART, Merge_2.LIFNR, Merge_2.BUDAT, Merge_2.MATNR_SGTXT, Merge_2.CPUDT, Merge_2.BUZID FROM Merge_2 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '56', "ui_acta_from_schema_0" = 'Query_7', "x" = '4348', "y" = '-1005')
GUID::'03c68fdd-e43c-4cf7-adf2-b739542684fd' CREATE VIEW Query_14( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_7.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_7.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_7.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_7.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_7.GJAHR') ,
 BUZEI_BSEG NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_7.BUZEI_BSEG') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_7.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_7.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_7.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_7.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_7.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_7.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_7.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_7.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_7.ZTERM') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'NVL(Query_7.MENGE, 0)') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_7.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_7.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_7.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_7.BUZID')  )
 AS
SELECT Query_7.MANDT, Query_7.BUKRS, Query_7.LIFNR, Query_7.BELNR, Query_7.GJAHR, Query_7.BUZEI_BSEG, Query_7.BUZEI, Query_7.BLDAT, Query_7.WAERS, Query_7.BLART, Query_7.SHKZG, Query_7.WRBTR, Query_7.EBELN, Query_7.EBELP, Query_7.ZTERM, nvl(Query_7.MENGE, 0), Query_7.BUDAT, Query_7.MATNR_SGTXT, Query_7.CPUDT, Query_7.BUZID FROM Query_7  ORDER BY Query_7.BUKRS ASC , Query_7.BELNR ASC , Query_7.GJAHR ASC , Query_7.BUZEI ASC , Query_7.BUZEI_BSEG ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '47', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '244', "Input_Width_Name" = '196', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '159', "Output_Width_Name" = '152', "Output_Width_Type" = '121', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_EKKO', "ui_acta_from_schema_1" = 'Query_13', "x" = '6106', "y" = '-756')
GUID::'b57c520e-004e-4226-bba0-bde73c8806fc' CREATE VIEW Query_15( BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_13.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_13.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'to_char(Query_13.BLDAT, \'MM/DD/YYYY\')
#to_char(Query_13.BLDAT, \'YYYYMMDD\')') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'decode( LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0, Query_13.INV_UPRICE / LI_ABAP_INVOICE_EKKO.EKKO_WKURS,
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WKURS < 0 and LI_ABAP_INVOICE_EKKO.EKKO_WAERS not in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.INV_UPRICE * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS),
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WAERS in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.INV_UPRICE * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100),
Query_13.INV_UPRICE)

#ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS, 
#   ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0, Query_13.INV_UPRICE / LI_ABAP_INVOICE_EKKO.EKKO_WKURS,
#      ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS not in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.INV_UPRICE * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS),Query_13.INV_UPRICE)),
#   ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'),Query_13.INV_UPRICE * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100),Query_13.INV_UPRICE))

#Query_13.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.EKKO_WAERS, Query_13.WAERS)
#Query_13.WAERS') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'ifthenelse( Query_13.SHKZG = \'S\', Query_13.INV_QTY * (-1), Query_13.INV_QTY)
#Query_13.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'decode( LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0, Query_13.WRBTR / LI_ABAP_INVOICE_EKKO.EKKO_WKURS,
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WKURS < 0 and LI_ABAP_INVOICE_EKKO.EKKO_WAERS not in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.WRBTR * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS),
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS and LI_ABAP_INVOICE_EKKO.EKKO_WAERS in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.WRBTR * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100),
Query_13.WRBTR)


#ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> \'\' and LI_ABAP_INVOICE_EKKO.EKKO_WAERS <> Query_13.WAERS, 
#   ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0, Query_13.WRBTR / LI_ABAP_INVOICE_EKKO.EKKO_WKURS,
#      ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS not in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'), Query_13.WRBTR * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS),Query_13.WRBTR)),
#   ifthenelse(LI_ABAP_INVOICE_EKKO.EKKO_WAERS in (\'GBP\',\'JPY\',\'SGD\',\'CHF\'),Query_13.WRBTR * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100),Query_13.WRBTR))

#ifthenelse( Query_13.SHKZG = \'S\', Query_13.WRBTR * (-1), Query_13.WRBTR)
#Query_13.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_13.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_13.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_13.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_13.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_13.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_13.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'ifthenelse( LI_ABAP_INVOICE_EKKO.EKKO_LIFNR = \'\' or LI_ABAP_INVOICE_EKKO.EKKO_LIFNR is null, Query_13.LIFNR, LI_ABAP_INVOICE_EKKO.EKKO_LIFNR)
#ifthenelse( Query_13.LIFNR = \'\' or Query_13.LIFNR is null, LI_ABAP_INVOICE_EKKO.EKKO_LIFNR, Query_13.LIFNR)
#nvl(LI_ABAP_INVOICE_EKKO.EKKO_LIFNR ,Query_13.LIFNR)') ,
 EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'ifthenelse(LI_ABAP_INVOICE_EKKO.EMATN = \'\' or LI_ABAP_INVOICE_EKKO.EMATN is null, Query_13.MATNR_SGTXT, LI_ABAP_INVOICE_EKKO.EMATN)
#ifthenelse(Query_13.MATNR_SGTXT = \'\', LI_ABAP_INVOICE_EKKO.EMATN, Query_13.MATNR_SGTXT)
#Query_13.MATNR_SGTXT') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'to_char(Query_13.BUDAT,\'MM/DD/YYYY\')
#Query_13.BUDAT
#to_char(Query_13.BUDAT,\'YYYYMMDD\')') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.KNTTP,\'\')') ,
 KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.KNTTX,\'\')') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.EPSTP,\'\')') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.PTEXT,\'\')') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'nvl(LI_ABAP_INVOICE_EKKO.NETPR, 0)') ,
 BEDAT VARCHAR(10)  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'to_char(LI_ABAP_INVOICE_EKKO.BEDAT,\'MM/DD/YYYY\')
#to_char(LI_ABAP_INVOICE_EKKO.BEDAT,\'YYYYMMDD\')
#ABAP_INVOICE_EKKO.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'to_char(Query_13.CPUDT,\'MM/DD/YYYY\')
#to_char(Query_13.CPUDT,\'YYYYMMDD\')') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_13.BUZID') ,
 UMREZ DECIMAL(11, 2)  SET( "Description" = 'Numerator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'LI_ABAP_INVOICE_EKKO.UMREZ') ,
 UMREN DECIMAL(5, 0)  SET( "Description" = 'Denominator for Conversion of Order Unit to Base Unit', "ui_mapping_text" = 'LI_ABAP_INVOICE_EKKO.UMREN')  )
 AS
SELECT Query_13.BELNR, Query_13.BUZEI, to_char(Query_13.BLDAT, 'MM/DD/YYYY'), decode((((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0)), (Query_13.INV_UPRICE / LI_ABAP_INVOICE_EKKO.EKKO_WKURS), ((((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WKURS < 0)) AND
   ( not LI_ABAP_INVOICE_EKKO.EKKO_WAERS IN ('GBP','JPY','SGD','CHF'))), (Query_13.INV_UPRICE * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS)), (((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS IN ('GBP','JPY','SGD','CHF')), (Query_13.INV_UPRICE * (0 - (LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100))), Query_13.INV_UPRICE), nvl(LI_ABAP_INVOICE_EKKO.EKKO_WAERS, Query_13.WAERS), ifthenelse((Query_13.SHKZG = 'S'), (Query_13.INV_QTY * -1), Query_13.INV_QTY), decode((((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WKURS > 0)), (Query_13.WRBTR / LI_ABAP_INVOICE_EKKO.EKKO_WKURS), ((((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WKURS < 0)) AND
   ( not LI_ABAP_INVOICE_EKKO.EKKO_WAERS IN ('GBP','JPY','SGD','CHF'))), (Query_13.WRBTR * (0 - LI_ABAP_INVOICE_EKKO.EKKO_WKURS)), (((LI_ABAP_INVOICE_EKKO.EKKO_WAERS != '') AND
   (LI_ABAP_INVOICE_EKKO.EKKO_WAERS != Query_13.WAERS)) AND
   LI_ABAP_INVOICE_EKKO.EKKO_WAERS IN ('GBP','JPY','SGD','CHF')), (Query_13.WRBTR * (0 - (LI_ABAP_INVOICE_EKKO.EKKO_WKURS * 100))), Query_13.WRBTR), Query_13.SHKZG, Query_13.ZTERM, Query_13.EBELN, Query_13.EBELP, Query_13.BUKRS, Query_13.BLART, ifthenelse(((LI_ABAP_INVOICE_EKKO.EKKO_LIFNR = '') OR
   (LI_ABAP_INVOICE_EKKO.EKKO_LIFNR IS  NULL )), Query_13.LIFNR, LI_ABAP_INVOICE_EKKO.EKKO_LIFNR), ifthenelse(((LI_ABAP_INVOICE_EKKO.EMATN = '') OR
   (LI_ABAP_INVOICE_EKKO.EMATN IS  NULL )), Query_13.MATNR_SGTXT, LI_ABAP_INVOICE_EKKO.EMATN), to_char(Query_13.BUDAT, 'MM/DD/YYYY'), nvl(LI_ABAP_INVOICE_EKKO.KNTTP, ''), nvl(LI_ABAP_INVOICE_EKKO.KNTTX, ''), nvl(LI_ABAP_INVOICE_EKKO.EPSTP, ''), nvl(LI_ABAP_INVOICE_EKKO.PTEXT, ''), nvl(LI_ABAP_INVOICE_EKKO.NETPR, 0), to_char(LI_ABAP_INVOICE_EKKO.BEDAT, 'MM/DD/YYYY'), to_char(Query_13.CPUDT, 'MM/DD/YYYY'), Query_13.BUZID, LI_ABAP_INVOICE_EKKO.UMREZ, LI_ABAP_INVOICE_EKKO.UMREN FROM Query_13  __SAP_LEFT_OUTER_JOIN LI_ABAP_INVOICE_EKKO  ON ((LI_ABAP_INVOICE_EKKO.EBELN = Query_13.EBELN) AND
   (LI_ABAP_INVOICE_EKKO.EBELP = Query_13.EBELP))SET("ui_on_text" = 'LI_ABAP_INVOICE_EKKO.EBELN = Query_13.EBELN and 
LI_ABAP_INVOICE_EKKO.EBELP = Query_13.EBELP')

SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '264', "Output_Width_Type" = '100', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Query_14', "x" = '4703', "y" = '-1005')
GUID::'85622910-3449-4f31-a64b-9aac8f1c21a1' CREATE VIEW Query_16( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_14.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_14.BUKRS') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_14.LIFNR') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_14.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_14.GJAHR') ,
 BUZEI_BSEG NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_14.BUZEI_BSEG') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_14.BUZEI') ,
 BLDAT DATE  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_14.BLDAT') ,
 WAERS VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_14.WAERS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_14.BLART') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_14.SHKZG') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_14.WRBTR') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_14.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_14.EBELP') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_14.ZTERM') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_14.MENGE') ,
 GROUP_ROW_NUM INT  SET( "ui_mapping_text" = 'gen_row_num_by_group(BUKRS,BELNR,GJAHR,BUZEI)') ,
 BUDAT DATE  SET( "Description" = 'Posting Date in the Document', "ui_mapping_text" = 'Query_14.BUDAT') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_14.MATNR_SGTXT') ,
 CPUDT DATE  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_14.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_14.BUZID')  )
 AS
SELECT Query_14.MANDT, Query_14.BUKRS, Query_14.LIFNR, Query_14.BELNR, Query_14.GJAHR, Query_14.BUZEI_BSEG, Query_14.BUZEI, Query_14.BLDAT, Query_14.WAERS, Query_14.BLART, Query_14.SHKZG, Query_14.WRBTR, Query_14.EBELN, Query_14.EBELP, Query_14.ZTERM, Query_14.MENGE, gen_row_num_by_group(BUKRS, BELNR, GJAHR, BUZEI), Query_14.BUDAT, Query_14.MATNR_SGTXT, Query_14.CPUDT, Query_14.BUZID FROM Query_14 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '169', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '142', "Output_Width_Name" = '145', "Output_Width_Type" = '111', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '70', "ui_acta_from_schema_0" = 'Query_15', "x" = '6467', "y" = '-756')
GUID::'ef6cec7d-5fc8-4fb2-9a21-1e0f149a76e9' CREATE VIEW Query_17( BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_15.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_15.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_15.BLDAT') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'ifthenelse(Query_15.UMREZ <> 0, (Query_15.INV_UPRICE * Query_15.UMREN) / Query_15.UMREZ, Query_15.INV_UPRICE)
#Query_15.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_15.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'ifthenelse(Query_15.UMREN <> 0, (Query_15.INV_QTY * Query_15.UMREZ) / Query_15.UMREN, Query_15.INV_QTY)
#Query_15.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'ifthenelse(Query_15.SHKZG = \'S\', Query_15.WRBTR * (-1), Query_15.WRBTR)
#Query_15.WRBTR') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_15.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_15.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_15.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_15.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_15.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_15.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_15.LIFNR') ,
 EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'nvl(Query_15.EMATN,\'\')') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Query_15.BUDAT') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_15.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'Query_15.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_15.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'Query_15.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_15.NETPR') ,
 BEDAT VARCHAR(10)  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'nvl(Query_15.BEDAT,\'\')') ,
 CPUDT VARCHAR(10)  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_15.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_15.BUZID')  )
 AS
SELECT Query_15.BELNR, Query_15.BUZEI, Query_15.BLDAT, ifthenelse((Query_15.UMREZ != 0), ((Query_15.INV_UPRICE * Query_15.UMREN) / Query_15.UMREZ), Query_15.INV_UPRICE), Query_15.WARES, ifthenelse((Query_15.UMREN != 0), ((Query_15.INV_QTY * Query_15.UMREZ) / Query_15.UMREN), Query_15.INV_QTY), ifthenelse((Query_15.SHKZG = 'S'), (Query_15.WRBTR * -1), Query_15.WRBTR), Query_15.SHKZG, Query_15.ZTERM, Query_15.EBELN, Query_15.EBELP, Query_15.BUKRS, Query_15.BLART, Query_15.LIFNR, nvl(Query_15.EMATN, ''), Query_15.BUDAT, Query_15.KNTTP, Query_15.KNTTX, Query_15.EPSTP, Query_15.PTEXT, Query_15.NETPR, nvl(Query_15.BEDAT, ''), Query_15.CPUDT, Query_15.BUZID FROM Query_15 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '135', "Output_Width_Name" = '196', "Output_Width_Type" = '85', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '46', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_RSEG', "ui_display_name" = 'Query_RSEG_BKPF', "ui_where_text" = '




', "x" = '3174', "y" = '-385')
GUID::'8182961f-f31b-4c02-8bb8-fd90cebcd161' CREATE VIEW Query_RSEG_BKPF( ROWNUM INT  SET( "ui_mapping_text" = 'gen_row_num_by_group( LI_ABAP_INVOICE_RSEG.BSEG_BUKRS,LI_ABAP_INVOICE_RSEG.BSEG_BELNR,LI_ABAP_INVOICE_RSEG.BSEG_GJAHR,LI_ABAP_INVOICE_RSEG.BSEG_BUZEI,LI_ABAP_INVOICE_RSEG.BSEG_EBELN,LI_ABAP_INVOICE_RSEG.BSEG_EBELP )') ,
 MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.MANDT') ,
 BSEG_BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_BUKRS') ,
 BSEG_BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_BELNR') ,
 BSEG_GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_GJAHR') ,
 BSEG_BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_BUZEI') ,
 BSEG_KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_KOART') ,
 BSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_MENGE') ,
 BSEG_EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_EBELN') ,
 BSEG_EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_EBELP') ,
 BSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BSEG_WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.BUZID') ,
 MATNR VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.MATNR') ,
 HKONT VARCHAR(10)  SET( "Description" = 'General Ledger Account', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.HKONT') ,
 AW_BELNR VARCHAR(10)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.AW_BELNR') ,
 AW_GJAHR VARCHAR(4)  SET( "Description" = 'Reference Key', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.AW_GJAHR') ,
 RSEG_INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.RSEG_INV_UPRICE') ,
 RSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.RSEG_WRBTR') ,
 RSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'LI_ABAP_INVOICE_RSEG.RSEG_MENGE')  )
 AS
SELECT gen_row_num_by_group(LI_ABAP_INVOICE_RSEG.BSEG_BUKRS, LI_ABAP_INVOICE_RSEG.BSEG_BELNR, LI_ABAP_INVOICE_RSEG.BSEG_GJAHR, LI_ABAP_INVOICE_RSEG.BSEG_BUZEI, LI_ABAP_INVOICE_RSEG.BSEG_EBELN, LI_ABAP_INVOICE_RSEG.BSEG_EBELP), LI_ABAP_INVOICE_RSEG.MANDT, LI_ABAP_INVOICE_RSEG.BSEG_BUKRS, LI_ABAP_INVOICE_RSEG.BSEG_BELNR, LI_ABAP_INVOICE_RSEG.BSEG_GJAHR, LI_ABAP_INVOICE_RSEG.BSEG_BUZEI, LI_ABAP_INVOICE_RSEG.BSEG_KOART, LI_ABAP_INVOICE_RSEG.BSEG_MENGE, LI_ABAP_INVOICE_RSEG.BSEG_EBELN, LI_ABAP_INVOICE_RSEG.BSEG_EBELP, LI_ABAP_INVOICE_RSEG.BSEG_WRBTR, LI_ABAP_INVOICE_RSEG.BUZID, LI_ABAP_INVOICE_RSEG.MATNR, LI_ABAP_INVOICE_RSEG.HKONT, LI_ABAP_INVOICE_RSEG.AW_BELNR, LI_ABAP_INVOICE_RSEG.AW_GJAHR, LI_ABAP_INVOICE_RSEG.RSEG_INV_UPRICE, LI_ABAP_INVOICE_RSEG.RSEG_WRBTR, LI_ABAP_INVOICE_RSEG.RSEG_MENGE FROM LI_ABAP_INVOICE_RSEG  ORDER BY LI_ABAP_INVOICE_RSEG.BSEG_BUKRS ASC , LI_ABAP_INVOICE_RSEG.BSEG_BELNR ASC , LI_ABAP_INVOICE_RSEG.BSEG_GJAHR ASC , LI_ABAP_INVOICE_RSEG.BSEG_BUZEI ASC , LI_ABAP_INVOICE_RSEG.BSEG_EBELN ASC , LI_ABAP_INVOICE_RSEG.BSEG_EBELP ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '183', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '162', "Output_Width_Name" = '166', "Output_Width_Type" = '108', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '53', "ui_acta_from_schema_0" = 'Query_RSEG_BKPF', "ui_display_name" = 'Query_BK_BS_RS', "ui_where_text" = 'Query_RSEG_BKPF.ROWNUM = 1
#Query_RSEG_BKPF.BSEG_EBELP <> 0
#and (Query_RSEG_BKPF.RSEG_INV_UPRICE <> 0 and Query_RSEG_BKPF.RSEG_WRBTR <> 0 and Query_RSEG_BKPF.RSEG_MENGE <> 0)



', "x" = '3556', "y" = '-386')
GUID::'4f164cc4-b0cc-48ac-b375-f7a26d4a6046' CREATE VIEW Query_BK_BS_RS( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'Query_RSEG_BKPF.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_BUKRS') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_GJAHR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_BUZEI
#Query_BSEG.BUZEI') ,
 KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_KOART') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_MENGE') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_EBELP') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_RSEG_BKPF.BSEG_WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_RSEG_BKPF.BUZID') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_RSEG_BKPF.MATNR') ,
 RSEG_WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'Query_RSEG_BKPF.RSEG_WRBTR') ,
 RSEG_MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_RSEG_BKPF.RSEG_MENGE') ,
 INV_UPRICE DECIMAL(13, 4)  SET( "ui_mapping_text" = 'nvl(Query_RSEG_BKPF.RSEG_INV_UPRICE,0)') ,
 HKONT VARCHAR(10)  SET( "Description" = 'General Ledger Account', "ui_mapping_text" = 'Query_RSEG_BKPF.HKONT')  )
 AS
SELECT Query_RSEG_BKPF.MANDT, Query_RSEG_BKPF.BSEG_BUKRS, Query_RSEG_BKPF.BSEG_BELNR, Query_RSEG_BKPF.BSEG_GJAHR, Query_RSEG_BKPF.BSEG_BUZEI, Query_RSEG_BKPF.BSEG_KOART, Query_RSEG_BKPF.BSEG_MENGE, Query_RSEG_BKPF.BSEG_EBELN, Query_RSEG_BKPF.BSEG_EBELP, Query_RSEG_BKPF.BSEG_WRBTR, Query_RSEG_BKPF.BUZID, Query_RSEG_BKPF.MATNR, Query_RSEG_BKPF.RSEG_WRBTR, Query_RSEG_BKPF.RSEG_MENGE, nvl(Query_RSEG_BKPF.RSEG_INV_UPRICE, 0), Query_RSEG_BKPF.HKONT FROM Query_RSEG_BKPF  WHERE (Query_RSEG_BKPF.ROWNUM = 1)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '180', "Output_Width_Name" = '202', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>385</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '57', "ui_acta_from_schema_0" = 'LI_ABAP_INVOICE_BSEG_BKPF', "ui_display_name" = 'Query_BSEG_ZC_def', "x" = '3181', "y" = '-1143')
GUID::'d6761306-d1d8-4e2a-8992-081584615e94' CREATE VIEW Query_BSEG_ZC_def( MANDT VARCHAR(3)  SET( "Description" = 'Client', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.MANDT') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.BUKRS') ,
 BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.BELNR') ,
 GJAHR NUMERIC(4, 0)  SET( "Description" = 'Fiscal Year', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.GJAHR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.BUZEI') ,
 KOART VARCHAR(1)  SET( "Description" = 'Account Type', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.KOART') ,
 MENGE DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.MENGE') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.EBELP') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.BSEG_WRBTR
#LI_ABAP_INVOICE_BSEG.WRBTR') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.BUZID') ,
 MATNR_SGTXT VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'LI_ABAP_INVOICE_BSEG_BKPF.MATNR_SGTXT')  )
 AS
SELECT LI_ABAP_INVOICE_BSEG_BKPF.MANDT, LI_ABAP_INVOICE_BSEG_BKPF.BUKRS, LI_ABAP_INVOICE_BSEG_BKPF.BELNR, LI_ABAP_INVOICE_BSEG_BKPF.GJAHR, LI_ABAP_INVOICE_BSEG_BKPF.BUZEI, LI_ABAP_INVOICE_BSEG_BKPF.KOART, LI_ABAP_INVOICE_BSEG_BKPF.MENGE, LI_ABAP_INVOICE_BSEG_BKPF.EBELN, LI_ABAP_INVOICE_BSEG_BKPF.EBELP, LI_ABAP_INVOICE_BSEG_BKPF.BSEG_WRBTR, LI_ABAP_INVOICE_BSEG_BKPF.BUZID, LI_ABAP_INVOICE_BSEG_BKPF.MATNR_SGTXT FROM LI_ABAP_INVOICE_BSEG_BKPF 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '90', "y" = '-203')
GUID::'801b525e-3ad1-4288-a32a-43bda3eac09e' CALL ABAP_PROGRAM LI_ABAP_INVOICE_BSIK::'4f5402b1-dfdd-4d5f-a80a-31eac6e9e03c'() OUTPUT(LI_ABAP_INVOICE_BSIK);

ALGUIComment ("InputSchema_WidthProp" = '37', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '50', "x" = '91', "y" = '-650')
GUID::'3409aa63-0b34-421e-a8b0-8a3342a68f8c' CALL ABAP_PROGRAM LI_ABAP_INVOICE_BSAK::'92db3880-33c2-4a33-9ec2-d7a87ac52556'() OUTPUT(LI_ABAP_INVOICE_BSAK);

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '32', "x" = '1546', "y" = '-24')
GUID::'73981f59-ce0e-499e-8e78-195479599c78' CALL ABAP_PROGRAM LI_ABAP_INVOICE_LFA1::'40fa63d1-93c2-4689-b421-1fe75a4fd564'() OUTPUT(LI_ABAP_INVOICE_LFA1);

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '55', "x" = '1587', "y" = '-1735')
GUID::'27f15470-eedc-4bf1-83d6-856a7f9336ae' CALL ABAP_PROGRAM LI_ABAP_INVOICE_LFB1::'2c8cffb5-43d0-42b0-9c14-e643f9c1639b'() OUTPUT(LI_ABAP_INVOICE_LFB1);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '59', "x" = '2847', "y" = '-384')
GUID::'f69b4f54-e38b-4004-a122-00e083f025f5' CALL ABAP_PROGRAM LI_ABAP_INVOICE_RSEG::'06fdd513-d8db-4c9f-8868-2de206d3577a'() OUTPUT(LI_ABAP_INVOICE_RSEG);

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '46', "x" = '5669', "y" = '-1050')
GUID::'76c985f5-2c29-4dee-9060-a13c1e3a5313' CALL ABAP_PROGRAM LI_ABAP_INVOICE_EKKO::'db10f9f3-74d9-4ec8-834f-6f774999ca2f'() OUTPUT(LI_ABAP_INVOICE_EKKO);

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '47', "x" = '2804', "y" = '-1144')
GUID::'7afefc00-d6e1-4585-83d0-ec09b33b7d84' CALL ABAP_PROGRAM LI_ABAP_INVOICE_BSEG_BKPF::'46b088d5-9b92-45a2-a778-ef4b69c40256'() OUTPUT(LI_ABAP_INVOICE_BSEG_BKPF);

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '131', "Output_Width_Type" = '123', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '47', "ui_acta_from_schema_0" = 'Query_17', "ui_display_name" = 'Query_Final', "x" = '6860', "y" = '-756')
GUID::'878f33d0-3c75-4cf5-b856-5f56640cb2ba' CREATE VIEW Query_Final( BELNR VARCHAR(10)  SET( "Description" = 'Accounting Document Number', "ui_mapping_text" = 'Query_17.BELNR') ,
 BUZEI NUMERIC(3, 0)  SET( "Description" = 'Number of Line Item Within Accounting Document', "ui_mapping_text" = 'Query_17.BUZEI') ,
 BLDAT VARCHAR(10)  SET( "Description" = 'Document Date in Document', "ui_mapping_text" = 'Query_17.BLDAT') ,
 INV_UPRICE DECIMAL(14, 4)  SET( "ui_mapping_text" = 'Query_17.INV_UPRICE') ,
 WARES VARCHAR(5)  SET( "Description" = 'Currency Key', "ui_mapping_text" = 'Query_17.WARES') ,
 INV_QTY DECIMAL(13, 3)  SET( "Description" = 'Quantity', "ui_mapping_text" = 'Query_17.INV_QTY') ,
 WRBTR DECIMAL(13, 2)  SET( "Description" = 'Amount in Document Currency', "ui_mapping_text" = 'ifthenelse( Query_17.BELNR = \'0021717464\' and Query_17.BUZEI = \'10\', 0, Query_17.WRBTR)') ,
 SHKZG VARCHAR(1)  SET( "Description" = 'Debit/Credit Indicator', "ui_mapping_text" = 'Query_17.SHKZG') ,
 ZTERM VARCHAR(4)  SET( "Description" = 'Terms of Payment Key', "ui_mapping_text" = 'Query_17.ZTERM') ,
 EBELN VARCHAR(10)  SET( "Description" = 'Purchasing Document Number', "ui_mapping_text" = 'Query_17.EBELN') ,
 EBELP NUMERIC(5, 0)  SET( "Description" = 'Item Number of Purchasing Document', "ui_mapping_text" = 'Query_17.EBELP') ,
 BUKRS VARCHAR(4)  SET( "Description" = 'Company Code', "ui_mapping_text" = 'Query_17.BUKRS') ,
 BLART VARCHAR(2)  SET( "Description" = 'Document Type', "ui_mapping_text" = 'Query_17.BLART') ,
 LIFNR VARCHAR(10)  SET( "Description" = 'Account Number of Vendor or Creditor', "ui_mapping_text" = 'Query_17.LIFNR') ,
 EMATN VARCHAR(50)  SET( "Description" = 'Material Number', "ui_mapping_text" = 'Query_17.EMATN') ,
 BUDAT VARCHAR(10)  SET( "ui_mapping_text" = 'Query_17.BUDAT
#to_char(Query_17.BUDAT,\'YYYYMMDD\')') ,
 KNTTP VARCHAR(1)  SET( "Description" = 'Account Assignment Category', "ui_mapping_text" = 'Query_17.KNTTP') ,
 KNTTX VARCHAR(20)  SET( "Description" = 'Account Assignment Category Description', "ui_mapping_text" = 'Query_17.KNTTX') ,
 EPSTP VARCHAR(1)  SET( "Description" = 'Item Category in Purchasing Document', "ui_mapping_text" = 'Query_17.EPSTP') ,
 PTEXT VARCHAR(20)  SET( "Description" = 'Text for Item Category', "ui_mapping_text" = 'Query_17.PTEXT') ,
 NETPR DECIMAL(11, 2)  SET( "Description" = 'Net Price in Purchasing Document (in Document Currency)', "ui_mapping_text" = 'Query_17.NETPR') ,
 BEDAT VARCHAR(10)  SET( "Description" = 'Purchasing Document Date', "ui_mapping_text" = 'Query_17.BEDAT') ,
 CPUDT VARCHAR(10)  SET( "Description" = 'Day On Which Accounting Document Was Entered', "ui_mapping_text" = 'Query_17.CPUDT') ,
 BUZID VARCHAR(1)  SET( "Description" = 'Identification of the Line Item', "ui_mapping_text" = 'Query_17.BUZID')  )
 AS
SELECT Query_17.BELNR, Query_17.BUZEI, Query_17.BLDAT, Query_17.INV_UPRICE, Query_17.WARES, Query_17.INV_QTY, ifthenelse(((Query_17.BELNR = '0021717464') AND
   (Query_17.BUZEI = '10')), 0, Query_17.WRBTR), Query_17.SHKZG, Query_17.ZTERM, Query_17.EBELN, Query_17.EBELP, Query_17.BUKRS, Query_17.BLART, Query_17.LIFNR, Query_17.EMATN, Query_17.BUDAT, Query_17.KNTTP, Query_17.KNTTX, Query_17.EPSTP, Query_17.PTEXT, Query_17.NETPR, Query_17.BEDAT, Query_17.CPUDT, Query_17.BUZID FROM Query_17 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '45', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '324', "Output_Width_Type" = '131', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '47', "x" = '7430', "y" = '-757')
GUID::'4bd89afa-a144-43f7-af83-da263d529d59' LOAD TABLE TARGET_ODS.DBO.LI_SAP_EXTRACT_INVOICE_TEMP INPUT(Query_Final)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2016">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>replace</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>TARGET_ODS_DBO_LI_SAP_EXTRACT_INVOICE_TEMP.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'TARGET_ODS', "use_unicode_varchar" = 'no');

END
 SET ("Audit" = '<?xml version="1.0" encoding="UTF-8"?>
<Audit>
<AuditObjects>
</AuditObjects>
<AuditRules>
</AuditRules>
<Notifications>
<RaiseException Enabled="true" >
</RaiseException>
<Mail Enabled="false" ></Mail>
<Script Enabled="false" ></Script>
</Notifications>
</Audit>
', "Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ANNOTATION_0" = 'ALGUICOMMENT( x = \'432\', y = \'-93\',ObjectDesc=\'Init Job Parameters\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-432</X><Y>93</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>334</CX><CY>113</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ANNOTATION_1" = 'ALGUICOMMENT( x = \'1015\', y = \'-385\',ObjectDesc=\'Start the process by logging the entry in tSchedule Run\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-1015</X><Y>385</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>479</CX><CY>156</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ANNOTATION_2" = 'ALGUICOMMENT( x = \'1325\', y = \'-577\',ObjectDesc=\'Update tSchedule_run with status "EAI_IN_PROCESS" when SAP Extract is Done\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-1325</X><Y>577</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>513</CX><CY>200</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ANNOTATION_3" = 'ALGUICOMMENT( x = \'2029\', y = \'-990\',ObjectDesc=\'Record Count of tGoodsReceipts . Exception if SAP Extract Records Count and tProduct Records Count doesn\\\'t match\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-2029</X><Y>990</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>537</CX><CY>247</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ANNOTATION_4" = 'ALGUICOMMENT( x = \'2359\', y = \'-1275\',ObjectDesc=\'Update tSchedule_Run with EAI_SUCCESS\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-2359</X><Y>1275</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>153</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ANNOTATION_5" = 'ALGUICOMMENT( x = \'1688\', y = \'-810\',ObjectDesc=\'Data Processing\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-1688</X><Y>810</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>299</CX><CY>112</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Jul 28 19:47:48 2020', "ActaValue_3" = 'Thu Mar  4 22:10:57 2021', "x" = '-1', "y" = '-1')
CREATE SESSION LI_JOB_INVOICE::'7c6e3070-d545-41db-9c21-3ed0f982789c'( )
DECLARE
     GLOBAL $G_ExtractType VARCHAR(1) ;
     GLOBAL $G_ExtractBeginDate DATE ;
     GLOBAL $G_ExtractEndDate DATE ;
     GLOBAL $G_RefetchLastRun VARCHAR(1) ;
     GLOBAL $G_EmailNotification VARCHAR(100) ;
     GLOBAL $G_ObjectID VARCHAR(50) ;
     GLOBAL $G_SiteID VARCHAR(2) ;
     GLOBAL $G_CompanyCode VARCHAR(5) ;
     GLOBAL $G_Language VARCHAR(4) ;
     GLOBAL $G_DefaultBeginDate DATE ;
     GLOBAL $G_DefaultEndDate DATE ;
     GLOBAL $G_RunID VARCHAR(100) ;
     GLOBAL $G_ErrorMessage VARCHAR(500) ;
     GLOBAL $G_RunDateTime DATETIME(9) ;
     GLOBAL $G_RunStatus VARCHAR(15) ;
     GLOBAL $G_ExtractBeginTime VARCHAR(6) ;
     GLOBAL $G_ExtractEndTime VARCHAR(6) ;
     GLOBAL $G_LastExtractType VARCHAR(1) ;
     GLOBAL $G_RunCycle INT ;
     GLOBAL $G_SiteCurrency VARCHAR(3) ;
     GLOBAL $G_ExchangeType VARCHAR(1) ;
     GLOBAL $G_LastRunID VARCHAR(100) ;
     GLOBAL $G_LastRunStatus VARCHAR(15) ;
     GLOBAL $G_LastRunCycle INT ;
     GLOBAL $G_LastExtractBeginDate DATE ;
     GLOBAL $G_LastExtractEndDate DATE ;
     GLOBAL $G_RecordCount INT ;
     GLOBAL $G_SAPRecordCount INT ;
     GLOBAL $G_ErrorNumber INT ;
     GLOBAL $G_DocType VARCHAR(2) ;
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Try_Global', "x" = '112', "y" = '-96')
TRY
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>235</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '397', "y" = '-215')
CALL PLAN WF_Init_Job::'526a269f-5d31-4d3a-9d59-e508d443845c'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Init_Extract_Param_Product', "ui_script_text" = '# Set Global Variables required for tSchedule_Run with ObjectID specific values

$G_SiteCurrency = \'DEM\';
$G_ExchangeType = \'\';
#$G_CompanyCode = \'US80\';
$G_ExchangeType = \'M\';
$G_ExtractBeginTime = \'000000\';
$G_ExtractEndTime = \'240000\';

# Insert below default values for ObjectID specific Global variables

', "x" = '666', "y" = '-318')
BEGIN_SCRIPT
$G_SiteCurrency = 'DEM';$G_ExchangeType = '';$G_ExchangeType = 'M';$G_ExtractBeginTime = '000000';$G_ExtractEndTime = '240000';END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>247</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '969', "y" = '-547')
CALL PLAN WF_StartJob::'27f1b54d-5564-4118-831b-1e523be831b7'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1284', "y" = '-789')
CALL PLAN WF_ExtractComplete::'fb283122-c28a-4ffc-9bd2-d1eeae583881'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1645', "y" = '-934')
CALL PLAN LI_WF_ETL_Invoice::'cbeb72c1-9d24-4e1a-a549-11be11d95c1b'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>269</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Record_Count', "ui_script_text" = '
# Get Record count of data loaded into target table
$G_RecordCount = sql(\'TARGET_ODS\',\'select count(*) FROM tInvoice WHERE runID = \\\'[$G_RunID]\\\'\');

# Compare record count of records extracted from SAP to records inserted into target table
if ($G_RecordCount <> $G_SAPRecordCount)
begin
	raise_exception(\'Record count mismatch between source(SAP): \' || cast($G_SAPRecordCount, \'varchar(15)\') || \' and target(ODS): \' || cast($G_RecordCount, \'varchar(15)\'));
end

# Set eaiStatus = 1 for records extracted in current run
sql(\'TARGET_ODS\',\'update tInvoice set eaiStatus = 1 WHERE runID = \\\'[$G_RunID]\\\'\');

# If current run is a refetch of a previous run, set EAI Status and DW Status to 4 for records from previous Run (LastRunId)
if ($G_RefetchLastRun  = \'Y\')
begin 
  sql(\'TARGET_ODS\',\'update tInvoice set eaistatus = 4, dwstatus = 4 WHERE runID = \\\'[$G_LastRunID]\\\'\');
end
', "x" = '1988', "y" = '-1253')
BEGIN_SCRIPT
$G_RecordCount = sql('TARGET_ODS', 'select count(*) FROM tInvoice WHERE runID = \'[$G_RunID]\'');IF (($G_RecordCount != $G_SAPRecordCount) )
BEGIN
raise_exception(((('Record count mismatch between source(SAP): ' || cast($G_SAPRecordCount, 'varchar(15)')) || ' and target(ODS): ') || cast($G_RecordCount, 'varchar(15)')));END
sql('TARGET_ODS', 'update tInvoice set eaiStatus = 1 WHERE runID = \'[$G_RunID]\'');IF (($G_RefetchLastRun = 'Y') )
BEGIN
sql('TARGET_ODS', 'update tInvoice set eaistatus = 4, dwstatus = 4 WHERE runID = \'[$G_LastRunID]\'');END
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '2314', "y" = '-1447')
CALL PLAN WF_LoadComplete::'d4f56968-d85c-4e2c-9575-56767f0ca5ba'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Catch_Global', "x" = '2806', "y" = '-1447')
CATCH (210101)
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>282</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'GetErrorDetails', "ui_script_text" = '
$G_ErrorNumber = error_number();
$G_ErrorMessage = error_message();
#$G_ErrorTimeStamp = error_timestamp();', "x" = '428', "y" = '-326')
BEGIN_SCRIPT
$G_ErrorNumber = error_number();$G_ErrorMessage = error_message();END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>322</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '982', "y" = '-331')
CALL PLAN WF_ProcessError::'ca59b41d-efe2-49bc-888d-14cf4f31aa6f'();
END

END_TRY
END
 SET ("job_GV_$G_CompanyCode" = '\'0003\'', "job_GV_$G_DefaultBeginDate" = '\'2001/01/01\'', "job_GV_$G_DefaultEndDate" = '\'2099/12/31\'', "job_GV_$G_EmailNotification" = '\'#Excelitas-Data_Warehouse_Team@excelitas.com\'', "job_GV_$G_ExtractBeginDate" = '\'2020/01/01\'', "job_GV_$G_ExtractEndDate" = '\'2021/01/01\'', "job_GV_$G_ExtractType" = '\'D\'', "job_GV_$G_Language" = '\'EN\'', "job_GV_$G_ObjectID" = '\'INVOICE\'', "job_GV_$G_RefetchLastRun" = '\'N\'', "job_GV_$G_SiteID" = '\'V\'', "job_checkpoint_enabled" = 'no', "job_collect_statistics" = 'no', "job_collect_statistics_monitor" = 'no', "job_create_debug_package" = 'no', "job_enable_assemblers" = 'yes', "job_enable_audit" = 'yes', "job_enable_dataquality" = 'yes', "job_export_repo" = 'no', "job_export_reports" = 'no', "job_guid" = '7c6e3070-d545-41db-9c21-3ed0f982789c', "job_isrecoverable" = 'no', "job_mode" = 'Multi-Process', "job_monitor_sample_rate" = '1000', "job_monitor_timer_rate" = '5', "job_name" = 'LI_JOB_INVOICE', "job_print_version" = 'no', "job_testmode_enabled" = 'no', "job_trace_abapquery" = 'no', "job_trace_all" = 'no', "job_trace_ascomm" = 'no', "job_trace_assemblers" = 'no', "job_trace_audit" = 'no', "job_trace_dataflow" = 'yes', "job_trace_idoc_file" = 'no', "job_trace_memory_loader" = 'no', "job_trace_memory_reader" = 'no', "job_trace_optimized_dataflow" = 'no', "job_trace_parallel_execution" = 'no', "job_trace_rfc_function" = 'no', "job_trace_row" = 'no', "job_trace_script" = 'no', "job_trace_session" = 'yes', "job_trace_sql_only" = 'no', "job_trace_sqlfunctions" = 'no', "job_trace_sqlloaders" = 'no', "job_trace_sqlreaders" = 'no', "job_trace_sqltransforms" = 'no', "job_trace_stored_procedure" = 'no', "job_trace_table" = 'no', "job_trace_table_reader" = 'no', "job_trace_transform" = 'no', "job_trace_userfunction" = 'no', "job_trace_usertransform" = 'no', "job_trace_workflow" = 'yes', "job_type" = 'batch', "job_use_statistics" = 'yes', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'NO', "ActaValue_2" = 'Fri Nov  8 00:51:37 2019', "ActaValue_3" = 'Wed Feb 19 22:07:09 2020', "x" = '-1', "y" = '-1')
CREATE PLAN LI_WF_ETL_Invoice::'cbeb72c1-9d24-4e1a-a549-11be11d95c1b'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '515', "y" = '-528')
CALL DATAFLOW LI_DF_GET_SAP_INVOICE::'52ae8c67-cd06-4899-8242-d273f000381c'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>357</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1018', "y" = '-545')
CALL DATAFLOW LI_DF_ETL_INVOICE::'f200f3b8-9758-4a55-aea8-4faec5820266'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Wed Feb 17 23:10:24 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_ExtractComplete::'fb283122-c28a-4ffc-9bd2-d1eeae583881'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>316</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Extract_Complete', "ui_script_text" = '
$G_RunStatus = \'EAI_IN_PROCESS\';
sql(\'TARGET_ODS\', \'UPDATE tSchedule_Run SET RUN_STATUS = \\\'[$G_RunStatus]\\\' WHERE RUN_ID = \\\'[$G_RunID]\\\'\');', "x" = '688', "y" = '-278')
BEGIN_SCRIPT
$G_RunStatus = 'EAI_IN_PROCESS';sql('TARGET_ODS', 'UPDATE tSchedule_Run SET RUN_STATUS = \'[$G_RunStatus]\' WHERE RUN_ID = \'[$G_RunID]\'');END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Feb 16 16:27:40 2016', "ActaValue_3" = 'Sun Dec  6 19:50:12 2020', "x" = '-1', "y" = '-1')
CREATE PLAN WF_Init_Job::'526a269f-5d31-4d3a-9d59-e508d443845c'( )
DECLARE
     $L_LastExtractEndDateString VARCHAR(8) ;
     $L_LastExtractBeginDateString VARCHAR(8) ;
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Init_Job', "ui_script_text" = '$G_RunStatus = \'EAI_NEW\';
$G_RunDateTime = sysdate();
$G_RunID = gen_uuid();
$G_RunCycle = 1;

print( \'SiteID = \' || $G_SiteID );

If (($G_SiteID IS Null) OR ($G_ObjectID IS Null))
begin
	raise_exception(\'SiteID and ObjectID are mandatory fields\');    
end 

if ($G_ExtractType <> \'D\' AND $G_ExtractType <> \'F\')
begin 
	raise_exception(\'Invalid ExtractType specified. Valid values are F and D.\');
end
	
If (($G_ExtractEndDate IS Null))
begin
	$G_ExtractEndDate  = sysdate() - 1;
end 


#Extract Last Run Details
print(\'Fetching last successful job run details\');
#if ($G_LastExtractType = $G_ExtractType and $G_LastRunStatus = \'EAI_ERROR\')
if ($G_RefetchLastRun = \'Y\')
begin
    $G_LastRunStatus  = nvl(sql(\'TARGET_ODS\', \'select RUN_STATUS FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\')\'),\'\');
    $G_LastExtractType   = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_TYPE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\')\'),\'\');
	$G_LastRunID  = nvl(sql(\'TARGET_ODS\', \'select RUN_ID FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' )\'),\'\');
	$L_LastExtractBeginDateString  = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_BEGIN_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\')\'),\'\');
	$L_LastExtractEndDateString   = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_END_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' )\'),\'\');
	$G_LastRunCycle   = cast(sql(\'TARGET_ODS\', \'select RUN_CYCLE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\')\'), \'int\');
end
else 
begin 
	$G_LastRunStatus  = nvl(sql(\'TARGET_ODS\', \'select RUN_STATUS FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'),\'\');
	$G_LastExtractType   = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_TYPE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'),\'\');
	$G_LastRunID  = nvl(sql(\'TARGET_ODS\', \'select RUN_ID FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'),\'\');
	$L_LastExtractBeginDateString  = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_BEGIN_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'),\'\');
	$L_LastExtractEndDateString   = nvl(sql(\'TARGET_ODS\', \'select EXTRACT_END_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'),\'\');
	$G_LastRunCycle   = cast(sql(\'TARGET_ODS\', \'select RUN_CYCLE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_OBJECT = \\\'[$G_ObjectID]\\\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \\\'[$G_SiteID]\\\' AND RUN_STATUS IN (\\\'DW_SUCCESS\\\', \\\'EAI_SUCCESS\\\', \\\'EAI_IN_PROCESS\\\') AND RUN_OBJECT = \\\'[$G_ObjectID]\\\'))\'), \'int\');
end 


$G_LastExtractBeginDate = fn_ConvertStringToDate($L_LastExtractBeginDateString); 
$G_LastExtractEndDate = fn_ConvertStringToDate($L_LastExtractEndDateString); 

print(\'LastRunID : \' || $G_LastRunID);
print(\'LastRunStatus : \' || $G_LastRunStatus);
print(\'LastExtractBeginDate : \' || $G_LastExtractBeginDate);
print(\'LastExtractEndDate : \' || $G_LastExtractEndDate);
print(\'LastRunCycle : \' || cast($G_LastRunCycle, \'varchar(5)\'));
print(\'LastExtractType : \' || cast($G_LastExtractType, \'varchar(5)\'));

#additional checking of the previous job run status
if ($G_LastRunStatus in (\'EAI_NEW\', \'EAI_IN_PROCESS\'))
begin
	raise_exception(\'The last run status of the job is ([$G_LastRunStatus]).\');
end

if ($G_ExtractType = \'D\' and (($G_LastExtractType = \'F\' and $G_LastRunStatus = \'EAI_ERROR\') or $G_LastExtractType IS NULL) AND $G_ExtractEndDate IS NULL)
begin
	raise_exception( \'No historic data load present. Run in Full mode or specify Begin and End date\');	
end

if ($G_ExtractBeginDate IS NULL)
begin
	#if ($G_ExtractType = \'D\' and ($G_LastRunStatus = \'EAI_SUCCESS\' or $G_LastRunStatus = \'DW_SUCCESS\'))
	#if ($G_ExtractType = \'D\' and ($G_LastExtractType = \'F\' OR ($G_LastExtractType = \'D\' AND ($G_LastRunStatus = \'EAI_SUCCESS\' or $G_LastRunStatus = \'DW_SUCCESS\'))))
	if ($G_ExtractType = \'D\' and $G_RefetchLastRun =\'N\')
	begin
		$G_ExtractBeginDate =  $G_LastExtractEndDate + 1;
	end	
	else 
	begin
#		if ($G_LastRunStatus = \'EAI_ERROR\' and $G_LastExtractType = $G_ExtractType)
		if ($G_RefetchLastRun =\'Y\')
		begin
			print(\'Generating new run cycle for job.\');
			$G_RunCycle = $G_LastRunCycle + 1;
			if ($G_RunCycle = 2)
			begin
				$G_RunID = $G_LastRunID || \'R2\';
			end
			else 
			begin
				$G_RunID = substr($G_LastRunID,1,length($G_LastRunID) - length($G_LastRunCycle)) || $G_RunCycle;
			end
			$G_ExtractBeginDate = $G_LastExtractBeginDate ;
			$G_ExtractEndDate = $G_LastExtractEndDate;
			$G_LastRunStatus = \'RE_FETCHED\';
		end
		else 
		begin
			$G_ExtractBeginDate = $G_DefaultBeginDate;
			$G_ExtractEndDate = $G_DefaultEndDate;# sysdate() - 1; #$G_DefaultEndDate;
		end
	end
end 

if ($G_ExtractBeginDate > $G_ExtractEndDate)
begin
	raise_exception(\'ExtractBeginDate ([$G_ExtractBeginDate]) is greater than ExtractEndDate ([$G_ExtractEndDate])\');
end

', "x" = '944', "y" = '-328')
BEGIN_SCRIPT
$G_RunStatus = 'EAI_NEW';$G_RunDateTime = sysdate();$G_RunID = gen_uuid();$G_RunCycle = 1;print(('SiteID = ' || $G_SiteID));IF ((($G_SiteID IS  NULL ) OR
   ($G_ObjectID IS  NULL )) )
BEGIN
raise_exception('SiteID and ObjectID are mandatory fields');END
IF ((($G_ExtractType != 'D') AND
   ($G_ExtractType != 'F')) )
BEGIN
raise_exception('Invalid ExtractType specified. Valid values are F and D.');END
IF (($G_ExtractEndDate IS  NULL ) )
BEGIN
$G_ExtractEndDate = (sysdate() - 1);END
print('Fetching last successful job run details');IF (($G_RefetchLastRun = 'Y') )
BEGIN
$G_LastRunStatus = nvl(sql('TARGET_ODS', 'select RUN_STATUS FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\')'), '');$G_LastExtractType = nvl(sql('TARGET_ODS', 'select EXTRACT_TYPE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\')'), '');$G_LastRunID = nvl(sql('TARGET_ODS', 'select RUN_ID FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' )'), '');$L_LastExtractBeginDateString = nvl(sql('TARGET_ODS', 'select EXTRACT_BEGIN_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\')'), '');$L_LastExtractEndDateString = nvl(sql('TARGET_ODS', 'select EXTRACT_END_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' )'), '');$G_LastRunCycle = cast(sql('TARGET_ODS', 'select RUN_CYCLE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\')'), 'int');END
ELSE
BEGIN
$G_LastRunStatus = nvl(sql('TARGET_ODS', 'select RUN_STATUS FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), '');$G_LastExtractType = nvl(sql('TARGET_ODS', 'select EXTRACT_TYPE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), '');$G_LastRunID = nvl(sql('TARGET_ODS', 'select RUN_ID FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), '');$L_LastExtractBeginDateString = nvl(sql('TARGET_ODS', 'select EXTRACT_BEGIN_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), '');$L_LastExtractEndDateString = nvl(sql('TARGET_ODS', 'select EXTRACT_END_DATE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), '');$G_LastRunCycle = cast(sql('TARGET_ODS', 'select RUN_CYCLE FROM dbo.TSchedule_Run WHERE RUN_OBJECT = \'[$G_ObjectID]\' AND RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_DATE_TIME = (SELECT MAX(RUN_DATE_TIME) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_OBJECT = \'[$G_ObjectID]\' AND EXTRACT_END_DATE = (SELECT MAX(EXTRACT_END_DATE) FROM ODS.DBO.TSCHEDULE_RUN WITH (NOLOCK) WHERE RUN_SITE_ID = \'[$G_SiteID]\' AND RUN_STATUS IN (\'DW_SUCCESS\', \'EAI_SUCCESS\', \'EAI_IN_PROCESS\') AND RUN_OBJECT = \'[$G_ObjectID]\'))'), 'int');END
$G_LastExtractBeginDate = fn_convertstringtodate($L_LastExtractBeginDateString);$G_LastExtractEndDate = fn_convertstringtodate($L_LastExtractEndDateString);print(('LastRunID : ' || $G_LastRunID));print(('LastRunStatus : ' || $G_LastRunStatus));print(('LastExtractBeginDate : ' || $G_LastExtractBeginDate));print(('LastExtractEndDate : ' || $G_LastExtractEndDate));print(('LastRunCycle : ' || cast($G_LastRunCycle, 'varchar(5)')));print(('LastExtractType : ' || cast($G_LastExtractType, 'varchar(5)')));IF ($G_LastRunStatus IN ('EAI_NEW','EAI_IN_PROCESS') )
BEGIN
raise_exception('The last run status of the job is ([$G_LastRunStatus]).');END
IF (((($G_ExtractType = 'D') AND
   (  ((  (($G_LastExtractType = 'F') AND
   ($G_LastRunStatus = 'EAI_ERROR'))  ) OR
   ($G_LastExtractType IS  NULL ))  )) AND
   ($G_ExtractEndDate IS  NULL )) )
BEGIN
raise_exception('No historic data load present. Run in Full mode or specify Begin and End date');END
IF (($G_ExtractBeginDate IS  NULL ) )
BEGIN
IF ((($G_ExtractType = 'D') AND
   ($G_RefetchLastRun = 'N')) )
BEGIN
$G_ExtractBeginDate = ($G_LastExtractEndDate + 1);END
ELSE
BEGIN
IF (($G_RefetchLastRun = 'Y') )
BEGIN
print('Generating new run cycle for job.');$G_RunCycle = ($G_LastRunCycle + 1);IF (($G_RunCycle = 2) )
BEGIN
$G_RunID = ($G_LastRunID || 'R2');END
ELSE
BEGIN
$G_RunID = (substr($G_LastRunID, 1, (length($G_LastRunID) - length($G_LastRunCycle))) || $G_RunCycle);END
$G_ExtractBeginDate = $G_LastExtractBeginDate;$G_ExtractEndDate = $G_LastExtractEndDate;$G_LastRunStatus = 'RE_FETCHED';END
ELSE
BEGIN
$G_ExtractBeginDate = $G_DefaultBeginDate;$G_ExtractEndDate = $G_DefaultEndDate;END
END
END
IF (($G_ExtractBeginDate > $G_ExtractEndDate) )
BEGIN
raise_exception('ExtractBeginDate ([$G_ExtractBeginDate]) is greater than ExtractEndDate ([$G_ExtractEndDate])');END
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'NO', "ActaValue_2" = 'Wed Feb 17 23:10:24 2016', "ActaValue_3" = 'Tue Jan 19 00:15:00 2021', "x" = '-1', "y" = '-1')
CREATE PLAN WF_LoadComplete::'d4f56968-d85c-4e2c-9575-56767f0ca5ba'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>285</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Load_Complete', "ui_script_text" = '
$G_RunStatus = \'EAI_SUCCESS\';
sql(\'TARGET_ODS\', \'UPDATE tSchedule_Run SET RUN_STATUS = \\\'[$G_RunStatus]\\\', RECORD_COUNT = [$G_RecordCount] WHERE RUN_ID = \\\'[$G_RunID]\\\'\');', "x" = '853', "y" = '-331')
BEGIN_SCRIPT
$G_RunStatus = 'EAI_SUCCESS';sql('TARGET_ODS', 'UPDATE tSchedule_Run SET RUN_STATUS = \'[$G_RunStatus]\', RECORD_COUNT = [$G_RecordCount] WHERE RUN_ID = \'[$G_RunID]\'');END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Mar 15 00:49:55 2016', "ActaValue_3" = 'Fri May 20 06:04:11 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_ProcessError::'ca59b41d-efe2-49bc-888d-14cf4f31aa6f'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'CatchError', "ui_script_text" = '
$G_RunStatus = \'EAI_ERROR\';
sql(\'TARGET_ODS\', \'UPDATE tSchedule_Run SET RUN_STATUS = \\\'[$G_RunStatus]\\\' WHERE RUN_ID = \\\'[$G_RunID]\\\'\');

#smtp_to($G_EmailNotification,\'Job Failure:- Object:\' || $G_ObjectID || \' ; Site:\' || $G_SiteID || \' ; RunId:\' || $G_RunID , $G_ErrorMessage, 20, 50); 
smtp_to($G_EmailNotification,\'Job Failure:- Object:\' || $G_ObjectID || \' ; Site:\' || $G_SiteID || \' ; RunId:\' || $G_RunID ||chr(13)||chr(10), $G_ErrorMessage, 20, 50); 

raise_exception(\'An error has occured with the following details. Error Number: \' || $G_ErrorNumber || \'. Error Message: \' || $G_ErrorMessage ); 

', "x" = '666', "y" = '-391')
BEGIN_SCRIPT
$G_RunStatus = 'EAI_ERROR';sql('TARGET_ODS', 'UPDATE tSchedule_Run SET RUN_STATUS = \'[$G_RunStatus]\' WHERE RUN_ID = \'[$G_RunID]\'');smtp_to($G_EmailNotification, ((((((('Job Failure:- Object:' || $G_ObjectID) || ' ; Site:') || $G_SiteID) || ' ; RunId:') || $G_RunID) || chr(13)) || chr(10)), $G_ErrorMessage, 20, 50);raise_exception(((('An error has occured with the following details. Error Number: ' || $G_ErrorNumber) || '. Error Message: ') || $G_ErrorMessage));END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Feb 16 16:27:40 2016', "ActaValue_3" = 'Fri Feb 19 10:13:55 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_StartJob::'27f1b54d-5564-4118-831b-1e523be831b7'( )
DECLARE
     $V_ExtractBeginDateString VARCHAR(8) ;
     $V_ExtractEndDateString VARCHAR(8) ;
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'Start_Job', "ui_script_text" = '
$V_ExtractBeginDateString = fn_ConvertDateToString($G_ExtractBeginDate); 
$V_ExtractEndDateString = fn_ConvertDateToString($G_ExtractEndDate); 


print(\'ExtractType : \' || $G_ExtractType);
print(\'ExtractBeginDate : \' || $G_ExtractBeginDate );
print(\'ExtractEnddate : \' || $G_ExtractEndDate );
print(\'RunStatus : \' || $G_RunStatus);
print(\'RunCycle : \' || $G_RunCycle);



sql(\'TARGET_ODS\', \'INSERT INTO tSchedule_Run  VALUES (\\\'[$G_RunID]\\\',\\\'[$G_SiteID]\\\',\\\'[$G_ObjectID]\\\',\\\'[$G_RunDateTime]\\\',\\\'[$G_RunStatus]\\\',\\\'[$V_ExtractBeginDateString]\\\',\\\'[$G_ExtractBeginTime]\\\',\\\'[$V_ExtractEndDateString]\\\',\\\'[$G_ExtractEndTime]\\\',\\\'[$G_RunCycle]\\\',\\\'[$G_CompanyCode]\\\',\\\'[$G_SiteCurrency]\\\',Null,\\\'[$G_ExchangeType]\\\',Null,Null,\\\'[$G_ExtractType]\\\',0)\');

if ($G_LastRunStatus = \'RE_FETCHED\')
begin 

	sql(\'TARGET_ODS\', \'UPDATE tSchedule_Run SET RUN_STATUS = \\\'[$G_LastRunStatus]\\\' WHERE RUN_ID = \\\'[$G_LastRunID]\\\'\');

end 

', "x" = '400', "y" = '-135')
BEGIN_SCRIPT
$V_ExtractBeginDateString = fn_convertdatetostring($G_ExtractBeginDate);$V_ExtractEndDateString = fn_convertdatetostring($G_ExtractEndDate);print(('ExtractType : ' || $G_ExtractType));print(('ExtractBeginDate : ' || $G_ExtractBeginDate));print(('ExtractEnddate : ' || $G_ExtractEndDate));print(('RunStatus : ' || $G_RunStatus));print(('RunCycle : ' || $G_RunCycle));sql('TARGET_ODS', 'INSERT INTO tSchedule_Run  VALUES (\'[$G_RunID]\',\'[$G_SiteID]\',\'[$G_ObjectID]\',\'[$G_RunDateTime]\',\'[$G_RunStatus]\',\'[$V_ExtractBeginDateString]\',\'[$G_ExtractBeginTime]\',\'[$V_ExtractEndDateString]\',\'[$G_ExtractEndTime]\',\'[$G_RunCycle]\',\'[$G_CompanyCode]\',\'[$G_SiteCurrency]\',Null,\'[$G_ExchangeType]\',Null,Null,\'[$G_ExtractType]\',0)');IF (($G_LastRunStatus = 'RE_FETCHED') )
BEGIN
sql('TARGET_ODS', 'UPDATE tSchedule_Run SET RUN_STATUS = \'[$G_LastRunStatus]\' WHERE RUN_ID = \'[$G_LastRunID]\'');END
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RParallelizable', "ActaName_3" = 'RisScriptValidationFunction', "ActaName_4" = 'RSavedAfterCheckOut', "ActaName_5" = 'RDate_created', "ActaName_6" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'no', "ActaValue_3" = 'no', "ActaValue_4" = 'YES', "ActaValue_5" = 'Wed Feb 17 15:07:33 2016', "ActaValue_6" = 'Wed Feb 17 15:10:19 2016', "InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '50', "ui_script_text" = 'if (is_valid_date($DateValue, \'yyyy.MM.dd\') = 1)
begin 
	$L_StringValue  = to_char($DateValue, \'yyyyMMdd\');
end 
else 
begin
	$L_StringValue  = \'\';
end

Return $L_StringValue ;', "x" = '-1', "y" = '-1')
CREATE FUNCTION fn_ConvertDateToString($DateValue DATE  IN )
RETURNS  VARCHAR(8) 
DECLARE
     $L_StringValue VARCHAR(8) ;
BEGIN
IF ((is_valid_date($DateValue, 'yyyy.MM.dd') = 1) )
BEGIN
$L_StringValue = to_char($DateValue, 'yyyyMMdd');END
ELSE
BEGIN
$L_StringValue = '';END
RETURN $L_StringValue;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RParallelizable', "ActaName_3" = 'RisScriptValidationFunction', "ActaName_4" = 'RSavedAfterCheckOut', "ActaName_5" = 'RDate_created', "ActaName_6" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'no', "ActaValue_3" = 'no', "ActaValue_4" = 'YES', "ActaValue_5" = 'Wed Feb 17 14:16:44 2016', "ActaValue_6" = 'Wed Feb 17 14:33:35 2016', "InputSchema_WidthProp" = '37', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '61', "ui_script_text" = '
if (is_valid_date($DateStringValue, \'yyyyMMdd\') = 1)
begin 
	$L_DateValue  = to_date($DateStringValue, \'yyyyMMdd\');
end 
else 
begin
	$L_DateValue  = null;
end

Return $L_DateValue;', "x" = '-1', "y" = '-1')
CREATE FUNCTION fn_ConvertStringToDate($DateStringValue VARCHAR(8)  IN )
RETURNS  DATE 
DECLARE
     $L_DateValue DATE ;
BEGIN
IF ((is_valid_date($DateStringValue, 'yyyyMMdd') = 1) )
BEGIN
$L_DateValue = to_date($DateStringValue, 'yyyyMMdd');END
ELSE
BEGIN
$L_DateValue =  NULL ;END
RETURN $L_DateValue;
END
